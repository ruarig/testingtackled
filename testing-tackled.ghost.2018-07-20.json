{"db":[{"meta":{"exported_on":1532090404602,"version":"009"},"data":{"posts":[{"id":1,"uuid":"6d519a6e-f8d8-4e32-9439-6445d63b16b7","title":"Welcome to Ghost","slug":"welcome-to-ghost","markdown":"You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at `<your blog URL>/ghost/`. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!\n\n## Getting Started\n\nGhost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!\n\nWriting in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use *shortcuts* to **style** your content. For example, a list:\n\n* Item number one\n* Item number two\n    * A nested item\n* A final item\n\nor with numbers!\n\n1. Remember to buy some milk\n2. Drink the milk\n3. Tweet that I remembered to buy the milk, and drank it\n\n### Links\n\nWant to link to a source? No problem. If you paste in a URL, like http://ghost.org - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to [the Ghost website](http://ghost.org). Neat.\n\n### What about Images?\n\nImages work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:\n\n![The Ghost Logo](https://ghost.org/images/ghost.png)\n\nNot sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:\n\n![A bowl of bananas]\n\n\n### Quoting\n\nSometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!\n\n> Ghost - Just a blogging platform\n\n### Working with Code\n\nGot a streak of geek? We've got you covered there, too. You can write inline `<code>` blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.\n\n    .awesome-thing {\n        display: block;\n        width: 100%;\n    }\n\n### Ready for a Break? \n\nThrow 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.\n\n---\n\n### Advanced Usage\n\nThere's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.\n\n<input type=\"text\" placeholder=\"I'm an input field!\" />\n\nThat should be enough to get you started. Have fun - and let us know what you think :)","mobiledoc":null,"html":"<p>You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at <code>&lt;your blog URL&gt;/ghost/</code>. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!</p>\n\n<h2 id=\"gettingstarted\">Getting Started</h2>\n\n<p>Ghost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!</p>\n\n<p>Writing in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use <em>shortcuts</em> to <strong>style</strong> your content. For example, a list:</p>\n\n<ul>\n<li>Item number one</li>\n<li>Item number two\n<ul><li>A nested item</li></ul></li>\n<li>A final item</li>\n</ul>\n\n<p>or with numbers!</p>\n\n<ol>\n<li>Remember to buy some milk  </li>\n<li>Drink the milk  </li>\n<li>Tweet that I remembered to buy the milk, and drank it</li>\n</ol>\n\n<h3 id=\"links\">Links</h3>\n\n<p>Want to link to a source? No problem. If you paste in a URL, like <a href=\"http://ghost.org\">http://ghost.org</a> - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to <a href=\"http://ghost.org\">the Ghost website</a>. Neat.</p>\n\n<h3 id=\"whataboutimages\">What about Images?</h3>\n\n<p>Images work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:</p>\n\n<p><img src=\"https://ghost.org/images/ghost.png\" alt=\"The Ghost Logo\" /></p>\n\n<p>Not sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:</p>\n\n<h3 id=\"quoting\">Quoting</h3>\n\n<p>Sometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!</p>\n\n<blockquote>\n  <p>Ghost - Just a blogging platform</p>\n</blockquote>\n\n<h3 id=\"workingwithcode\">Working with Code</h3>\n\n<p>Got a streak of geek? We've got you covered there, too. You can write inline <code>&lt;code&gt;</code> blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.</p>\n\n<pre><code>.awesome-thing {\n    display: block;\n    width: 100%;\n}\n</code></pre>\n\n<h3 id=\"readyforabreak\">Ready for a Break?</h3>\n\n<p>Throw 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.</p>\n\n<hr />\n\n<h3 id=\"advancedusage\">Advanced Usage</h3>\n\n<p>There's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.</p>\n\n<p><input type=\"text\" placeholder=\"I'm an input field!\" /></p>\n\n<p>That should be enough to get you started. Have fun - and let us know what you think :)</p>","amp":null,"image":null,"featured":0,"page":0,"status":"draft","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-10-28 13:24:53","created_by":1,"updated_at":"2017-09-17 15:53:41","updated_by":2,"published_at":"2016-10-28 13:24:53","published_by":1},{"id":2,"uuid":"9ce55d7b-1a47-4976-9879-9936be6e5f01","title":"White Rabbits!","slug":"white-rabbits","markdown":"Wait, isn't that what superstitious folk say on the first of each month? Does that translate well into a first blog post? So many questions!\n\nLet's start as we mean to go on, with a (not so) interesting piece of trivia from our good friends at Wikipedia. While I'm at it I can test out these quote things:\n\n>The exact origin of the superstition is unknown, though it was recorded in Notes and Queries as being said by children in 1909\n\nBored of my waffle? Me too! So why am I starting a blog about testing? Who in their right mind blogs about testing? That thing that developers try to avoid!\n\nWell me it seems!\n\nI'm not going to lie; I fell into software testing and software quality as I'm sure many testers do. Nobody comes out of college or university with aspirations of being a tester do they? I failed to follow a lesson I learnt back at school.........\n\n>Don't do a good job at something you don't want to do!\n\nOn this occasion not following my own life lessons seems to have worked out reasonably well. I found a hidden gem, a topic with depth, variety, interesting challenges and most of all, something that perked the interest of my sad little mind, the chance to break things.\n\nI'm certainly not professing that my opinions are correct or even valid for that matter. They are exactly what it says on the tin........ opinions!\n\nI am also not professing to be an expert in testing. I have certainly got more experience in some areas more so than others however what I think I do have in my favour is quite a broad experience across testing, including varying degrees of exposure to automation, manual testing, waterfall, agile, performance and load, BDD along with a variety of tooling.\n\nI also believe I have quite an open mind to new ideas. Whilst sometimes this can lead to chasing the next new shiny idea, it also allows me to challenge things (usually in the form of asking 'why' a lot). That can be in the form of challenging a traditional process or it could be challenging a new idea or concept.\n\nI was also recently hit with a realisation...... not just that I had a big hole in my underpants. I realised that many other testers have fallen into testing (Ok maybe that isn't such a big realisation). However in many of these cases the testers are not working in open minded, forward thinking teams. They are not encouraged to look into the big wide world for new and improved ideas or ways of working. Sometimes this is down to workload, sometimes because of the attitude of the business and sometimes because of technical constraints, whether that be skills or product. There are however many people in the world of testing who just haven't stuck there head above the parapet and looked around at the rest of the industry. They don't challenge things, not because they don't want to, but because the thought has just never crossed their mind.\n\nSo in short, the reason I am really starting this blog is twofold. To act as a mind dump for the weird and wonderful stuff running around my head and to try and spark thinking and debate around testing, even if the debate happens to be how much rubbish I'm typing!\n\nI feel the need to end this first post on a high, therefore please allow the below image to capture your imagination!\n\n![](/content/images/2014/Aug/img37.jpg) ","mobiledoc":null,"html":"<p>Wait, isn't that what superstitious folk say on the first of each month? Does that translate well into a first blog post? So many questions!</p>\n\n<p>Let's start as we mean to go on, with a (not so) interesting piece of trivia from our good friends at Wikipedia. While I'm at it I can test out these quote things:</p>\n\n<blockquote>\n  <p>The exact origin of the superstition is unknown, though it was recorded in Notes and Queries as being said by children in 1909</p>\n</blockquote>\n\n<p>Bored of my waffle? Me too! So why am I starting a blog about testing? Who in their right mind blogs about testing? That thing that developers try to avoid!</p>\n\n<p>Well me it seems!</p>\n\n<p>I'm not going to lie; I fell into software testing and software quality as I'm sure many testers do. Nobody comes out of college or university with aspirations of being a tester do they? I failed to follow a lesson I learnt back at school.........</p>\n\n<blockquote>\n  <p>Don't do a good job at something you don't want to do!</p>\n</blockquote>\n\n<p>On this occasion not following my own life lessons seems to have worked out reasonably well. I found a hidden gem, a topic with depth, variety, interesting challenges and most of all, something that perked the interest of my sad little mind, the chance to break things.</p>\n\n<p>I'm certainly not professing that my opinions are correct or even valid for that matter. They are exactly what it says on the tin........ opinions!</p>\n\n<p>I am also not professing to be an expert in testing. I have certainly got more experience in some areas more so than others however what I think I do have in my favour is quite a broad experience across testing, including varying degrees of exposure to automation, manual testing, waterfall, agile, performance and load, BDD along with a variety of tooling.</p>\n\n<p>I also believe I have quite an open mind to new ideas. Whilst sometimes this can lead to chasing the next new shiny idea, it also allows me to challenge things (usually in the form of asking 'why' a lot). That can be in the form of challenging a traditional process or it could be challenging a new idea or concept.</p>\n\n<p>I was also recently hit with a realisation...... not just that I had a big hole in my underpants. I realised that many other testers have fallen into testing (Ok maybe that isn't such a big realisation). However in many of these cases the testers are not working in open minded, forward thinking teams. They are not encouraged to look into the big wide world for new and improved ideas or ways of working. Sometimes this is down to workload, sometimes because of the attitude of the business and sometimes because of technical constraints, whether that be skills or product. There are however many people in the world of testing who just haven't stuck there head above the parapet and looked around at the rest of the industry. They don't challenge things, not because they don't want to, but because the thought has just never crossed their mind.</p>\n\n<p>So in short, the reason I am really starting this blog is twofold. To act as a mind dump for the weird and wonderful stuff running around my head and to try and spark thinking and debate around testing, even if the debate happens to be how much rubbish I'm typing!</p>\n\n<p>I feel the need to end this first post on a high, therefore please allow the below image to capture your imagination!</p>\n\n<p><img src=\"/content/images/2014/Aug/img37.jpg\" alt=\"\" title=\"\" /> </p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-08-26 10:24:57","created_by":2,"updated_at":"2014-09-09 09:59:49","updated_by":1,"published_at":"2014-08-26 10:28:01","published_by":2},{"id":3,"uuid":"dd7ec52e-a776-4b46-aaeb-4af94582bf60","title":"Testing or Quality Assurance.....","slug":"testing-or-quality-assurance","markdown":"Ok so I've had a few discussions over the past week that got me thinking (It may be painful, and often has dire consequences but I do occasionally partake in this past time).\n\nSo are you testers? Are you QA? Does it matter?\n\nYou could be either or you could be both it depends on your approach and no one approach is right or wrong.\n\nI took to Google to see if there were any wider opinions on this and came across this blog post\nhttp://www.developsense.com/blog/2010/05/testers-get-out-of-the-quality-assurance-business/\n\nNow I'm not suggesting any of his opinions are invalid in any way. Moreover I actually think that his point is perfectly valid, certainly from an attitude/interaction perspective.\n\nGetting the respect from the developer and dealing with things you raise in the correct manner is a large part of testing. Testers are testers for a reason and usually have a given skillset that allows them to be good at validating software.\n\nWhat I think the above blog post misses (or avoids) is that different teams and team dynamics, different development models, different structures etc. do influence where and how testers (or Quality Analysts) should be involved. There isn’t any hard and fast rule around how involved testers should be or how far the influence of said testers extends.\n\nLet’s take an example:\n\n>A traditional development team following Waterfall:\nTesters get provided with requirement documents and write all the test scripts while developers perform their magic. A code complete build gets handed over. Testers cast there critical eye over the software in a structured way and report back defects they find. This may go round a few iterations until everyone is happy to release the software (or until someone high up in the business says it has to go out in its current state).\n\nGenerally a team working in this way will have reasonably structured and very specific roles such as business analyst creating requirements, developers writing code and testers checking that the software works as expected. As such you will usually find accountability directly attributable to a given function for failings and therefore it is in the interests of a tester to ensure they are fully focused on performing the testing as effectively as possible. This isn't necessarily a bad thing but it can sometimes foster a \"that's someone else’s problem/fault\" attitude within the separate entities.\nGiven this scenario, I would generally agree that a tester’s role isn't Quality Assurance but more Quality Control (a part of a quality assurance function but not the whole picture). I've been dragged into talking semantics but I will spare you the 'what is quality?' rant.\n\nOk let’s take an alternative example:\n\n>A forward thinking development team trying to deliver value quickly following Agile:\nA product owner (product team) produce stories in line with the users functional needs. Although the expertise within the team is obvious, the team as a whole are responsible and accountable for delivery. The user stories are fleshed out as they move to the top of the backlog with input from the whole team. The development team (including test expertise and product owner) want to <U><B>target</B></U> a right first time approach rather than a find and fix approach. They release monthly but are targeting moving to continuous delivery and because of a good level of automation have a risk based approach to release (regression) testing, keeping the required level to what is necessary. \n\nIn contrast to the more traditional software development approach, the roles in such teams are not as clearly defined, it is just understood that as a team they are responsible for delivery. Analysis, test and development skillsets are all present in the team however it is important that whilst those with the expertise provide the guidance and advice on their specialist areas, the team input together into decisions and work. In a team such as this, to effectively provide delivery on a regular basis every defect found by test after completion of the development work is a delay. It is in the entire teams interests to ensure all the cogs of the team are working as well as possible towards efficient delivery and where this is not the case it is identified as early as possible.\n\nIn a scenario such as the above I believe it is important that one or more people in the given team have an inquisitive approach, willing to ask the right questions and to challenge whether things are being done with consideration for quality in mind. This is in much the same way as it is important to have someone who is challenging whether the solution is the right technical solution (generally a dev skillset). They are not responsible or accountable (that sits with the team as a whole) but have the right knowledge and experience to ask the right questions. Following this idea, is it farfetched or inaccurate to suggest that in its simplest form you may have the following specialism within a team?\n\n- Team Lead (Scrum master, Enabler or other)\n- Developer (technical guidance/coding)\n- Quality Analyst (product and process quality guidance)\n- Product Owner (Domain and functional guidance)\n\nOk that doesn't necessarily mean that the Quality Analyst role fits nicely into a Quality Assurance bubble. Text books around Quality Assurance widen out the remit of Quality Assurance drastically. It does however demonstrate that a test role involving finding defects is not always representative of the needs of a test/quality role within a software development team. In actual fact the ability to be the team’s quality conscience can be a more preventative way of avoiding defects. This in my honest (albeit biased) opinion blurs the boundary from test into Quality Assurance sufficiently to suggest it cannot be discarded as a part a test/QA role. Helping to build quality in, as well as finding those things that slip through the net, isn't too taboo is it?\n\nI'm sure you are more than bored by now so in keeping with my previous post I leave you with an utterly fascinating random image:\n\n![](/content/images/2014/Sep/Diversion-1.jpg)","mobiledoc":null,"html":"<p>Ok so I've had a few discussions over the past week that got me thinking (It may be painful, and often has dire consequences but I do occasionally partake in this past time).</p>\n\n<p>So are you testers? Are you QA? Does it matter?</p>\n\n<p>You could be either or you could be both it depends on your approach and no one approach is right or wrong.</p>\n\n<p>I took to Google to see if there were any wider opinions on this and came across this blog post <br />\n<a href=\"http://www.developsense.com/blog/2010/05/testers-get-out-of-the-quality-assurance-business/\">http://www.developsense.com/blog/2010/05/testers-get-out-of-the-quality-assurance-business/</a></p>\n\n<p>Now I'm not suggesting any of his opinions are invalid in any way. Moreover I actually think that his point is perfectly valid, certainly from an attitude/interaction perspective.</p>\n\n<p>Getting the respect from the developer and dealing with things you raise in the correct manner is a large part of testing. Testers are testers for a reason and usually have a given skillset that allows them to be good at validating software.</p>\n\n<p>What I think the above blog post misses (or avoids) is that different teams and team dynamics, different development models, different structures etc. do influence where and how testers (or Quality Analysts) should be involved. There isn’t any hard and fast rule around how involved testers should be or how far the influence of said testers extends.</p>\n\n<p>Let’s take an example:</p>\n\n<blockquote>\n  <p>A traditional development team following Waterfall:\n  Testers get provided with requirement documents and write all the test scripts while developers perform their magic. A code complete build gets handed over. Testers cast there critical eye over the software in a structured way and report back defects they find. This may go round a few iterations until everyone is happy to release the software (or until someone high up in the business says it has to go out in its current state).</p>\n</blockquote>\n\n<p>Generally a team working in this way will have reasonably structured and very specific roles such as business analyst creating requirements, developers writing code and testers checking that the software works as expected. As such you will usually find accountability directly attributable to a given function for failings and therefore it is in the interests of a tester to ensure they are fully focused on performing the testing as effectively as possible. This isn't necessarily a bad thing but it can sometimes foster a \"that's someone else’s problem/fault\" attitude within the separate entities. <br />\nGiven this scenario, I would generally agree that a tester’s role isn't Quality Assurance but more Quality Control (a part of a quality assurance function but not the whole picture). I've been dragged into talking semantics but I will spare you the 'what is quality?' rant.</p>\n\n<p>Ok let’s take an alternative example:</p>\n\n<blockquote>\n  <p>A forward thinking development team trying to deliver value quickly following Agile:\n  A product owner (product team) produce stories in line with the users functional needs. Although the expertise within the team is obvious, the team as a whole are responsible and accountable for delivery. The user stories are fleshed out as they move to the top of the backlog with input from the whole team. The development team (including test expertise and product owner) want to <U><B>target</B></U> a right first time approach rather than a find and fix approach. They release monthly but are targeting moving to continuous delivery and because of a good level of automation have a risk based approach to release (regression) testing, keeping the required level to what is necessary. </p>\n</blockquote>\n\n<p>In contrast to the more traditional software development approach, the roles in such teams are not as clearly defined, it is just understood that as a team they are responsible for delivery. Analysis, test and development skillsets are all present in the team however it is important that whilst those with the expertise provide the guidance and advice on their specialist areas, the team input together into decisions and work. In a team such as this, to effectively provide delivery on a regular basis every defect found by test after completion of the development work is a delay. It is in the entire teams interests to ensure all the cogs of the team are working as well as possible towards efficient delivery and where this is not the case it is identified as early as possible.</p>\n\n<p>In a scenario such as the above I believe it is important that one or more people in the given team have an inquisitive approach, willing to ask the right questions and to challenge whether things are being done with consideration for quality in mind. This is in much the same way as it is important to have someone who is challenging whether the solution is the right technical solution (generally a dev skillset). They are not responsible or accountable (that sits with the team as a whole) but have the right knowledge and experience to ask the right questions. Following this idea, is it farfetched or inaccurate to suggest that in its simplest form you may have the following specialism within a team?</p>\n\n<ul>\n<li>Team Lead (Scrum master, Enabler or other)</li>\n<li>Developer (technical guidance/coding)</li>\n<li>Quality Analyst (product and process quality guidance)</li>\n<li>Product Owner (Domain and functional guidance)</li>\n</ul>\n\n<p>Ok that doesn't necessarily mean that the Quality Analyst role fits nicely into a Quality Assurance bubble. Text books around Quality Assurance widen out the remit of Quality Assurance drastically. It does however demonstrate that a test role involving finding defects is not always representative of the needs of a test/quality role within a software development team. In actual fact the ability to be the team’s quality conscience can be a more preventative way of avoiding defects. This in my honest (albeit biased) opinion blurs the boundary from test into Quality Assurance sufficiently to suggest it cannot be discarded as a part a test/QA role. Helping to build quality in, as well as finding those things that slip through the net, isn't too taboo is it?</p>\n\n<p>I'm sure you are more than bored by now so in keeping with my previous post I leave you with an utterly fascinating random image:</p>\n\n<p><img src=\"/content/images/2014/Sep/Diversion-1.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-09-05 14:55:11","created_by":2,"updated_at":"2014-09-09 12:13:49","updated_by":1,"published_at":"2014-09-08 13:13:44","published_by":2},{"id":4,"uuid":"0fe1c481-c214-4da9-887b-63e189075d50","title":"Certification and Standardisation - ISO 29119?","slug":"certification-and-standardisation-so-what-do-you-know","markdown":"I'm going to wade neck deep into the whole ISO 29119 debate; well maybe paddle around the edges. I'm also going to do something that is rare for me which is make my intentions clear right from the very start........... I'm not against ISO 29119!\n\nWhat...... that's blasphemy!\n\n![](/content/images/2014/Oct/shock.jpg) \n\nYou heard correctly I'm not against ISO 29119 however I have little use for it and have no intention of applying it any time soon.\n\nAt the risk of getting splinters from perching on the fence I shall explain.\n\nI don't see any value for me in the ISO 29119 standards. I generally use value as an indicator on many things and ask my team to do the same. If something doesn't seem to be adding value then I expect it's continued usage to be challenged. The reason I don't see any value is ultimately because it doesn't tell me that someone is doing a good job or adding value with testing. In the same way ISQTB doesn't tell me that someone is able to apply what he or she know about testing in a practical way.\n\nI'll be honest....... if I see ISEB or ISQTB certification on a cv it does nothing for me. In fact if I'm honest it leaves me a little concerned.\n\nI don't particularly want my testers to try solving everything with a pre-determined idealistic methodology. I want them to be dynamic thinkers, able to adapt and challenge the software in new ways.\n\nDon't get me wrong I think structure and discipline are important skills for testers but only applied in the right way. Maybe I am driven by my experiences a little to much but in my experience I have found that the testers without any certification and any background in standards compliance have proved to be less constrained and more forward thinking.\n\nIf I really want to put standards around the testing in my team I will identify and apply standards applicable to the needs of the business in line with our own priorities.\n\nFor all that I have said to this point, I am not worried about ISO 29119 or it's usage. If it gives people or teams a nice warm fuzzy feeling about their processes and methods then great, who am I to stand in their way? I don't expect people who wish to adopt the standard will give two hoots what my opinions are. They undoubtedly have reasons.\n\nAm I expecting ISO 29119 to have any major impact on me or the way my team works?\n<i>Not really</i>\n\nWill failure to adopt ISO 29119 provide limitations on the success of my team?\n<i>I highly doubt it</i>\n\nDo I feel threatened by ISO 29119?\n<i>Not even slightly</i>\n\nAm I against ISO 29119?\n<i>Absolutely not, each situation is different and one cannot over estimate the value of standardisation for the dynamics of some industries</i>\n\nI won't be signing any petition but I won't be introducing ISO 29119.\n\nThe splinters are starting to hurt so without further ado.\n\n\n![](/content/images/2014/Oct/World-s-Most-Funniest-Animals-Photos--8-.jpg) \n\n\n\n\n","mobiledoc":null,"html":"<p>I'm going to wade neck deep into the whole ISO 29119 debate; well maybe paddle around the edges. I'm also going to do something that is rare for me which is make my intentions clear right from the very start........... I'm not against ISO 29119!</p>\n\n<p>What...... that's blasphemy!</p>\n\n<p><img src=\"/content/images/2014/Oct/shock.jpg\" alt=\"\" title=\"\" /> </p>\n\n<p>You heard correctly I'm not against ISO 29119 however I have little use for it and have no intention of applying it any time soon.</p>\n\n<p>At the risk of getting splinters from perching on the fence I shall explain.</p>\n\n<p>I don't see any value for me in the ISO 29119 standards. I generally use value as an indicator on many things and ask my team to do the same. If something doesn't seem to be adding value then I expect it's continued usage to be challenged. The reason I don't see any value is ultimately because it doesn't tell me that someone is doing a good job or adding value with testing. In the same way ISQTB doesn't tell me that someone is able to apply what he or she know about testing in a practical way.</p>\n\n<p>I'll be honest....... if I see ISEB or ISQTB certification on a cv it does nothing for me. In fact if I'm honest it leaves me a little concerned.</p>\n\n<p>I don't particularly want my testers to try solving everything with a pre-determined idealistic methodology. I want them to be dynamic thinkers, able to adapt and challenge the software in new ways.</p>\n\n<p>Don't get me wrong I think structure and discipline are important skills for testers but only applied in the right way. Maybe I am driven by my experiences a little to much but in my experience I have found that the testers without any certification and any background in standards compliance have proved to be less constrained and more forward thinking.</p>\n\n<p>If I really want to put standards around the testing in my team I will identify and apply standards applicable to the needs of the business in line with our own priorities.</p>\n\n<p>For all that I have said to this point, I am not worried about ISO 29119 or it's usage. If it gives people or teams a nice warm fuzzy feeling about their processes and methods then great, who am I to stand in their way? I don't expect people who wish to adopt the standard will give two hoots what my opinions are. They undoubtedly have reasons.</p>\n\n<p>Am I expecting ISO 29119 to have any major impact on me or the way my team works? <br />\n<i>Not really</i></p>\n\n<p>Will failure to adopt ISO 29119 provide limitations on the success of my team? <br />\n<i>I highly doubt it</i></p>\n\n<p>Do I feel threatened by ISO 29119? <br />\n<i>Not even slightly</i></p>\n\n<p>Am I against ISO 29119? <br />\n<i>Absolutely not, each situation is different and one cannot over estimate the value of standardisation for the dynamics of some industries</i></p>\n\n<p>I won't be signing any petition but I won't be introducing ISO 29119.</p>\n\n<p>The splinters are starting to hurt so without further ado.</p>\n\n<p><img src=\"/content/images/2014/Oct/World-s-Most-Funniest-Animals-Photos--8-.jpg\" alt=\"\" title=\"\" /> </p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-09-09 14:23:05","created_by":2,"updated_at":"2014-10-06 22:15:10","updated_by":1,"published_at":"2014-10-06 21:56:07","published_by":2},{"id":5,"uuid":"0e041097-7826-43a9-93ad-5e563d1b4722","title":"A Testers Bag of Tricks","slug":"a-testers-bag-of-tricks","markdown":"We all go to work every day carrying a bag under our arm. The bag has everything we could possibly need for every possible scenario we may encounter for our working day as a tester. Each time we encounter a problem we dive arm deep into the bag and pull out the solution to the problem. Right................? No? Just me then?\n\nIf someone really has got a bag with a solution to every problem in (and I'm not talking about a big bottle of Vodka) I'd love to hear from you.\n\nNow for the rest of us who don't have that we will just have to make do with what we have in our heads. What am I waffling on about?\n\nWell I guess I am trying to attach some realism to the daily life of testers. I am asking testers to be ambitious but flexible. To strive for better but solve the problem in front of them.\n\nI regularly read articles or listen to webcasts explaining how the latest new concept or tool in testing will revolutionise the way we test software. How we can automate every behaviour or every regression test? I have lost count of the times I am told that regression testing or GUI automation are prehistoric methods of testing and how anyone still engaging in such activities should catch up with modern software development techniques.\n\nBack in my university days I read a book (yes it was a long time ago but I can just about remember):\n\n>Software Testing In The Real World: Improving The Process\n<br>-Edward Kit\n\n![](/content/images/2014/Sep/index.jpg) \n\nI'm not suggesting you buy and read this book. It was written in 1995 and much of the content was based on available tools and development technologies of the time. It is quite frankly out of date. What does stick in my mind however is the general concept and ideals behind the decision making suggested by Ed. Some of this I understand much better today than I did when I read it, which is really no surprise as I was probably reading it after 4 or 5 pints in the union bar. The pragmatism of making decisions based on the way things are rather than how we would like them to be is likely to yield more success than trying to perfect everything first.\n\nTesters are working in all manner of teams and situations, from Greenfield to brownfield, from VB to Node.JS, from Web solutions to Excel Macros, from small local agile teams to large corporate test teams located across the world........ you get the point. So why then are people surprised when they attempt to implement something that has worked elsewhere without understanding why it has worked elsewhere?\n\nTesters have a wide variety tools and options available to solve different problems, and believe me they will have a wide variety of problems depending on the situation. \n\nI should add at this stage that when I talk about tools, I don't mean specifically 'testing tools'. I am generalising about everything that a tester may have access to and can be used to make a difference. These include processes, training, actual tools, testing techniques, other resources.\n\nWhat testers can do and should do is to really understand the situation they are in, fully understand what tools and options are available to them (look hard and do some serious research) and then look at what they can change or improve that will make a difference.........<u><b>NOT</b></u> what someone else in a completely different situation has changed to make a difference.\n\nProbably the worst thing a tester can do is to accept everything and not try to adapt and change. If you lose the ability to question things then are you losing the thing that makes you a good tester? Strive to become more efficient and to find better ways to improve software quality but do so in a way that works best in your situation!\n\nI'm not sure the level of humour in this post is nearly enough however in keeping with my previous posts please find the token random image:\n\n\n![](/content/images/2014/Sep/winston-1.jpg) \n\n","mobiledoc":null,"html":"<p>We all go to work every day carrying a bag under our arm. The bag has everything we could possibly need for every possible scenario we may encounter for our working day as a tester. Each time we encounter a problem we dive arm deep into the bag and pull out the solution to the problem. Right................? No? Just me then?</p>\n\n<p>If someone really has got a bag with a solution to every problem in (and I'm not talking about a big bottle of Vodka) I'd love to hear from you.</p>\n\n<p>Now for the rest of us who don't have that we will just have to make do with what we have in our heads. What am I waffling on about?</p>\n\n<p>Well I guess I am trying to attach some realism to the daily life of testers. I am asking testers to be ambitious but flexible. To strive for better but solve the problem in front of them.</p>\n\n<p>I regularly read articles or listen to webcasts explaining how the latest new concept or tool in testing will revolutionise the way we test software. How we can automate every behaviour or every regression test? I have lost count of the times I am told that regression testing or GUI automation are prehistoric methods of testing and how anyone still engaging in such activities should catch up with modern software development techniques.</p>\n\n<p>Back in my university days I read a book (yes it was a long time ago but I can just about remember):</p>\n\n<blockquote>\n  <p>Software Testing In The Real World: Improving The Process\n  <br>-Edward Kit</p>\n</blockquote>\n\n<p><img src=\"/content/images/2014/Sep/index.jpg\" alt=\"\" title=\"\" /> </p>\n\n<p>I'm not suggesting you buy and read this book. It was written in 1995 and much of the content was based on available tools and development technologies of the time. It is quite frankly out of date. What does stick in my mind however is the general concept and ideals behind the decision making suggested by Ed. Some of this I understand much better today than I did when I read it, which is really no surprise as I was probably reading it after 4 or 5 pints in the union bar. The pragmatism of making decisions based on the way things are rather than how we would like them to be is likely to yield more success than trying to perfect everything first.</p>\n\n<p>Testers are working in all manner of teams and situations, from Greenfield to brownfield, from VB to Node.JS, from Web solutions to Excel Macros, from small local agile teams to large corporate test teams located across the world........ you get the point. So why then are people surprised when they attempt to implement something that has worked elsewhere without understanding why it has worked elsewhere?</p>\n\n<p>Testers have a wide variety tools and options available to solve different problems, and believe me they will have a wide variety of problems depending on the situation. </p>\n\n<p>I should add at this stage that when I talk about tools, I don't mean specifically 'testing tools'. I am generalising about everything that a tester may have access to and can be used to make a difference. These include processes, training, actual tools, testing techniques, other resources.</p>\n\n<p>What testers can do and should do is to really understand the situation they are in, fully understand what tools and options are available to them (look hard and do some serious research) and then look at what they can change or improve that will make a difference.........<u><b>NOT</b></u> what someone else in a completely different situation has changed to make a difference.</p>\n\n<p>Probably the worst thing a tester can do is to accept everything and not try to adapt and change. If you lose the ability to question things then are you losing the thing that makes you a good tester? Strive to become more efficient and to find better ways to improve software quality but do so in a way that works best in your situation!</p>\n\n<p>I'm not sure the level of humour in this post is nearly enough however in keeping with my previous posts please find the token random image:</p>\n\n<p><img src=\"/content/images/2014/Sep/winston-1.jpg\" alt=\"\" title=\"\" /> </p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-09-10 11:38:57","created_by":2,"updated_at":"2014-09-10 13:54:45","updated_by":1,"published_at":"2014-09-10 13:54:45","published_by":2},{"id":6,"uuid":"aff74e14-ae7c-44db-8505-fec70f414e27","title":"Test First...... Why?","slug":"testing-analysis","markdown":"I'll get straight to the point, why should we think about a test first approach? \n\nWith my glass half full hat on I'll ask another question............ why shouldn't we consider a test first approach?\n\nWhat do I actually mean by test first?\n\n- A common team understanding of what is being asked for by the end user before we start development\n- Reflection of what is being asked for by the end user in the form of acceptance tests\n-\tEnsuring the acceptance tests are reflected in any development work completed (this could be unit tests, integration tests, behavioural tests or just developer testing his code manually)\n\nThere can be a lot more to test first but for simplicity I'll leave it at that.\n\nI often hear some or all of the following questions/statements from people arguing against a test first approach.\n\n<b>It slows development down!</b>\nDoes it really? If you consider rework and bug fixing as part of development, is elapsed time really longer or are we losing any time gained at the start by increasing the risk of a rework/bug fix tail?\n\n<b>It's BA's/Product Owners who are responsible for defining what is developed.</b>\nActually it's the BA/Product Owners job to effectively interpret the customer wants or needs into product behaviour. But it's the whole team who are responsible for turning that behaviour into a product experience. If you are unable to represent the required behaviour in tests (Whether that is due to lack of clarity, lack of clarity or something else) how can you possibly know you are building the correct behaviour into the product? I actually believe that there is a lot of cross over between the BA/Product Owner role and the test role in terms of understanding of the system.\n\n<b>We need to know how it is going to be developed/what it looks like to be able to write tests.</b>\nWhy do you need to know how something is going to be developed in order to write tests. This kind of question leads me to believe you are writing the wrong tests. Don't get me wrong I've worked in teams who get little to no requirements. I've written tests by clicking around the software. Let’s be honest, if as a tester you don't fully understand the expected behaviour before you see the software how can you possibly know whether the software fully reflects the expected behaviour?\n\n<b>So what benefit does test first really give us?</b> \nHopefully I've already answered some points already but I'll give you what I believe to be the most important benefits\n\n- A better quality product as a result of: \n\t- Reduced rework, particularly rework resulting in misunderstanding of expected behaviour. If the developer understands what tests are going to be run against the behaviour of the product there is little excuse for getting it wrong (Human error may still happen but is less likely).\n\t- Better post development testing, as a result of testers spending less time finding, raising and re-testing things that could have been avoided. This time can be invested into really analysing the software and challenging it's boundaries. A greater understanding of what the customer wants allows the tester to make more informed decisions around what testing they feel is most effective.\n\t- More effective development. Developers spending less time trying to understand the requirements allows them to spend more time understanding the best way to develop the requirements.\n- Support for the BA/Product Owner - Understanding how we can test behaviour drives out questions, questions drive out answers and answers to questions provide a more complete picture of a requirement/story/change. I prefer stories and requirements that are a little more lightweight and stick to what the customer wants. The questions driven out within the team will then flesh the detail out.\n- Lower costs. It's well known that the cost of issues and changes to the product, as you get further through the product delivery, becomes higher. The more issues caught early before or during development, the less likelihood of finding issues later post development (in test, or by the customer) and therefore the lower the cost of the delivery.\n- More effective team working. Getting people more involved earlier allows discussions within the team that might otherwise have happened to late or not at all. The inclusive approach that is driven out only helps a team dynamic.\n- Behavioural Driven Development (BDD) techniques. Test first supports the aforementioned development approach. Identifying and understanding tests around the expected behaviour of the software allows testers or developers to write a test framework around the code they are developing which gives immediate feedback on where the software is not meeting expected behaviour. The result is greater confidence within the team that the correct product is being developed.\n\nThe important thing to remember in all of this is that test first is not supposed to be a rigid approach. It is simply about understanding the behaviours of the products that we want to test for before jumping head first into developing the product. How you go about implementing test first is entirely dependent on your situation and should work with you rather than against you.\n\nI find myself reading this post and worrying that I am slowly losing my sense of humour (If you could call it that).\n\nIn light of this overly direct post I will leave you with a reflective and thought provoking picture.\n\n![](/content/images/2014/Sep/IMG_0862-2.JPG)                              \n\n\n\n","mobiledoc":null,"html":"<p>I'll get straight to the point, why should we think about a test first approach? </p>\n\n<p>With my glass half full hat on I'll ask another question............ why shouldn't we consider a test first approach?</p>\n\n<p>What do I actually mean by test first?</p>\n\n<ul>\n<li>A common team understanding of what is being asked for by the end user before we start development</li>\n<li>Reflection of what is being asked for by the end user in the form of acceptance tests</li>\n<li>Ensuring the acceptance tests are reflected in any development work completed (this could be unit tests, integration tests, behavioural tests or just developer testing his code manually)</li>\n</ul>\n\n<p>There can be a lot more to test first but for simplicity I'll leave it at that.</p>\n\n<p>I often hear some or all of the following questions/statements from people arguing against a test first approach.</p>\n\n<p><b>It slows development down!</b> <br />\nDoes it really? If you consider rework and bug fixing as part of development, is elapsed time really longer or are we losing any time gained at the start by increasing the risk of a rework/bug fix tail?</p>\n\n<p><b>It's BA's/Product Owners who are responsible for defining what is developed.</b> <br />\nActually it's the BA/Product Owners job to effectively interpret the customer wants or needs into product behaviour. But it's the whole team who are responsible for turning that behaviour into a product experience. If you are unable to represent the required behaviour in tests (Whether that is due to lack of clarity, lack of clarity or something else) how can you possibly know you are building the correct behaviour into the product? I actually believe that there is a lot of cross over between the BA/Product Owner role and the test role in terms of understanding of the system.</p>\n\n<p><b>We need to know how it is going to be developed/what it looks like to be able to write tests.</b> <br />\nWhy do you need to know how something is going to be developed in order to write tests. This kind of question leads me to believe you are writing the wrong tests. Don't get me wrong I've worked in teams who get little to no requirements. I've written tests by clicking around the software. Let’s be honest, if as a tester you don't fully understand the expected behaviour before you see the software how can you possibly know whether the software fully reflects the expected behaviour?</p>\n\n<p><b>So what benefit does test first really give us?</b> <br />\nHopefully I've already answered some points already but I'll give you what I believe to be the most important benefits</p>\n\n<ul>\n<li>A better quality product as a result of: \n<ul><li>Reduced rework, particularly rework resulting in misunderstanding of expected behaviour. If the developer understands what tests are going to be run against the behaviour of the product there is little excuse for getting it wrong (Human error may still happen but is less likely).</li>\n<li>Better post development testing, as a result of testers spending less time finding, raising and re-testing things that could have been avoided. This time can be invested into really analysing the software and challenging it's boundaries. A greater understanding of what the customer wants allows the tester to make more informed decisions around what testing they feel is most effective.</li>\n<li>More effective development. Developers spending less time trying to understand the requirements allows them to spend more time understanding the best way to develop the requirements.</li></ul></li>\n<li>Support for the BA/Product Owner - Understanding how we can test behaviour drives out questions, questions drive out answers and answers to questions provide a more complete picture of a requirement/story/change. I prefer stories and requirements that are a little more lightweight and stick to what the customer wants. The questions driven out within the team will then flesh the detail out.</li>\n<li>Lower costs. It's well known that the cost of issues and changes to the product, as you get further through the product delivery, becomes higher. The more issues caught early before or during development, the less likelihood of finding issues later post development (in test, or by the customer) and therefore the lower the cost of the delivery.</li>\n<li>More effective team working. Getting people more involved earlier allows discussions within the team that might otherwise have happened to late or not at all. The inclusive approach that is driven out only helps a team dynamic.</li>\n<li>Behavioural Driven Development (BDD) techniques. Test first supports the aforementioned development approach. Identifying and understanding tests around the expected behaviour of the software allows testers or developers to write a test framework around the code they are developing which gives immediate feedback on where the software is not meeting expected behaviour. The result is greater confidence within the team that the correct product is being developed.</li>\n</ul>\n\n<p>The important thing to remember in all of this is that test first is not supposed to be a rigid approach. It is simply about understanding the behaviours of the products that we want to test for before jumping head first into developing the product. How you go about implementing test first is entirely dependent on your situation and should work with you rather than against you.</p>\n\n<p>I find myself reading this post and worrying that I am slowly losing my sense of humour (If you could call it that).</p>\n\n<p>In light of this overly direct post I will leave you with a reflective and thought provoking picture.</p>\n\n<p><img src=\"/content/images/2014/Sep/IMG_0862-2.JPG\" alt=\"\" title=\"\" />                              </p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-09-11 12:55:21","created_by":2,"updated_at":"2015-05-12 08:28:33","updated_by":1,"published_at":"2014-09-25 13:12:18","published_by":2},{"id":7,"uuid":"78206832-bf43-4cde-b41e-26f230bc166d","title":"When is testing not really testing?","slug":"is-script-execution-really-testing","markdown":"By testing I really mean checking. I've long championed a view that testing as a reference in software development is misused. Not always I might add but a little too often. \n\nA recent discussion with a colleague around test/quality role capabilities raised this very issue again and prompted me to take to the keyboard for clarity of thought.\n\n\"Surely it's just semantics\" you might say or maybe \"you are just being pedantic\". Well actually no. It is, in my opinion, the key to really understanding the value and role of both 'testing' and 'checking' in software and subsequently a doorway to becoming a more effective/valuable team member. It also helps understanding of the value and limitations of test tooling.\n\nIt is a widely discussed topic within the testing community. The revered James Bach and Michael Bolton have written a number of blog posts and articles discussing as well as building it into the 'Rapid Software Testing' methodology.\n\nThe article that really reminded me of the importance of this question is a ThoughtWorks article by Rouan Wilsenach passed to me by my aforementioned colleague.\nhttps://www.thoughtworks.com/insights/blog/qa-dead\n\n\n\nThis article discusses the role of a 'tester' in a modern software development team and the why really understanding your role and what value you can bring to the team is so important.\n\nI have regularly had discussions with people suggesting that to be an effective tester one must be engaged in automation or writing unit tests. Sometimes those discussions insist a need to be able to write tests in Python, Ruby <replace with language of choice as appropriate>. I don't disagree that these skills are \"advantageous\" and can help engage in certain team activities however this in itself does not enable a tester. The ability of a person to understand a product and subsequently challenge that product are what really enables a tester. The ability to understand what is being asked for in features and then think 'but what if.........' enables a tester. \n\nWhy is that?\n\nPut simply, automation (code, UI or otherwise) can only <b>CHECK</b> what it is told to <b>CHECK</b>. That isn't going to change until AI really is AI. In a 'cross functional' development team I would expect an abundance of technical ability and people ready to write code. What a team really needs to ask itself is whether it has people with the ability to challenge what is being asked for, challenge the team, challenge the product, ask all the 'what if.......' questions, to find flaws from concept to completion where others wouldn't. In other words, does your team have someone who can really <b>TEST</b> the product.\n\nSimilarly I am fully aware that the world still has many software delivery teams that throw software over an invisible fence to test and expect testers to run through a plethora of functional test scripts to say it’s all ok. Again I would emphasise that what is actually being done is <b>CHECKING</b> that something works how we think it should work. I'm not suggesting this is necessarily a bad thing (although I would question whether there is a more effective way of doing that checking), however the actual art of <b>TESTING</b> comes in how we come up with those scripts. Are you really trying to understand and challenge the product/change or just tick a box to <b>CHECK</b> something works as expected.\n\nBy all means check things are working regularly but ensure you are really testing the product right from inception first.\n\nIt might appear to be a subtle variation but understanding the value of testing versus checking and how they/you can ultimately add the most value to your team should lead to a much brighter and happier place.\n\nI'll leave you with a self portrait!\n![](/content/images/2015/Oct/Beaker.jpg)","mobiledoc":null,"html":"<p>By testing I really mean checking. I've long championed a view that testing as a reference in software development is misused. Not always I might add but a little too often. </p>\n\n<p>A recent discussion with a colleague around test/quality role capabilities raised this very issue again and prompted me to take to the keyboard for clarity of thought.</p>\n\n<p>\"Surely it's just semantics\" you might say or maybe \"you are just being pedantic\". Well actually no. It is, in my opinion, the key to really understanding the value and role of both 'testing' and 'checking' in software and subsequently a doorway to becoming a more effective/valuable team member. It also helps understanding of the value and limitations of test tooling.</p>\n\n<p>It is a widely discussed topic within the testing community. The revered James Bach and Michael Bolton have written a number of blog posts and articles discussing as well as building it into the 'Rapid Software Testing' methodology.</p>\n\n<p>The article that really reminded me of the importance of this question is a ThoughtWorks article by Rouan Wilsenach passed to me by my aforementioned colleague. <br />\n<a href=\"https://www.thoughtworks.com/insights/blog/qa-dead\">https://www.thoughtworks.com/insights/blog/qa-dead</a></p>\n\n<p>This article discusses the role of a 'tester' in a modern software development team and the why really understanding your role and what value you can bring to the team is so important.</p>\n\n<p>I have regularly had discussions with people suggesting that to be an effective tester one must be engaged in automation or writing unit tests. Sometimes those discussions insist a need to be able to write tests in Python, Ruby <replace with language of choice as appropriate>. I don't disagree that these skills are \"advantageous\" and can help engage in certain team activities however this in itself does not enable a tester. The ability of a person to understand a product and subsequently challenge that product are what really enables a tester. The ability to understand what is being asked for in features and then think 'but what if.........' enables a tester. </p>\n\n<p>Why is that?</p>\n\n<p>Put simply, automation (code, UI or otherwise) can only <b>CHECK</b> what it is told to <b>CHECK</b>. That isn't going to change until AI really is AI. In a 'cross functional' development team I would expect an abundance of technical ability and people ready to write code. What a team really needs to ask itself is whether it has people with the ability to challenge what is being asked for, challenge the team, challenge the product, ask all the 'what if.......' questions, to find flaws from concept to completion where others wouldn't. In other words, does your team have someone who can really <b>TEST</b> the product.</p>\n\n<p>Similarly I am fully aware that the world still has many software delivery teams that throw software over an invisible fence to test and expect testers to run through a plethora of functional test scripts to say it’s all ok. Again I would emphasise that what is actually being done is <b>CHECKING</b> that something works how we think it should work. I'm not suggesting this is necessarily a bad thing (although I would question whether there is a more effective way of doing that checking), however the actual art of <b>TESTING</b> comes in how we come up with those scripts. Are you really trying to understand and challenge the product/change or just tick a box to <b>CHECK</b> something works as expected.</p>\n\n<p>By all means check things are working regularly but ensure you are really testing the product right from inception first.</p>\n\n<p>It might appear to be a subtle variation but understanding the value of testing versus checking and how they/you can ultimately add the most value to your team should lead to a much brighter and happier place.</p>\n\n<p>I'll leave you with a self portrait! <br />\n<img src=\"/content/images/2015/Oct/Beaker.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2014-09-11 12:57:07","created_by":2,"updated_at":"2015-10-16 12:36:12","updated_by":1,"published_at":"2015-10-16 12:36:12","published_by":2},{"id":8,"uuid":"3c022929-9640-415f-b51c-7a5ac73c02cd","title":"Horrible horrible metrics","slug":"what-is-quality-really","markdown":"Metrics are a bad thing right? They are anti-Agile and an unnecessary waste of time!\n\nIn my honest opinion that is not entirely true. Ultimately metrics are just data, data handled correctly give us facts and facts help drive more accurate decision making and continuous improvement. Handled correctly they can also generate confidence in the business that will help the development team to focus on producing effective and valuable software.\n\nLet me start by making it clear that metrics in no way replace the need to know and trust teams. Individuals and interactions over process and tooling absolutely holds true and if you are gathering metrics to use as a stick then stop. Using metrics against people will leave you with a whole pile of useless skewed data, a team of individuals driven to shape metrics rather than deliver value and a big hole in your pocket in the shape of quality costs.\n\nSo how do I use metrics to help whilst avoiding all of the above pit falls? Well I'm not going to give you a list of useful metrics to use but I will try to use my experience, opinions and some examples to help you to understand and identify the metrics that work for you.\n\nThe first thing you need to do is make sure you understand your teams, what they value and what challenges they have. Most effective software development teams will do some form of retrospective and unless you are clear on what this 'data' is telling you then don't go looking elsewhere or you may find yourself re-inventing the wheel and telling people what they already know. \n\nThe second thing to look at is the gaps. What 'data' do you need that you don't have already but will tell you a valuable story? It's important that it tells you an accurate and valuable story or you will just be wasting time.\nAn example of a metric that tells you very little:\n\n* **Number of unit tests written** - This is a bit like judging how good a personal secretary is based on how many words per minute they can type. Metrics like this are subject to the 'observer effect' where by if they know someone is tracking the number of unit tests written, developers are likely to include many irrelevant or useless tests just to get the number of tests up. So actually you are increasing the amount unproductive time for data which only tells you that unit tests are being created as opposed to what impact they are having on the business. You are also looking at micro metrics and in my experience looking at metrics from a micro perspective will always have a much higher cost to value ratio.\n\nAn example of a metric that tells you a little more:\n\n* **Value delivered to customers** - A lot of effective teams ask product owners and BA's to add relative value to user stories. Software is all about the value it delivers to customers after all. There are still things we don't know about the software being delivered however we can see a lot about the productivity of a ***team*** and we have a pretty good idea of how valuable the software release is to the business. You will probably also notice that for a relatively low cost you are getting much more value out of your metric.\n\nOnce you have a good perspective of what gaps you have and what data you think will give you a valuable view of those gaps, I would encourage anyone to discuss it all with the teams as opposed to trying to gather the data secretly. I don't care what level you are at, sitting down with the teams and helping them to understand why you think the metrics will be valuable, what it means to the team and what it means to the business and listening to the feedback will surprise you. What you are likely to get from the developers once they have a better understanding is likely to be:\n\n* Is there a better or more valuable bit of data or metric to tell the story better?\n* What's the most efficient way of getting the data? I will come on to automating metric gathering shortly.\n* Greater trust and respect - Engaging the teams and helping them to understand will ultimately avoid the perception of the data being used as a stick but also encourage them to make use of the data to improve.\n\nSo you have a good idea of the metric(s) you think will tell a valuable story, have engaged the teams and you want to start gathering the metrics? Wait, this could be really painful pulling all of this data regularly! Ah well this is where investing the right time, effort and skills could be prove its worth. Aim to automate as much of the data gathering and metric presentation as possible seeking the help of whoever you can. Trust me when I say that getting this right at the start will pay for itself many times over, very quickly.\n\nOnce you are ready to start pulling the data set expectations appropriately. Use metrics as a positive forward thinking tool to improve. To this end create a baseline and make a clear statement that you are only looking at metrics from the baseline forward. The world is always changing and it is important that you don't fall into the trap of trying to drive continual improvement based on the distant past. Focus on the here and now and how that changes going forward. \nI would also start collecting the data well in advance of any expectations around reporting on the data to other groups. This will do two things:\n\n* It will allow you to get a good grip of whether it is actually telling you what you thought it would tell you before you have to explain it to others (think of it like a proof of concept). Don't be afraid of of dropping metrics that on reflection don't actually tell you anything valuable.\n* You will be able to identify consistent trends. It is really important when using metrics that you consider trends over a period of time. Data for an isolated moment in time is hugely susceptible to one off skews as a result of something that is unlikely to ever happen again. What you should be looking for in metrics is a trend of continuous improvement........... A positive message of valuable changes driving out a continually improving product.\n\nFinally I would encourage anyone making use of metrics to be open minded about the story you uncover. Avoid letting preconceptions of what you might find in the metrics to drive you to manipulate the findings. They may re-enforce what you already knew but they may equally tell you a valuable story that you weren't expecting.\nUnderstand the results, put appropriate context around the metrics and discuss the findings with the teams, but absolutely do not ignore the surprises. If you are going to invest the time into this and you want to get value out of it then be prepared to learn from all of the data not just the parts that meet a preconceived agenda. There is an argument that you learn much more from what you didn't already know than what you did know.\n\nHopefully I have not come across particularly pro or anti metrics. Used correctly they can be a powerful ally but misused/misunderstood they have the potential to be costly and divisive.\n\nOn a lighter note a bit of Dilbert metrics humour:\n\n![](http://1fedpb39ar122rmpto4bdrcc-wpengine.netdna-ssl.com/wp-content/uploads/How-not-to-Calculate-Project-Metrics.png)","mobiledoc":null,"html":"<p>Metrics are a bad thing right? They are anti-Agile and an unnecessary waste of time!</p>\n\n<p>In my honest opinion that is not entirely true. Ultimately metrics are just data, data handled correctly give us facts and facts help drive more accurate decision making and continuous improvement. Handled correctly they can also generate confidence in the business that will help the development team to focus on producing effective and valuable software.</p>\n\n<p>Let me start by making it clear that metrics in no way replace the need to know and trust teams. Individuals and interactions over process and tooling absolutely holds true and if you are gathering metrics to use as a stick then stop. Using metrics against people will leave you with a whole pile of useless skewed data, a team of individuals driven to shape metrics rather than deliver value and a big hole in your pocket in the shape of quality costs.</p>\n\n<p>So how do I use metrics to help whilst avoiding all of the above pit falls? Well I'm not going to give you a list of useful metrics to use but I will try to use my experience, opinions and some examples to help you to understand and identify the metrics that work for you.</p>\n\n<p>The first thing you need to do is make sure you understand your teams, what they value and what challenges they have. Most effective software development teams will do some form of retrospective and unless you are clear on what this 'data' is telling you then don't go looking elsewhere or you may find yourself re-inventing the wheel and telling people what they already know. </p>\n\n<p>The second thing to look at is the gaps. What 'data' do you need that you don't have already but will tell you a valuable story? It's important that it tells you an accurate and valuable story or you will just be wasting time. <br />\nAn example of a metric that tells you very little:</p>\n\n<ul>\n<li><strong>Number of unit tests written</strong> - This is a bit like judging how good a personal secretary is based on how many words per minute they can type. Metrics like this are subject to the 'observer effect' where by if they know someone is tracking the number of unit tests written, developers are likely to include many irrelevant or useless tests just to get the number of tests up. So actually you are increasing the amount unproductive time for data which only tells you that unit tests are being created as opposed to what impact they are having on the business. You are also looking at micro metrics and in my experience looking at metrics from a micro perspective will always have a much higher cost to value ratio.</li>\n</ul>\n\n<p>An example of a metric that tells you a little more:</p>\n\n<ul>\n<li><strong>Value delivered to customers</strong> - A lot of effective teams ask product owners and BA's to add relative value to user stories. Software is all about the value it delivers to customers after all. There are still things we don't know about the software being delivered however we can see a lot about the productivity of a <strong><em>team</em></strong> and we have a pretty good idea of how valuable the software release is to the business. You will probably also notice that for a relatively low cost you are getting much more value out of your metric.</li>\n</ul>\n\n<p>Once you have a good perspective of what gaps you have and what data you think will give you a valuable view of those gaps, I would encourage anyone to discuss it all with the teams as opposed to trying to gather the data secretly. I don't care what level you are at, sitting down with the teams and helping them to understand why you think the metrics will be valuable, what it means to the team and what it means to the business and listening to the feedback will surprise you. What you are likely to get from the developers once they have a better understanding is likely to be:</p>\n\n<ul>\n<li>Is there a better or more valuable bit of data or metric to tell the story better?</li>\n<li>What's the most efficient way of getting the data? I will come on to automating metric gathering shortly.</li>\n<li>Greater trust and respect - Engaging the teams and helping them to understand will ultimately avoid the perception of the data being used as a stick but also encourage them to make use of the data to improve.</li>\n</ul>\n\n<p>So you have a good idea of the metric(s) you think will tell a valuable story, have engaged the teams and you want to start gathering the metrics? Wait, this could be really painful pulling all of this data regularly! Ah well this is where investing the right time, effort and skills could be prove its worth. Aim to automate as much of the data gathering and metric presentation as possible seeking the help of whoever you can. Trust me when I say that getting this right at the start will pay for itself many times over, very quickly.</p>\n\n<p>Once you are ready to start pulling the data set expectations appropriately. Use metrics as a positive forward thinking tool to improve. To this end create a baseline and make a clear statement that you are only looking at metrics from the baseline forward. The world is always changing and it is important that you don't fall into the trap of trying to drive continual improvement based on the distant past. Focus on the here and now and how that changes going forward. <br />\nI would also start collecting the data well in advance of any expectations around reporting on the data to other groups. This will do two things:</p>\n\n<ul>\n<li>It will allow you to get a good grip of whether it is actually telling you what you thought it would tell you before you have to explain it to others (think of it like a proof of concept). Don't be afraid of of dropping metrics that on reflection don't actually tell you anything valuable.</li>\n<li>You will be able to identify consistent trends. It is really important when using metrics that you consider trends over a period of time. Data for an isolated moment in time is hugely susceptible to one off skews as a result of something that is unlikely to ever happen again. What you should be looking for in metrics is a trend of continuous improvement........... A positive message of valuable changes driving out a continually improving product.</li>\n</ul>\n\n<p>Finally I would encourage anyone making use of metrics to be open minded about the story you uncover. Avoid letting preconceptions of what you might find in the metrics to drive you to manipulate the findings. They may re-enforce what you already knew but they may equally tell you a valuable story that you weren't expecting. <br />\nUnderstand the results, put appropriate context around the metrics and discuss the findings with the teams, but absolutely do not ignore the surprises. If you are going to invest the time into this and you want to get value out of it then be prepared to learn from all of the data not just the parts that meet a preconceived agenda. There is an argument that you learn much more from what you didn't already know than what you did know.</p>\n\n<p>Hopefully I have not come across particularly pro or anti metrics. Used correctly they can be a powerful ally but misused/misunderstood they have the potential to be costly and divisive.</p>\n\n<p>On a lighter note a bit of Dilbert metrics humour:</p>\n\n<p><img src=\"http://1fedpb39ar122rmpto4bdrcc-wpengine.netdna-ssl.com/wp-content/uploads/How-not-to-Calculate-Project-Metrics.png\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2015-02-03 04:46:59","created_by":2,"updated_at":"2016-10-11 13:04:27","updated_by":1,"published_at":"2016-10-11 13:04:27","published_by":2},{"id":9,"uuid":"923b5e2c-7fb2-438d-b452-d02161f25f66","title":"Testing......where is the excitement?","slug":"testing-wheres-the-excitement","markdown":"It's been a while. No excuses I've just struggled to make the time to stop and think. So I find myself with many months worth of thoughts all gathered in chaos in my head. I'll apologise in advance if this post comes out a little chaotic.\nThis may come across a little like I'm Microsoft bashing but that's not my intention at all. Basically a simple trip down to the Microsoft dev briefing with a few colleagues brought a number of 'things' that have been frustrating me recently into focus. I attended the dev briefing, maybe a little naively, with a positive mind-set and the intention of bringing some learning’s back with me, despite the cynicism of one of my colleagues. The dev briefing was billed as an on stage demonstration of rapid software development and software development practices.\n\nSo we all know Microsoft love to demo new tech right? But they went to great lengths to sell the fact that this would be an effective lifecycle on stage, hell they even had an Agile and a Quality guy in the line-up.\nTo these ends I was to be disappointed - The 'Agile guy' focused much of his time on a demo of the Visual Studio Online built in kanban board and the 'Quality guy' suddenly became the 'Dev ops guy' with much of the focus on dev ops technology for deployment quality. \n\nI'll be brutally honest and say that after the 'Agile guy' had finished, having barely touched on the real value of Agile practises and with no hint of discussing the value/importance of interpreting the ask into stories and acceptance criteria, I found myself taking to twitter with more than a smattering of my own cynicism. We'd done the 'Agile guy' and I had yet to actually pick up what they were intending to build. \n\nI'll spare you the details but the tone of the day didn't get much better from a 'demonstration of effective software development on stage' perspective. That's not to say that the day was boring, far from it. They demonstrated some interesting tech and development concepts but it really did feel like a series of product and technology demo's as opposed to a joined up development cycle.\n\nWhen they introduced the 'Quality guy' as the 'Dev ops guy' I'll be honest, my mind drifted. Useful stuff but I found myself questioning why they had either chosen to or found difficult, bringing quality and test to the forefront of a demonstration of software development, after all we live in a world of test and behavioural driven development. \n\n1) Was it the fact that the audience were overwhelmingly developers (only three hands including my own went up when they asked how many testers were in present)? \n\n2) Was it because Microsoft were pushing an Agenda around technology and tooling and nothing new and ground breaking had come from Microsoft in the test/quality arena recently? \n\n3) Was it just that quality and testing disciplines don't excite people, let alone a room full of developers?\n\n4) Is the importance of quality practices, test first thinking and discipline in modern development still so widely misunderstood?\n\nThis started me thinking about recent examples where I have found myself increasingly frustrated at a lack of willingness from developers (not to tar all developers with the same brush) to embrace quality and testing as additional strings to their development bow. What has seemed, at times, like a complete failing to really challenge themselves to become more rounded developers, writing more cohesive and stable code by merely getting more involved in quality and test thinking.\n\nThe combination of moments of frustration culminating in what I perceived (rightly or wrongly) to be the behemoth that is Microsoft 'avoiding' quality and test, makes me wonder whether this frustrating minority, really are a minority. I'm not suggesting test experts no longer have a place, that place has merely shifted towards quality as a whole rather than specifically test. But why, despite all of the evidence telling us how embracing testing practices into software development only proves to enhance the quality of code written, do so many developers still see testing as menial and degrading?\n\nI’d love to say I know the answer. Right now I’m frustrated however I hope to channel that frustration into looking at new ways to engage developers to help them to understand and embrace quality and test rather than looking on it with suspicion.\n\nLittle quiz to end the post..... Who can tell me where the below picture is taken?\n![](/content/images/2015/May/Photo-0023.jpg)\n\n","mobiledoc":null,"html":"<p>It's been a while. No excuses I've just struggled to make the time to stop and think. So I find myself with many months worth of thoughts all gathered in chaos in my head. I'll apologise in advance if this post comes out a little chaotic. <br />\nThis may come across a little like I'm Microsoft bashing but that's not my intention at all. Basically a simple trip down to the Microsoft dev briefing with a few colleagues brought a number of 'things' that have been frustrating me recently into focus. I attended the dev briefing, maybe a little naively, with a positive mind-set and the intention of bringing some learning’s back with me, despite the cynicism of one of my colleagues. The dev briefing was billed as an on stage demonstration of rapid software development and software development practices.</p>\n\n<p>So we all know Microsoft love to demo new tech right? But they went to great lengths to sell the fact that this would be an effective lifecycle on stage, hell they even had an Agile and a Quality guy in the line-up. <br />\nTo these ends I was to be disappointed - The 'Agile guy' focused much of his time on a demo of the Visual Studio Online built in kanban board and the 'Quality guy' suddenly became the 'Dev ops guy' with much of the focus on dev ops technology for deployment quality. </p>\n\n<p>I'll be brutally honest and say that after the 'Agile guy' had finished, having barely touched on the real value of Agile practises and with no hint of discussing the value/importance of interpreting the ask into stories and acceptance criteria, I found myself taking to twitter with more than a smattering of my own cynicism. We'd done the 'Agile guy' and I had yet to actually pick up what they were intending to build. </p>\n\n<p>I'll spare you the details but the tone of the day didn't get much better from a 'demonstration of effective software development on stage' perspective. That's not to say that the day was boring, far from it. They demonstrated some interesting tech and development concepts but it really did feel like a series of product and technology demo's as opposed to a joined up development cycle.</p>\n\n<p>When they introduced the 'Quality guy' as the 'Dev ops guy' I'll be honest, my mind drifted. Useful stuff but I found myself questioning why they had either chosen to or found difficult, bringing quality and test to the forefront of a demonstration of software development, after all we live in a world of test and behavioural driven development. </p>\n\n<p>1) Was it the fact that the audience were overwhelmingly developers (only three hands including my own went up when they asked how many testers were in present)? </p>\n\n<p>2) Was it because Microsoft were pushing an Agenda around technology and tooling and nothing new and ground breaking had come from Microsoft in the test/quality arena recently? </p>\n\n<p>3) Was it just that quality and testing disciplines don't excite people, let alone a room full of developers?</p>\n\n<p>4) Is the importance of quality practices, test first thinking and discipline in modern development still so widely misunderstood?</p>\n\n<p>This started me thinking about recent examples where I have found myself increasingly frustrated at a lack of willingness from developers (not to tar all developers with the same brush) to embrace quality and testing as additional strings to their development bow. What has seemed, at times, like a complete failing to really challenge themselves to become more rounded developers, writing more cohesive and stable code by merely getting more involved in quality and test thinking.</p>\n\n<p>The combination of moments of frustration culminating in what I perceived (rightly or wrongly) to be the behemoth that is Microsoft 'avoiding' quality and test, makes me wonder whether this frustrating minority, really are a minority. I'm not suggesting test experts no longer have a place, that place has merely shifted towards quality as a whole rather than specifically test. But why, despite all of the evidence telling us how embracing testing practices into software development only proves to enhance the quality of code written, do so many developers still see testing as menial and degrading?</p>\n\n<p>I’d love to say I know the answer. Right now I’m frustrated however I hope to channel that frustration into looking at new ways to engage developers to help them to understand and embrace quality and test rather than looking on it with suspicion.</p>\n\n<p>Little quiz to end the post..... Who can tell me where the below picture is taken? <br />\n<img src=\"/content/images/2015/May/Photo-0023.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2015-05-06 20:37:21","created_by":2,"updated_at":"2015-05-12 08:31:17","updated_by":1,"published_at":"2015-05-06 22:22:06","published_by":2},{"id":10,"uuid":"7cb53204-7cd2-4776-b974-9e0a88496764","title":"Automation - The Saviour?","slug":"automation-the-saviour","markdown":"So you want to automate your testing to solve all of your testing woes? Because automated tests will suddenly do the work of 200 testers in a few hours right?\n\nWell not quite. There are many things to consider and understand if you really want to make the right decision on automation for your team. Investing in test automation has a cost and this cost can get higher if you don't really understand what you are getting into. That said test automation can bring a lot of value and the aim of anyone investing in test automation is to ensure the value you get is higher than the cost. This is by no means an exhaustive list and I don't profess to be an expert. This is however based on a lot of experience (both positive and negative) and the result of lots of dead ends and soul searching.\n\n1) The first thing I would encourage you to consider is what automated tests you want. Think about the how quickly you want your tests to give you pass/fail feedback. Unit tests and code based testing will give you the quickest feedback loop as they can be run every time code is checked in. In my experience I would encourage any team to have a target of getting as much of your automated testing into the code as possible. If you have a challenge doing this for any one of a million reasons then re-consider again and again looking at ways you can get your code into a suitable state to write code based tests against. If you can find a way of achieving this as early as possible you will save yourself a lot of pain. \nIf you hit a brick wall and feel that an automated testing tool (non code based tests) are your only option for some of the testing (there can be a number of reasons for this such as state of code if it's been developed over a number of years or a lot of logic sitting in the UI layer) then look at whether your product has API's or endpoints you can hook into? If you can automate avoiding the UI then you should for the majority of your tests as you will avoid a lot of maintenance overhead when the product changes (which it inevitably will). Use the testing triangle below as a guide to how much of your testing should be covered where. In the below triangle the cost of testing goes up the higher up the triangle you go but the coverage is higher towards the bottom.\n![](/content/images/2016/Mar/testingtriangle1.png)\n\nUI automation can still be valuable and can give a better user representation in some cases. If you are absolutely adamant you need UI automation, keep it to thin stripes through the product and avoid XY co-ordinates for actions, hopefully therefore ensuring minimal susceptibility to changes in the software.\nAlso consider what the tests are testing for. Automated testing might apply to performance and load and therefore you need to look at it from a slightly different angle. For load tests in particular you will generally be looking at specialised tools to build the load using agents/virtual users or similar. The question becomes more about how important these tests are for you. Will your software ever get really heavy load or will understand performance for a single user be enough.\nMost importantly of all, just because you may not be writing code based automated tests, remember the golden rule about feedback and aim to make the testing feedback loop as quickly as possible. \nEven in a UI automation world keep your tests as small as possible and run them as often as possible against a controlled and repeatable environment. Start from having them on a continuous loop (picking up the latest build and running again as soon as they finish) and work backwards. If having them running continuously isn't possible can they run twice a day, overnight and then as an absolute worst case scenario, weekly.\nBy running them as often as possible you are doing two things:\n\n* Keeping the feedback loop of the tests as quick as possible\n* Making the tests easier to maintain (if a valid change to the software causes the tests to break and hasn't been identified up front, a smaller time between running the tests gives you a smaller window of changes that could have broken the tests)\n\n2) You need to understand that automated testing is really just automated checking. It will only check what you tell it to check and is only as good as the checks you identify. It isn't going to suddenly transform your testing if you aren't already able to find the best way of testing your product manually. I know many would disagree and would consider it waste however I think where possible you should only automate what you have already defined as manual tests, validating expected product behaviour. Having appropriate manual tests for all of your automated tests is a good reference point for what the test is trying to prove, particularly if you have different people picking up and putting down the tests for execution or maintenance. Let's be honest writing code blindly without fully understanding the users requirement is a bad idea whether that is for test or development purposes. Having clear behavioural tests will also help you to avoid automating tests against how the functionality is rather than against the expected behaviour. A test failing should get you to question the product not question the test therefore having confidence that the tests represent a customer's expectations/requirements is massively important if you want to avoid regular arguments about the tests or potentially even worse, people establishing apathy towards tests and just ignoring them.\n\n3) Ownership of tests is a big consideration for anyone considering automated testing. Consider carefully how you work. Do you have or are you aiming for a continuous integration/continuous delivery model? If you are then consider how tests will fit into your delivery pipeline and therefore how long they will take to run. More importantly consider if the tests look to be broken who do you want to fix them, what their availability is and how long will it take. Working in Agile teams in a continuous integration/delivery environment you need the team to have the ability to identify and solve any problem that comes up. In a short iteration or in single piece flow/WIP limit practices you really don't want to be waiting on other teams to fix the tests or update the tests in line with changes made. All of that said, getting a team to take ownership of something written by a completely separate group without fully understanding the goals or having inputted into how it was written is a big challenge. Where you really want to be is that appropriate tests are part of the deliverable from a team giving them confidence and understanding of the tests and therefore increasing the value (or perceived value) of your tests in the delivery pipeline).\n\n-\tBut we barely have time to do the development work in the timescales without writing the automated tests as well!\n\n\nIf the tests (checks) are necessary then they need to be done somewhere before you can release the software to get any value out of the changes you are making. If you aren't automating them then you are testing them manually and if the area of the software is high impact and/or high risk then you are probably going to be changing and therefore testing this on a regular basis. That can add up to high cost of test (see the test triangle) to do basic checks that automation can do. It is also reducing the time your testers could spend working with the team and helping to build quality in or completing valuable 'testing' that automation can't perform. Maybe planning in time for test automation isn't such a high expense after all, especially if you are creating code based tests.\n\n-\tBut I'm a developer, it's not my job to write tests\n\nI'm not even going to justify this with a response. It's your job to get software that is fit for purpose to customers.\n    \nThere may still be reasons within your control or outside of your control that mean having automation created by a separate team is absolutely desirable/necessary. If this is the case it doesn't mean all ownership must be lost, it just means the teams need to work a little harder and be a little more disciplined on communication. Consider treating the automated tests as software in their own right. Get the team delivering the product/changes sitting down with those writing the tests to agree the deliverables, aim of the tests and approach to writing the tests. Maybe get regular touch points between the two groups to discuss progress and get sight of the automated tests being written allowing input and suggestions from both sides to be discussed. Look at implementing code reviews by the product development team over the automated tests being created on a regular basis. This will all increase the chances of the automated testing being co-owned by the two teams and increase the pool of people able and willing to maintain the tests.\n\n4) Understanding the tooling options and what best fits your needs is vital. Failure to do due diligence on this and really understand the previous points before committing to a given tool and approach can send you steaming down a route that eventually hits a wall or needs to change which then leaves you with large numbers of assets (created at a large cost). These assets either become unusable or need extra effort to transfer. Alternatively you could find yourself with high licensing costs for software that sits on the shelf because you can't find a way of introducing it without breaking delivery. \nAssuming you have given careful consideration to all of the previous points and have;\n\n  -    decided how much testing you can do in the code (based on how you are developing software or want to develop software),  \n  -   ensured you are clear on how you are going to provide traceability/understanding of tests you want to automate\n  -\thave a clear view of who will own, maintain and execute the tests,\n  \nthen you need to find a tool that fits your need.\nThere will always be pro's and con's to any tool you decide to use so don't go looking for perfection or you are likely to end up disappointing. Below are a few categories and examples to consider:\n\n*Code based test automation*\n\nMore frameworks than tools, to allow unit tests built into the code to be executed and the results presented back. Building unit tests into your development activity is a highly (relatively) technical skillset and an understanding of how to pass inputs in and assess outputs through the code base is needed. Stubs, object mocks and test harnesses are useful options to help control the test inputs and outputs. Getting value out of unit testing (as opposed to just having tests in the code for the sake of it) is something often missed. \nTest Driven Development and Behavioural Driven Development are test first methodologies aimed at identifying tests up front, writing the tests which initially break/fail and then developing the solution to ensure the tests pass. As already identified code based tests have the value of minimal overhead (you are already developing the product so adding extra code to test the product up front is a much cheaper overhead than trying to write tests after the fact), high coverage and fast feedback (tests being run on every check in of code).\nCommon test frameworks include:\n\nArguably the most common framework for code based testing is the x-unit family (N-Unit, J-Unit, Fs-Unit etc.) although alternative frameworks are becoming more common, for example those delving into the world of the MEAN Stack are likely to be picking up Jasmine or you may be using/want to look at something like TestNG.\n          \n\n*API/Integration test automation*\n\nThe aim of integration tests is to orchestrate integration of different components of the software and ensure they all hang together effectively. If your software/web service has a strong service layer you can benefit from testing this through the service layer and interacting with the API rather than relying on the User Interface. Integration tests will generally rely on completion and build of a component as opposed to executing on check in therefore the feedback loop will be longer than code based tests however the improved stability due to not needing to rely on the User Interface and the speed of execution due to interacting with the service layer (no dependency on screen loads, or object states) means integration tests are much more suited to a continual integration/delivery environment than ui automation and depending on the service layer available in your software can potentially give you as much confidence of the End to End stability.\n\nEssentially Integration tools can be anything from the x-unit or TestNG frameworks to more dedicated testing tools such as LDRA, Citrus or Robot framework. Even tools like Selenium (whilst not ideal) can be setup to test against the api but need to be hooked into a framework such as TestNG or Robot.\n\n\n*UI test automation*\n\nYou may have already noticed my reluctance to use UI automation however I'd be lying if I said I hadn't previously made the decision to go down the UI automation route. UI automation essentially interacts with the objects in the UI and provides the most realistic user representation testing but suffers from flakiness associated with object recognition, waiting on objects, return values or task completion. Understanding the flaws (already discussed) in relation to ownership, regular test execution, size of the tests and control over the environment and data can help you derive value from UI automation testing especially if you have software with a limited/non-existent service layer or a large amount of business logic in the UI. Also automation ID's can be put into the UI layer to help with interaction but whilst they help don't expect them to be a silver bullet.\n\nUI Automation test tooling has a variety of options for all budgets if you have a web based product. These include open source tooling such as selenium, Robot and Watir to proprietary solutions with a higher cost such as Ranorex, Test Complete (Smartbear) or HP's unified functional tester (formerly Quick Test Professional). If you are testing a web product and decide you need to test against the UI then I would be surprised if you can find many reasons to pay for proprietary testing software as opposed to making Selenium work for you.\nIf you are working against a desktop application then you are a little more restricted. The proprietary options are pretty much similar with HP UFT, Test Complete and Egg Plant leading the way and providing broadly similar capability but varying price points. Robot Framework (with the autoit library) is worth consideration from the open source pot or alternatively if you are a Microsoft house with .net framework based products you may have a couple of options dependant on your licencing. CodedUI has the benefit of feeding into the Microsoft performance test capabilities. TestStack White should also be considered if you are working with .net framework and can also be used in conjunction with CodedUI as it is built on top of Microsoft's UIAutomation library. I have found this to be an option that helps with the ownership consideration and receives a much better reception if you want developers to be part of the UI test automation solution.\n\n\n\n**What Now?**\n\nAs stated previously this is not meant as a guide to follow, these are just some of my own thoughts. You will come across a broad spectrum of opinions on use of automated testing and I would suggest anyone looking to get value out of automation does their own research and considers a variety of information. So many factors will influence what test automation is best suited to you, your team, your product and your situation and at the end of the day only you understand those factors fully, Don't go into test automation half-heartedly. Be prepared to invest continually into making it a success, adapt to challenges you encounter and getting everyone on board with building it into your planning and delivery. Encourage a mindset that if a test is broken you either fix the test or the code but never ignore it. Don't be afraid to find ways to change and improve to get the most out of test automation but build your test automation on the foundations of quickest possible test feedback, testing early and testing often.\n![](/content/images/2016/Mar/images--2-.jpg)","mobiledoc":null,"html":"<p>So you want to automate your testing to solve all of your testing woes? Because automated tests will suddenly do the work of 200 testers in a few hours right?</p>\n\n<p>Well not quite. There are many things to consider and understand if you really want to make the right decision on automation for your team. Investing in test automation has a cost and this cost can get higher if you don't really understand what you are getting into. That said test automation can bring a lot of value and the aim of anyone investing in test automation is to ensure the value you get is higher than the cost. This is by no means an exhaustive list and I don't profess to be an expert. This is however based on a lot of experience (both positive and negative) and the result of lots of dead ends and soul searching.</p>\n\n<p>1) The first thing I would encourage you to consider is what automated tests you want. Think about the how quickly you want your tests to give you pass/fail feedback. Unit tests and code based testing will give you the quickest feedback loop as they can be run every time code is checked in. In my experience I would encourage any team to have a target of getting as much of your automated testing into the code as possible. If you have a challenge doing this for any one of a million reasons then re-consider again and again looking at ways you can get your code into a suitable state to write code based tests against. If you can find a way of achieving this as early as possible you will save yourself a lot of pain. <br />\nIf you hit a brick wall and feel that an automated testing tool (non code based tests) are your only option for some of the testing (there can be a number of reasons for this such as state of code if it's been developed over a number of years or a lot of logic sitting in the UI layer) then look at whether your product has API's or endpoints you can hook into? If you can automate avoiding the UI then you should for the majority of your tests as you will avoid a lot of maintenance overhead when the product changes (which it inevitably will). Use the testing triangle below as a guide to how much of your testing should be covered where. In the below triangle the cost of testing goes up the higher up the triangle you go but the coverage is higher towards the bottom. <br />\n<img src=\"/content/images/2016/Mar/testingtriangle1.png\" alt=\"\" /></p>\n\n<p>UI automation can still be valuable and can give a better user representation in some cases. If you are absolutely adamant you need UI automation, keep it to thin stripes through the product and avoid XY co-ordinates for actions, hopefully therefore ensuring minimal susceptibility to changes in the software. <br />\nAlso consider what the tests are testing for. Automated testing might apply to performance and load and therefore you need to look at it from a slightly different angle. For load tests in particular you will generally be looking at specialised tools to build the load using agents/virtual users or similar. The question becomes more about how important these tests are for you. Will your software ever get really heavy load or will understand performance for a single user be enough. <br />\nMost importantly of all, just because you may not be writing code based automated tests, remember the golden rule about feedback and aim to make the testing feedback loop as quickly as possible. <br />\nEven in a UI automation world keep your tests as small as possible and run them as often as possible against a controlled and repeatable environment. Start from having them on a continuous loop (picking up the latest build and running again as soon as they finish) and work backwards. If having them running continuously isn't possible can they run twice a day, overnight and then as an absolute worst case scenario, weekly. <br />\nBy running them as often as possible you are doing two things:</p>\n\n<ul>\n<li>Keeping the feedback loop of the tests as quick as possible</li>\n<li>Making the tests easier to maintain (if a valid change to the software causes the tests to break and hasn't been identified up front, a smaller time between running the tests gives you a smaller window of changes that could have broken the tests)</li>\n</ul>\n\n<p>2) You need to understand that automated testing is really just automated checking. It will only check what you tell it to check and is only as good as the checks you identify. It isn't going to suddenly transform your testing if you aren't already able to find the best way of testing your product manually. I know many would disagree and would consider it waste however I think where possible you should only automate what you have already defined as manual tests, validating expected product behaviour. Having appropriate manual tests for all of your automated tests is a good reference point for what the test is trying to prove, particularly if you have different people picking up and putting down the tests for execution or maintenance. Let's be honest writing code blindly without fully understanding the users requirement is a bad idea whether that is for test or development purposes. Having clear behavioural tests will also help you to avoid automating tests against how the functionality is rather than against the expected behaviour. A test failing should get you to question the product not question the test therefore having confidence that the tests represent a customer's expectations/requirements is massively important if you want to avoid regular arguments about the tests or potentially even worse, people establishing apathy towards tests and just ignoring them.</p>\n\n<p>3) Ownership of tests is a big consideration for anyone considering automated testing. Consider carefully how you work. Do you have or are you aiming for a continuous integration/continuous delivery model? If you are then consider how tests will fit into your delivery pipeline and therefore how long they will take to run. More importantly consider if the tests look to be broken who do you want to fix them, what their availability is and how long will it take. Working in Agile teams in a continuous integration/delivery environment you need the team to have the ability to identify and solve any problem that comes up. In a short iteration or in single piece flow/WIP limit practices you really don't want to be waiting on other teams to fix the tests or update the tests in line with changes made. All of that said, getting a team to take ownership of something written by a completely separate group without fully understanding the goals or having inputted into how it was written is a big challenge. Where you really want to be is that appropriate tests are part of the deliverable from a team giving them confidence and understanding of the tests and therefore increasing the value (or perceived value) of your tests in the delivery pipeline).</p>\n\n<ul>\n<li>But we barely have time to do the development work in the timescales without writing the automated tests as well!</li>\n</ul>\n\n<p>If the tests (checks) are necessary then they need to be done somewhere before you can release the software to get any value out of the changes you are making. If you aren't automating them then you are testing them manually and if the area of the software is high impact and/or high risk then you are probably going to be changing and therefore testing this on a regular basis. That can add up to high cost of test (see the test triangle) to do basic checks that automation can do. It is also reducing the time your testers could spend working with the team and helping to build quality in or completing valuable 'testing' that automation can't perform. Maybe planning in time for test automation isn't such a high expense after all, especially if you are creating code based tests.</p>\n\n<ul>\n<li>But I'm a developer, it's not my job to write tests</li>\n</ul>\n\n<p>I'm not even going to justify this with a response. It's your job to get software that is fit for purpose to customers.</p>\n\n<p>There may still be reasons within your control or outside of your control that mean having automation created by a separate team is absolutely desirable/necessary. If this is the case it doesn't mean all ownership must be lost, it just means the teams need to work a little harder and be a little more disciplined on communication. Consider treating the automated tests as software in their own right. Get the team delivering the product/changes sitting down with those writing the tests to agree the deliverables, aim of the tests and approach to writing the tests. Maybe get regular touch points between the two groups to discuss progress and get sight of the automated tests being written allowing input and suggestions from both sides to be discussed. Look at implementing code reviews by the product development team over the automated tests being created on a regular basis. This will all increase the chances of the automated testing being co-owned by the two teams and increase the pool of people able and willing to maintain the tests.</p>\n\n<p>4) Understanding the tooling options and what best fits your needs is vital. Failure to do due diligence on this and really understand the previous points before committing to a given tool and approach can send you steaming down a route that eventually hits a wall or needs to change which then leaves you with large numbers of assets (created at a large cost). These assets either become unusable or need extra effort to transfer. Alternatively you could find yourself with high licensing costs for software that sits on the shelf because you can't find a way of introducing it without breaking delivery. <br />\nAssuming you have given careful consideration to all of the previous points and have;</p>\n\n<ul>\n<li>decided how much testing you can do in the code (based on how you are developing software or want to develop software),  </li>\n<li>ensured you are clear on how you are going to provide traceability/understanding of tests you want to automate</li>\n<li>have a clear view of who will own, maintain and execute the tests,</li>\n</ul>\n\n<p>then you need to find a tool that fits your need. <br />\nThere will always be pro's and con's to any tool you decide to use so don't go looking for perfection or you are likely to end up disappointing. Below are a few categories and examples to consider:</p>\n\n<p><em>Code based test automation</em></p>\n\n<p>More frameworks than tools, to allow unit tests built into the code to be executed and the results presented back. Building unit tests into your development activity is a highly (relatively) technical skillset and an understanding of how to pass inputs in and assess outputs through the code base is needed. Stubs, object mocks and test harnesses are useful options to help control the test inputs and outputs. Getting value out of unit testing (as opposed to just having tests in the code for the sake of it) is something often missed. <br />\nTest Driven Development and Behavioural Driven Development are test first methodologies aimed at identifying tests up front, writing the tests which initially break/fail and then developing the solution to ensure the tests pass. As already identified code based tests have the value of minimal overhead (you are already developing the product so adding extra code to test the product up front is a much cheaper overhead than trying to write tests after the fact), high coverage and fast feedback (tests being run on every check in of code). <br />\nCommon test frameworks include:</p>\n\n<p>Arguably the most common framework for code based testing is the x-unit family (N-Unit, J-Unit, Fs-Unit etc.) although alternative frameworks are becoming more common, for example those delving into the world of the MEAN Stack are likely to be picking up Jasmine or you may be using/want to look at something like TestNG.</p>\n\n<p><em>API/Integration test automation</em></p>\n\n<p>The aim of integration tests is to orchestrate integration of different components of the software and ensure they all hang together effectively. If your software/web service has a strong service layer you can benefit from testing this through the service layer and interacting with the API rather than relying on the User Interface. Integration tests will generally rely on completion and build of a component as opposed to executing on check in therefore the feedback loop will be longer than code based tests however the improved stability due to not needing to rely on the User Interface and the speed of execution due to interacting with the service layer (no dependency on screen loads, or object states) means integration tests are much more suited to a continual integration/delivery environment than ui automation and depending on the service layer available in your software can potentially give you as much confidence of the End to End stability.</p>\n\n<p>Essentially Integration tools can be anything from the x-unit or TestNG frameworks to more dedicated testing tools such as LDRA, Citrus or Robot framework. Even tools like Selenium (whilst not ideal) can be setup to test against the api but need to be hooked into a framework such as TestNG or Robot.</p>\n\n<p><em>UI test automation</em></p>\n\n<p>You may have already noticed my reluctance to use UI automation however I'd be lying if I said I hadn't previously made the decision to go down the UI automation route. UI automation essentially interacts with the objects in the UI and provides the most realistic user representation testing but suffers from flakiness associated with object recognition, waiting on objects, return values or task completion. Understanding the flaws (already discussed) in relation to ownership, regular test execution, size of the tests and control over the environment and data can help you derive value from UI automation testing especially if you have software with a limited/non-existent service layer or a large amount of business logic in the UI. Also automation ID's can be put into the UI layer to help with interaction but whilst they help don't expect them to be a silver bullet.</p>\n\n<p>UI Automation test tooling has a variety of options for all budgets if you have a web based product. These include open source tooling such as selenium, Robot and Watir to proprietary solutions with a higher cost such as Ranorex, Test Complete (Smartbear) or HP's unified functional tester (formerly Quick Test Professional). If you are testing a web product and decide you need to test against the UI then I would be surprised if you can find many reasons to pay for proprietary testing software as opposed to making Selenium work for you. <br />\nIf you are working against a desktop application then you are a little more restricted. The proprietary options are pretty much similar with HP UFT, Test Complete and Egg Plant leading the way and providing broadly similar capability but varying price points. Robot Framework (with the autoit library) is worth consideration from the open source pot or alternatively if you are a Microsoft house with .net framework based products you may have a couple of options dependant on your licencing. CodedUI has the benefit of feeding into the Microsoft performance test capabilities. TestStack White should also be considered if you are working with .net framework and can also be used in conjunction with CodedUI as it is built on top of Microsoft's UIAutomation library. I have found this to be an option that helps with the ownership consideration and receives a much better reception if you want developers to be part of the UI test automation solution.</p>\n\n<p><strong>What Now?</strong></p>\n\n<p>As stated previously this is not meant as a guide to follow, these are just some of my own thoughts. You will come across a broad spectrum of opinions on use of automated testing and I would suggest anyone looking to get value out of automation does their own research and considers a variety of information. So many factors will influence what test automation is best suited to you, your team, your product and your situation and at the end of the day only you understand those factors fully, Don't go into test automation half-heartedly. Be prepared to invest continually into making it a success, adapt to challenges you encounter and getting everyone on board with building it into your planning and delivery. Encourage a mindset that if a test is broken you either fix the test or the code but never ignore it. Don't be afraid to find ways to change and improve to get the most out of test automation but build your test automation on the foundations of quickest possible test feedback, testing early and testing often. <br />\n<img src=\"/content/images/2016/Mar/images--2-.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2016-03-16 17:40:45","created_by":2,"updated_at":"2016-03-30 09:19:47","updated_by":1,"published_at":"2016-03-22 14:22:48","published_by":2},{"id":11,"uuid":"9a4eda6d-ed00-4c21-8cdd-7d46f19eaa69","title":"You've been upgraded to the latest version of Ghost","slug":"ghost-0-7","markdown":"You've just upgraded to the latest version of Ghost and we've made a few changes that you should probably know about!\n\n## Woah, why does everything look different?\n\nAfter two years and hundreds of thousands of users, we learned a great deal about what was (and wasn't) working in the old Ghost admin user interface. What you're looking at is Ghost's first major UI refresh, with a strong focus on being more usable and robust all round.\n\n![New Design](https://ghost.org/images/zelda.png)\n\nThe main navigation menu, previously located at the top of your screen, has now moved over to the left. This makes it way easier to work with on mobile devices, and has the added benefit of providing ample space for upcoming features!\n\n## Lost and found: Your old posts\n\nFrom talking to many of you we understand that finding old posts in the admin area was a real pain; so we've added a new magical search bar which lets you quickly find posts for editing, without having to scroll endlessly. Take it for a spin!\n\n![Search](https://ghost.org/images/search.gif)\n\nQuestions? Comments? Send us a tweet [@TryGhost](https://twitter.com/tryghost)\n\nOh, and yes – you can safely delete this draft post!","mobiledoc":null,"html":"<p>You've just upgraded to the latest version of Ghost and we've made a few changes that you should probably know about!</p>\n\n<h2 id=\"woahwhydoeseverythinglookdifferent\">Woah, why does everything look different?</h2>\n\n<p>After two years and hundreds of thousands of users, we learned a great deal about what was (and wasn't) working in the old Ghost admin user interface. What you're looking at is Ghost's first major UI refresh, with a strong focus on being more usable and robust all round.</p>\n\n<p><img src=\"https://ghost.org/images/zelda.png\" alt=\"New Design\" /></p>\n\n<p>The main navigation menu, previously located at the top of your screen, has now moved over to the left. This makes it way easier to work with on mobile devices, and has the added benefit of providing ample space for upcoming features!</p>\n\n<h2 id=\"lostandfoundyouroldposts\">Lost and found: Your old posts</h2>\n\n<p>From talking to many of you we understand that finding old posts in the admin area was a real pain; so we've added a new magical search bar which lets you quickly find posts for editing, without having to scroll endlessly. Take it for a spin!</p>\n\n<p><img src=\"https://ghost.org/images/search.gif\" alt=\"Search\" /></p>\n\n<p>Questions? Comments? Send us a tweet <a href=\"https://twitter.com/tryghost\">@TryGhost</a></p>\n\n<p>Oh, and yes – you can safely delete this draft post!</p>","amp":null,"image":null,"featured":0,"page":0,"status":"draft","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2016-04-10 08:31:16","created_by":2,"updated_at":"2016-04-10 08:31:16","updated_by":1,"published_at":"2016-04-10 08:31:16","published_by":null},{"id":12,"uuid":"8d3a5eb6-48e2-4f5f-8f70-48e94c1afe76","title":"Cost of Quality - Why do we care?","slug":"cost-of-quality-why-do-we-care","markdown":"","mobiledoc":null,"html":"","amp":null,"image":null,"featured":0,"page":0,"status":"draft","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2016-10-17 13:09:16","created_by":2,"updated_at":"2016-10-17 13:09:19","updated_by":1,"published_at":null,"published_by":null},{"id":13,"uuid":"abc849c9-f88c-46a4-aac2-35077fe10b9c","title":"Are you really adding value?","slug":"are-you-really-adding-value","markdown":"","mobiledoc":null,"html":"","amp":null,"image":null,"featured":0,"page":0,"status":"draft","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2016-10-17 13:10:28","created_by":2,"updated_at":"2016-10-17 13:10:31","updated_by":1,"published_at":null,"published_by":null},{"id":14,"uuid":"65102fed-1cae-410b-bb32-c38cea60066e","title":"Services","slug":"services","markdown":"##For Businesses\n\n### Consultancy\n>Advice and guidance for teams struggling with testing challenges. From specific issues such as automation and tooling to over arching guidance on challenges relating to strategy, approach or team development.\n\n\n### Coaching\n>A strong believer in the value of engagement, coaching and support over instruction to enable teams to fulfil their potential. Working with the teams in day to day activities to facilitate them in identifying their own path of self improvement. \n\n\n### Training\n>Delivering bespoke training adapted to your specific needs. Ensuring training is appropriate to the existing skills and strengths of the team and business domain.\n\n\n### Hands on Testing\n>When you need resource on the ground to support the delivery of testing services. Catering for any combination of specific projects, workload challenges, tooling adoption or any other testing resource demands.\n\n---\n##For Individuals\n>I am more than happy to provide advice and support to members of the testing community on any test related topics. Progressing and moving your career forward is entirely in the hands of yourself but I will certainly mentor and/or coach anyone looking for support to understand how they can help themselves.","mobiledoc":null,"html":"<h2 id=\"forbusinesses\">For Businesses</h2>\n\n<h3 id=\"consultancy\">Consultancy</h3>\n\n<blockquote>\n  <p>Advice and guidance for teams struggling with testing challenges. From specific issues such as automation and tooling to over arching guidance on challenges relating to strategy, approach or team development.</p>\n</blockquote>\n\n<h3 id=\"coaching\">Coaching</h3>\n\n<blockquote>\n  <p>A strong believer in the value of engagement, coaching and support over instruction to enable teams to fulfil their potential. Working with the teams in day to day activities to facilitate them in identifying their own path of self improvement. </p>\n</blockquote>\n\n<h3 id=\"training\">Training</h3>\n\n<blockquote>\n  <p>Delivering bespoke training adapted to your specific needs. Ensuring training is appropriate to the existing skills and strengths of the team and business domain.</p>\n</blockquote>\n\n<h3 id=\"handsontesting\">Hands on Testing</h3>\n\n<blockquote>\n  <p>When you need resource on the ground to support the delivery of testing services. Catering for any combination of specific projects, workload challenges, tooling adoption or any other testing resource demands.</p>\n</blockquote>\n\n<hr />\n\n<h2 id=\"forindividuals\">For Individuals</h2>\n\n<blockquote>\n  <p>I am more than happy to provide advice and support to members of the testing community on any test related topics. Progressing and moving your career forward is entirely in the hands of yourself but I will certainly mentor and/or coach anyone looking for support to understand how they can help themselves.</p>\n</blockquote>","amp":null,"image":"/content/images/2017/09/Website-large-image-no-logo---1500x900-2.png","featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-03-15 21:46:19","created_by":2,"updated_at":"2018-01-25 23:38:25","updated_by":2,"published_at":"2017-03-18 16:30:46","published_by":2},{"id":15,"uuid":"8cd97244-705b-49a0-a897-ae8e53659fd9","title":"About","slug":"about","markdown":"Having initially moved into testing from a software development role and spent time in testing roles at all levels, I believe I have encountered many of the challenges faced across testing functions. From small software houses building a team from scratch, enterprise businesses looking for testing efficiencies or teams taking first steps into the world of Agile.\n\nI'm not going to tell you I've never made a mistake, but I will tell you I've learnt from the mistakes I have made and I apply those learnings to everything I do.\n\nI don't believe best practices provide a route to redemption for test teams because every team has a different dynamic and need, however there are many good practices that can add value when applied in the right circumstances.\n\nA few key principles are the cornerstone of development and improvement of teams:\n\n* *Engagement* - Finding ways to ensure the team stay engaged in continuous improvement. If the team aren't engaged, improvement will be an uphill task. The most successful continuous improvement initiatives are driven by the team, not followed by the team.\n* *Buy In* - Ensuring the business understand the value of a test team that is engaged, improving and delivering. If the business doesn't have confidence in the approach of the testing functions then a team will struggle to have confidence in itself.\n* *Context* - Identifying the needs of the business, the needs of the customer and delivering testing to service those needs is critical. This doesn't mean the business should dictate the test approach but rather that you should be able to guide the businesses understanding of the value the test approach is providing. \n* *Communication* - Ensuring that effective communication remains a priority and doesn't become a burden. Open two way communication must ensure clarity and understanding whilst valuing questions, debate and ideas. Communication done right can open doors, solve problems, empower individuals and enhance value.","mobiledoc":null,"html":"<p>Having initially moved into testing from a software development role and spent time in testing roles at all levels, I believe I have encountered many of the challenges faced across testing functions. From small software houses building a team from scratch, enterprise businesses looking for testing efficiencies or teams taking first steps into the world of Agile.</p>\n\n<p>I'm not going to tell you I've never made a mistake, but I will tell you I've learnt from the mistakes I have made and I apply those learnings to everything I do.</p>\n\n<p>I don't believe best practices provide a route to redemption for test teams because every team has a different dynamic and need, however there are many good practices that can add value when applied in the right circumstances.</p>\n\n<p>A few key principles are the cornerstone of development and improvement of teams:</p>\n\n<ul>\n<li><em>Engagement</em> - Finding ways to ensure the team stay engaged in continuous improvement. If the team aren't engaged, improvement will be an uphill task. The most successful continuous improvement initiatives are driven by the team, not followed by the team.</li>\n<li><em>Buy In</em> - Ensuring the business understand the value of a test team that is engaged, improving and delivering. If the business doesn't have confidence in the approach of the testing functions then a team will struggle to have confidence in itself.</li>\n<li><em>Context</em> - Identifying the needs of the business, the needs of the customer and delivering testing to service those needs is critical. This doesn't mean the business should dictate the test approach but rather that you should be able to guide the businesses understanding of the value the test approach is providing. </li>\n<li><em>Communication</em> - Ensuring that effective communication remains a priority and doesn't become a burden. Open two way communication must ensure clarity and understanding whilst valuing questions, debate and ideas. Communication done right can open doors, solve problems, empower individuals and enhance value.</li>\n</ul>","amp":null,"image":"/content/images/2017/09/Website-large-image-no-logo---1500x900-1.png","featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-03-19 23:04:42","created_by":2,"updated_at":"2017-09-26 20:53:06","updated_by":2,"published_at":"2017-03-19 23:04:47","published_by":2},{"id":16,"uuid":"0f921e18-e27a-4750-9959-324c3faec8ca","title":"Is curiosity more valuable than knowledge?","slug":"is-curiosity-more-valuable-than-knowledge","markdown":"Before I start let me make clear that I fully understand that these are not mutually exclusive and are in fact intrinsically linked. Yet.... ask yourself this question which Isaac Morehouse answers in his article on this very topic https://medium.com/the-mission/curiosity-is-better-than-knowledge-a35b4074ba81:\n> If you could be the most knowledgable individual in the world or the most curious person in the world which would you choose?\n\nKnowledge is a powerful thing without question, some may consider it a dangerous thing but the value of knowledge is a deteriorating commodity. Moreover, could it be that knowledge can actually create limits and build barriers where they need not exist?\n\nSo where does this fit for testers?\n\nLet me change the question a little........\n> Is not knowing something more powerful than knowing something?\n\nWhilst this is not an absolute by any stretch of the imagination, the knowledge gap is a hugely beneficial state, particularly to a tester. \n\nThere are exceptions to this but as a general rule once you know how something is supposed to work you generally try to use it how it was designed to work. Consider this example if you will:\n\nGenerally when you get something new like a phone or a laptop you are at your most curious. You want to play with it, you want to see everything work and see everything it has to offer. You will probably find and use features of your phone or computer when you first get it that you never use or need again. You may come across features that you aren't sure how to use. I bet a pound to a penny that most people will try to figure it out for themselves before consulting 'instructions'. Eventually as your develop more knowledge of how things work you will lose your curiosity and use the things you know work in the way you know they work.\n\nWhy is this the case? Well it's human nature...... as humans why hate not knowing something. We generally have plenty that we don't know and therefore have to prioritise what things are valuable enough to want to know. As we learn more about something, generally our knowledge grows and our curiosity drops which leads us away from discovery and towards acceptance.\n\nIt's no coincidence that you learn more and take in more information when you are younger and have less knowledge. You are inquisitive, innocent and have a completely open mind.\n\nAs testers we are representing all of the users of our software and therefore we need to create the same kind of curiosity that a user will have when they first come across and use our software or a new version for the first time. \n\nBut surely product knowledge is critical to be able to test?\n\nSome product or Domain knowledge can be useful when combined with the right level of curiosity. Domain knowledge can provide value in a test function but without a sufficient amount of curiosity how do we explore and look for the things we don't know that we don't know.\n\nHerein lies the often hidden catch with testing. We are often provided with knowledge in the form of a specification or detailed business requirements. All to often such requirements or detail get seen as the gospel for any given change. Whilst I fully understand the purpose of such detail, this 'knowledge' can prove dangerous to effective testing.\n\n> We don't know what we don't know until we know it.\n\nI might add here that I have yet to find out where this quote originates from..... a knowledge gap that has peaked my curiosity but I intend on finding out.\n\nThis applies to all of us no matter how much knowledge we do or don't have. We can't be confident we have considered everything for a new product or function unless we have explored the possibilities and considered the idea that there are things we don't know. \n\nThis brings me back round to the knowledge gap. Identifying that we might not or in fact probably don't know everything creates the curiosity (no matter how much detail we have in the form of requirements or documentation). The curiosity drives out questions and questions are a testers best friend. Asking questions of the software, of the domain experts, of the technical experts is how we explore the unknown. Exploring the unknown, as discussed earlier, is often what users will be doing when they get new software or functions.\n\nSo ask yourself as a tester, do you have sufficient curiosity? Are you aware of the the knowledge gaps that exist? Is the knowledge you possess creating barriers to your approach to testing?\n\nNow as I've not left a random image for a while, I give you................. the first image displayed on my google search of 'random image':\n![](/content/images/2017/07/rubiks-cube.png)\n","mobiledoc":null,"html":"<p>Before I start let me make clear that I fully understand that these are not mutually exclusive and are in fact intrinsically linked. Yet.... ask yourself this question which Isaac Morehouse answers in his article on this very topic <a href=\"https://medium.com/the-mission/curiosity-is-better-than-knowledge-a35b4074ba81\">https://medium.com/the-mission/curiosity-is-better-than-knowledge-a35b4074ba81</a>:  </p>\n\n<blockquote>\n  <p>If you could be the most knowledgable individual in the world or the most curious person in the world which would you choose?</p>\n</blockquote>\n\n<p>Knowledge is a powerful thing without question, some may consider it a dangerous thing but the value of knowledge is a deteriorating commodity. Moreover, could it be that knowledge can actually create limits and build barriers where they need not exist?</p>\n\n<p>So where does this fit for testers?</p>\n\n<p>Let me change the question a little........  </p>\n\n<blockquote>\n  <p>Is not knowing something more powerful than knowing something?</p>\n</blockquote>\n\n<p>Whilst this is not an absolute by any stretch of the imagination, the knowledge gap is a hugely beneficial state, particularly to a tester. </p>\n\n<p>There are exceptions to this but as a general rule once you know how something is supposed to work you generally try to use it how it was designed to work. Consider this example if you will:</p>\n\n<p>Generally when you get something new like a phone or a laptop you are at your most curious. You want to play with it, you want to see everything work and see everything it has to offer. You will probably find and use features of your phone or computer when you first get it that you never use or need again. You may come across features that you aren't sure how to use. I bet a pound to a penny that most people will try to figure it out for themselves before consulting 'instructions'. Eventually as your develop more knowledge of how things work you will lose your curiosity and use the things you know work in the way you know they work.</p>\n\n<p>Why is this the case? Well it's human nature...... as humans why hate not knowing something. We generally have plenty that we don't know and therefore have to prioritise what things are valuable enough to want to know. As we learn more about something, generally our knowledge grows and our curiosity drops which leads us away from discovery and towards acceptance.</p>\n\n<p>It's no coincidence that you learn more and take in more information when you are younger and have less knowledge. You are inquisitive, innocent and have a completely open mind.</p>\n\n<p>As testers we are representing all of the users of our software and therefore we need to create the same kind of curiosity that a user will have when they first come across and use our software or a new version for the first time. </p>\n\n<p>But surely product knowledge is critical to be able to test?</p>\n\n<p>Some product or Domain knowledge can be useful when combined with the right level of curiosity. Domain knowledge can provide value in a test function but without a sufficient amount of curiosity how do we explore and look for the things we don't know that we don't know.</p>\n\n<p>Herein lies the often hidden catch with testing. We are often provided with knowledge in the form of a specification or detailed business requirements. All to often such requirements or detail get seen as the gospel for any given change. Whilst I fully understand the purpose of such detail, this 'knowledge' can prove dangerous to effective testing.</p>\n\n<blockquote>\n  <p>We don't know what we don't know until we know it.</p>\n</blockquote>\n\n<p>I might add here that I have yet to find out where this quote originates from..... a knowledge gap that has peaked my curiosity but I intend on finding out.</p>\n\n<p>This applies to all of us no matter how much knowledge we do or don't have. We can't be confident we have considered everything for a new product or function unless we have explored the possibilities and considered the idea that there are things we don't know. </p>\n\n<p>This brings me back round to the knowledge gap. Identifying that we might not or in fact probably don't know everything creates the curiosity (no matter how much detail we have in the form of requirements or documentation). The curiosity drives out questions and questions are a testers best friend. Asking questions of the software, of the domain experts, of the technical experts is how we explore the unknown. Exploring the unknown, as discussed earlier, is often what users will be doing when they get new software or functions.</p>\n\n<p>So ask yourself as a tester, do you have sufficient curiosity? Are you aware of the the knowledge gaps that exist? Is the knowledge you possess creating barriers to your approach to testing?</p>\n\n<p>Now as I've not left a random image for a while, I give you................. the first image displayed on my google search of 'random image': <br />\n<img src=\"/content/images/2017/07/rubiks-cube.png\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-07-04 20:46:05","created_by":2,"updated_at":"2017-07-05 23:25:18","updated_by":2,"published_at":"2017-07-05 23:25:18","published_by":2},{"id":17,"uuid":"ae466b29-953c-423a-adfa-3307d8b4be2b","title":"Contact","slug":"contact","markdown":"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\n* {\n  box-sizing: border-box;\n}\n.left {\n  padding:20px;\n  float:left;\n  width:30%;/*The width is 20%, by default*/\n}\n.main {\n  padding:20px;\n  float:left;\n  width:70%;/*The width is 60%, by default*/\n  font-size:15px;\n  padding-top:5%;\n}\n\n/*Use a media query to add a break point at 800px:*/\n@media (max-width:800px) {\n  .left, .main {\n    width:100%;/*The width is 100%, when the viewport is 400px or smaller*/\n  }\n}\n</style>\n\nIf you would like to have a chat to discuss how I can help to support your testing needs whether including consultation, test coaching or short to long term projects, please feel free to contact me: \n<div class=\"left\"><a href=\"mailto:mattcparker@virginmedia.com\"><img src=\"/content/images/2017/09/email.png\" style=\"Max-width:40px;float:left\"></a>\n<br>\n<br>\n</div>\n<div class=\"main\"><a href=\"mailto:mattcparker@virginmedia.com\">mattcparker@virginmedia.com</a>\n<br>\n<br>\n</div>\n<div class=\"left\">\n<a href=\"https://www.linkedin.com/in/matthew-parker-44b5b03\"><img src=\"/content/images/2017/09/In-2CRev-34px-TM.png\" style=\"Max-width:40px;float:left\"></a>\n<br>\n<br>\n</div>     \n<div class=\"main\"><a href=\"https://www.linkedin.com/in/matthew-parker-44b5b03\">Matthew Parker\n</a>\n<br>\n<br>\n</div>\n<div class=\"left\"><a href=\"https://twitter.com/TestingTackled\"><img src=\"/content/images/2017/09/Twitter_Social_Icon_Circle_Color.png\" style=\"max-width:40px; float:left\"></a>\n<br>\n<br>\n</div>\n<div class=\"main\"><a href=\"https://twitter.com/TestingTackled\">@testingtackled\n</a>\n<br>\n<br>\n</div>","mobiledoc":null,"html":"<p><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  </p>\n\n<style>  \n* {\n  box-sizing: border-box;\n}\n.left {\n  padding:20px;\n  float:left;\n  width:30%;/*The width is 20%, by default*/\n}\n.main {\n  padding:20px;\n  float:left;\n  width:70%;/*The width is 60%, by default*/\n  font-size:15px;\n  padding-top:5%;\n}\n\n/*Use a media query to add a break point at 800px:*/\n@media (max-width:800px) {\n  .left, .main {\n    width:100%;/*The width is 100%, when the viewport is 400px or smaller*/\n  }\n}\n</style>\n\n<p>If you would like to have a chat to discuss how I can help to support your testing needs whether including consultation, test coaching or short to long term projects, please feel free to contact me:  </p>\n\n<div class=\"left\"><a href=\"mailto:mattcparker@virginmedia.com\"><img src=\"/content/images/2017/09/email.png\" style=\"Max-width:40px;float:left\"></a>  \n<br>  \n<br>  \n</div>  \n\n<div class=\"main\"><a href=\"mailto:mattcparker@virginmedia.com\">mattcparker@virginmedia.com</a>  \n<br>  \n<br>  \n</div>  \n\n<div class=\"left\">  \n<a href=\"https://www.linkedin.com/in/matthew-parker-44b5b03\"><img src=\"/content/images/2017/09/In-2CRev-34px-TM.png\" style=\"Max-width:40px;float:left\"></a>  \n<br>  \n<br>  \n</div>  \n\n<div class=\"main\"><a href=\"https://www.linkedin.com/in/matthew-parker-44b5b03\">Matthew Parker  \n</a>  \n<br>  \n<br>  \n</div>  \n\n<div class=\"left\"><a href=\"https://twitter.com/TestingTackled\"><img src=\"/content/images/2017/09/Twitter_Social_Icon_Circle_Color.png\" style=\"max-width:40px; float:left\"></a>  \n<br>  \n<br>  \n</div>  \n\n<div class=\"main\"><a href=\"https://twitter.com/TestingTackled\">@testingtackled  \n</a>  \n<br>  \n<br>  \n</div>","amp":null,"image":"/content/images/2017/09/Website-large-image-no-logo---1500x900.png","featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-07-18 22:25:51","created_by":2,"updated_at":"2017-09-26 22:26:50","updated_by":2,"published_at":"2017-07-18 22:26:16","published_by":2},{"id":18,"uuid":"36cfbed6-c427-43b4-b173-04f2b6392588","title":"Engaging with developers in an imperfect world","slug":"engaging-with-developers-in-an-imperfect-world-2","markdown":"Imperfect\n>not perfect - faulty or incomplete.\n\nI hear lots of people talk about ideals around testing and/or development. This usually involves ideas relating to agility, cross functional teams, test first/shift left, BDD/ATDD, single piece flow,  or any of the many common sense approaches to improving product development. Much of this revolves around development and test working closely together in a team, solving problems together, both equally confident in both the development and the testing. Make no mistake I would encourage all teams to understand how these ideas can help and improve them. Strive for continual improvement and relevant cultural change. \nThat said, this article will not preach the joys of having confidence in the product earlier brought about by shifting left. I'm also not going to nail down exactly how you get a cross functional team working in perfect harmony (I will however use this to plug a talk I heard from the illustrious James Bach at Test Bash Manchester in 2016 https://dojo.ministryoftesting.com/lessons/don-t-think-so-close-to-me-managing-critical-and-social-distance-in-testing-james-bach - I would encourage anyone looking at the dynamics of test and development in their team to sign up and have a look at this)\n\nSo if that is our perfect place.............. then what about those who are still defined by an imperfect world. Those for whom manual regression is expected/required. What about those who live in a world where normality is repetitive and a requirement document is still common place. How does someone who ","mobiledoc":null,"html":"<p>Imperfect  </p>\n\n<blockquote>\n  <p>not perfect - faulty or incomplete.</p>\n</blockquote>\n\n<p>I hear lots of people talk about ideals around testing and/or development. This usually involves ideas relating to agility, cross functional teams, test first/shift left, BDD/ATDD, single piece flow,  or any of the many common sense approaches to improving product development. Much of this revolves around development and test working closely together in a team, solving problems together, both equally confident in both the development and the testing. Make no mistake I would encourage all teams to understand how these ideas can help and improve them. Strive for continual improvement and relevant cultural change. <br />\nThat said, this article will not preach the joys of having confidence in the product earlier brought about by shifting left. I'm also not going to nail down exactly how you get a cross functional team working in perfect harmony (I will however use this to plug a talk I heard from the illustrious James Bach at Test Bash Manchester in 2016 <a href=\"https://dojo.ministryoftesting.com/lessons/don-t-think-so-close-to-me-managing-critical-and-social-distance-in-testing-james-bach\">https://dojo.ministryoftesting.com/lessons/don-t-think-so-close-to-me-managing-critical-and-social-distance-in-testing-james-bach</a> - I would encourage anyone looking at the dynamics of test and development in their team to sign up and have a look at this)</p>\n\n<p>So if that is our perfect place.............. then what about those who are still defined by an imperfect world. Those for whom manual regression is expected/required. What about those who live in a world where normality is repetitive and a requirement document is still common place. How does someone who </p>","amp":null,"image":null,"featured":0,"page":0,"status":"draft","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-10-02 19:49:37","created_by":2,"updated_at":"2017-10-03 15:35:24","updated_by":2,"published_at":null,"published_by":null},{"id":19,"uuid":"9bffa9bb-93f7-4698-a973-4a3f3513347e","title":"Test Resources and Links","slug":"resources","markdown":"I'm not going to pretend this is any way exhaustive. This isn't even scratching the surface of available testing resources however hopefully these will give you the direction to explore.\n\n**Testing Heuristics:**\n\nhttp://www.satisfice.com/tools/htsm.pdf - James Bach\nhttp://testobsessed.com/wp-content/uploads/2011/04/testheuristicscheatsheetv1.pdf\nhttp://katrinatester.blogspot.co.uk/2014/09/heuristics-and-oracles.html\n\n\n**Tester Development and Training:**\n\nhttps://dojo.ministryoftesting.com\nhttps://lisacrispin.com\nhttp://www.developsense.com/\nhttp://angiejones.tech/\nhttps://www.testagility.com/\n\n\n**Recommended Blogs**\n\nhttps://thefriendlytester.co.uk/\nhttp://www.duncannisbet.co.uk/blog\nhttp://qualityminds.de/en/blog\nhttps://dannydainton.com/\nhttps://villabonebeer.wordpress.com/villabone-testing-adventure/\nhttp://www.testersfindaway.com/\nhttps://rightsaidjames.com/\nhttp://theartfultester.com/\nhttp://www.rosiesherry.com/\nhttps://thegrowingtester.wordpress.com/\nhttps://thisgirltests.com\nhttp://www.cassandrahl.com/\nhttps://mysoftwarequality.wordpress.com/\nhttps://testpappy.wordpress.com/\nhttps://exit-23.co.uk/\nhttp://katrinatester.blogspot.co.uk","mobiledoc":null,"html":"<p>I'm not going to pretend this is any way exhaustive. This isn't even scratching the surface of available testing resources however hopefully these will give you the direction to explore.</p>\n\n<p><strong>Testing Heuristics:</strong></p>\n\n<p><a href=\"http://www.satisfice.com/tools/htsm.pdf\">http://www.satisfice.com/tools/htsm.pdf</a> - James Bach <br />\n<a href=\"http://testobsessed.com/wp-content/uploads/2011/04/testheuristicscheatsheetv1.pdf\">http://testobsessed.com/wp-content/uploads/2011/04/testheuristicscheatsheetv1.pdf</a> <br />\n<a href=\"http://katrinatester.blogspot.co.uk/2014/09/heuristics-and-oracles.html\">http://katrinatester.blogspot.co.uk/2014/09/heuristics-and-oracles.html</a></p>\n\n<p><strong>Tester Development and Training:</strong></p>\n\n<p><a href=\"https://dojo.ministryoftesting.com\">https://dojo.ministryoftesting.com</a> <br />\n<a href=\"https://lisacrispin.com\">https://lisacrispin.com</a> <br />\n<a href=\"http://www.developsense.com/\">http://www.developsense.com/</a> <br />\n<a href=\"http://angiejones.tech/\">http://angiejones.tech/</a> <br />\n<a href=\"https://www.testagility.com/\">https://www.testagility.com/</a></p>\n\n<p><strong>Recommended Blogs</strong></p>\n\n<p><a href=\"https://thefriendlytester.co.uk/\">https://thefriendlytester.co.uk/</a> <br />\n<a href=\"http://www.duncannisbet.co.uk/blog\">http://www.duncannisbet.co.uk/blog</a> <br />\n<a href=\"http://qualityminds.de/en/blog\">http://qualityminds.de/en/blog</a> <br />\n<a href=\"https://dannydainton.com/\">https://dannydainton.com/</a> <br />\n<a href=\"https://villabonebeer.wordpress.com/villabone-testing-adventure/\">https://villabonebeer.wordpress.com/villabone-testing-adventure/</a> <br />\n<a href=\"http://www.testersfindaway.com/\">http://www.testersfindaway.com/</a> <br />\n<a href=\"https://rightsaidjames.com/\">https://rightsaidjames.com/</a> <br />\n<a href=\"http://theartfultester.com/\">http://theartfultester.com/</a> <br />\n<a href=\"http://www.rosiesherry.com/\">http://www.rosiesherry.com/</a> <br />\n<a href=\"https://thegrowingtester.wordpress.com/\">https://thegrowingtester.wordpress.com/</a> <br />\n<a href=\"https://thisgirltests.com\">https://thisgirltests.com</a> <br />\n<a href=\"http://www.cassandrahl.com/\">http://www.cassandrahl.com/</a> <br />\n<a href=\"https://mysoftwarequality.wordpress.com/\">https://mysoftwarequality.wordpress.com/</a> <br />\n<a href=\"https://testpappy.wordpress.com/\">https://testpappy.wordpress.com/</a> <br />\n<a href=\"https://exit-23.co.uk/\">https://exit-23.co.uk/</a> <br />\n<a href=\"http://katrinatester.blogspot.co.uk\">http://katrinatester.blogspot.co.uk</a></p>","amp":null,"image":"/content/images/2018/05/Website-large-image-no-logo---1500x900.png","featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-10-03 14:04:16","created_by":2,"updated_at":"2018-05-09 22:11:54","updated_by":2,"published_at":"2018-05-09 22:07:56","published_by":2},{"id":20,"uuid":"4f1e9c40-03c9-4669-8e86-2fd101d1cf1b","title":"A Journey to 99 Seconds and Beyond......Part 1","slug":"a-journey-to-99-seconds-and-beyond-part-1-2","markdown":"###Where to Start?![](/content/images/2017/11/Start.jpg)\nThe hardest obstacle to overcome for this post has without question been figuring out where to start. A number of fascinating conversations at lean coffee to kick off a day of thought provoking and inspiring talks? \n\nBut then how can I ignore a day of exchanging ideas in some engaging workshops? So how about sitting down at a table on the morning of the workshops and chatting with a couple of excited strangers attending their first Test Bash, only to be joined by one half of Super Testing Bros (@JamesEspie). Although that would be a decent start point it wasn't really where the journey started. \n\nI'm missing all the fun and frolics of the meet up on the the previous evening at the wonderful RentalCars.com offices where despite arriving a little late for Pizza, I was able to listen to Matt Thomas (@dovesian) and get my first real taste of Mr Van Daele's (@isleoftesting) Test Sphere. A few beers may also have been 'forced' down my neck by @friendlytester \n\nSo I have my start point? \n\nWell actually if I'm really going to do my journey justice I'd have to roll back 12 months prior to this, at the first Test Bash Manchester..... my first Test Bash and my first really testing focused conference. Wow this may well take more than a single blog post.\n\n###The Journey Begins![](/content/images/2017/11/journey-begins.jpg)\nSo what happened 12 months ago? \n\nWell actually it was nothing hugely remarkable. It was just Testbash, in it's rawest form, in Manchester. I'd been looking to go to Testbash in Brighton for a few years but struggled with the financials given it would require hotel stay etc. A Manchester location and circumstances in my place of work at the time conspired to allow me to get the company to purchase 3 tickets for myself and my team. \n\nNow I will admit at this point I wasn't sure exactly what to expect, but I naively considered myself relatively experienced and knowledgable in the area of testing. Always a fan of learning more but half expecting at least some of the conference to be a case of learning how to suck eggs.\n\nSuffice to say the conference didn't disappoint and left me with an entirely different train of thought than I expected. The realisation that I still had lot to learn but equally a lot to give... working with and coaching my team being a part of my job that I particularly enjoyed. That said a realisation is not quite the same as clarity. As much as I might want to spread my wings I was still under no illusions that my self confidence could prove to be a blocker. Coaching and supporting a team of people I know still felt a million miles from putting myself out there, to engage in idea sharing with a group of peers who, I felt clearly had a much better perspective on testing (yep a hearty slice of imposter syndrome). \n\nAfter a day of some engaging ideas and exceptional talks I still felt like there was something to take from the conference that I had yet to grasp........ clarity came in the form of 99 second talks. Actually clarity really came in the questions I found myself asking of myself in relation to the 99 second talks. People were clearly stepping out of their comfort zones to engage this community of testers. Could this concept of shared learning and shared confidence be the gap I had identified? \n\nProviding encouragement and opportunity to people who might otherwise take two steps back seemed a powerful concept.\n\nSo this is where my journey began towards this years Testbash. Questions I was asking of myself that I felt I needed to discover the answers to: \n>Could I do a 99 second talk in front of a room full of knowledgable peers? \n\n>Would it even benefit me to do a 99 second talk? \n\n>How do I break down what seemed like a big challenge (for me and my personality) into something that felt achievable?\n\nThe first thing I needed was a goal and the goal in this instance was to put myself forward for a 99 second talk in 12 months time. More than enough time to prepare..... or so I thought.\n\n![](/content/images/2017/11/LOTR.jpg)","mobiledoc":null,"html":"<h3 id=\"wheretostartcontentimages201711startjpg\">Where to Start?<img src=\"/content/images/2017/11/Start.jpg\" alt=\"\" title=\"\" /></h3>\n\n<p>The hardest obstacle to overcome for this post has without question been figuring out where to start. A number of fascinating conversations at lean coffee to kick off a day of thought provoking and inspiring talks? </p>\n\n<p>But then how can I ignore a day of exchanging ideas in some engaging workshops? So how about sitting down at a table on the morning of the workshops and chatting with a couple of excited strangers attending their first Test Bash, only to be joined by one half of Super Testing Bros (@JamesEspie). Although that would be a decent start point it wasn't really where the journey started. </p>\n\n<p>I'm missing all the fun and frolics of the meet up on the the previous evening at the wonderful RentalCars.com offices where despite arriving a little late for Pizza, I was able to listen to Matt Thomas (@dovesian) and get my first real taste of Mr Van Daele's (@isleoftesting) Test Sphere. A few beers may also have been 'forced' down my neck by @friendlytester </p>\n\n<p>So I have my start point? </p>\n\n<p>Well actually if I'm really going to do my journey justice I'd have to roll back 12 months prior to this, at the first Test Bash Manchester..... my first Test Bash and my first really testing focused conference. Wow this may well take more than a single blog post.</p>\n\n<h3 id=\"thejourneybeginscontentimages201711journeybeginsjpg\">The Journey Begins<img src=\"/content/images/2017/11/journey-begins.jpg\" alt=\"\" title=\"\" /></h3>\n\n<p>So what happened 12 months ago? </p>\n\n<p>Well actually it was nothing hugely remarkable. It was just Testbash, in it's rawest form, in Manchester. I'd been looking to go to Testbash in Brighton for a few years but struggled with the financials given it would require hotel stay etc. A Manchester location and circumstances in my place of work at the time conspired to allow me to get the company to purchase 3 tickets for myself and my team. </p>\n\n<p>Now I will admit at this point I wasn't sure exactly what to expect, but I naively considered myself relatively experienced and knowledgable in the area of testing. Always a fan of learning more but half expecting at least some of the conference to be a case of learning how to suck eggs.</p>\n\n<p>Suffice to say the conference didn't disappoint and left me with an entirely different train of thought than I expected. The realisation that I still had lot to learn but equally a lot to give... working with and coaching my team being a part of my job that I particularly enjoyed. That said a realisation is not quite the same as clarity. As much as I might want to spread my wings I was still under no illusions that my self confidence could prove to be a blocker. Coaching and supporting a team of people I know still felt a million miles from putting myself out there, to engage in idea sharing with a group of peers who, I felt clearly had a much better perspective on testing (yep a hearty slice of imposter syndrome). </p>\n\n<p>After a day of some engaging ideas and exceptional talks I still felt like there was something to take from the conference that I had yet to grasp........ clarity came in the form of 99 second talks. Actually clarity really came in the questions I found myself asking of myself in relation to the 99 second talks. People were clearly stepping out of their comfort zones to engage this community of testers. Could this concept of shared learning and shared confidence be the gap I had identified? </p>\n\n<p>Providing encouragement and opportunity to people who might otherwise take two steps back seemed a powerful concept.</p>\n\n<p>So this is where my journey began towards this years Testbash. Questions I was asking of myself that I felt I needed to discover the answers to:  </p>\n\n<blockquote>\n  <p>Could I do a 99 second talk in front of a room full of knowledgable peers? </p>\n  \n  <p>Would it even benefit me to do a 99 second talk? </p>\n  \n  <p>How do I break down what seemed like a big challenge (for me and my personality) into something that felt achievable?</p>\n</blockquote>\n\n<p>The first thing I needed was a goal and the goal in this instance was to put myself forward for a 99 second talk in 12 months time. More than enough time to prepare..... or so I thought.</p>\n\n<p><img src=\"/content/images/2017/11/LOTR.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-10-30 22:55:12","created_by":2,"updated_at":"2017-11-14 20:19:24","updated_by":2,"published_at":"2017-11-13 20:54:42","published_by":2},{"id":21,"uuid":"fcbb4863-bb15-4183-8769-707452c8d337","title":"A Journey to 99 Seconds and Beyond.........Part 2","slug":"a-journey-to-99-seconds-and-beyond-part-2","markdown":"###Goal Set.... What Now?\nSo Testbash Manchester 2016 passed and I came out encouraged, optimistic and full of ideas. I'd set myself a goal and I was going to ride this wave of optimism right through the next 12 months. Where do I go next?![](/content/images/2017/11/waveofoptimism.jpg)\n\nMy first port of call was the office. Now I won't go into any great detail around the why's, where's and how's but at this point in time my place of work was suffering from a massive air of negativity...... well if I'm being honest that is an understatement. I do however try to find positivity and opportunity where I can and I had this wave of optimism to ride so I made my first personal change. I made time for myself to be a part of the testing again. With the greatest interests of my team at heart I'd previously convinced myself that the best thing I could do for my team was to be a conduit for change. Putting all my efforts into identifying the right angles and arguments to get buy in from the business. Fighting the good fight toward a better testing future.\n\nWhat I had been missing all along and one of my key realisations of the back of Testbash that I had lost sight of, was that to make change happen you have to be a part of the change. You have to understand what you are trying to change and why you are trying to change it? How could I possibly understand the challenges to be met and the areas that would benefit from change without being fully engaged and a part of what I was trying to change. I won't pretend it was all roses again. There were factors beyond my control that continued to drive a negative undertone across a large proportion of the business, but....... would you believe it......... I found myself enjoying testing again. Not only that but I was also finding that changes didn't need to be significant and wholesale. By being a part of the team and understanding the challenges I found I could be a part of the solution. The solutions didn't have to wholesale reinvention requiring buy in, they could be small trials and ideas driven by the team from within the team.\n\nNow I won't lie, this wasn't a silver bullet that changed the world. It didn't solve everyones frustrations or revolutionise testing within the business, there were other factors at play. What it did achieve however, during what was one of the most frustrating periods of my career to date, was to shift my testing reality and leave me looking at everything with a subtly different pair of eyes.![](/content/images/2017/11/New-Reality.jpg)\n###The New Reality\nSo the new reality wasn't that new. I've received plenty of guidance, advice, direction in the past that pointed me towards this new reality but if I'm being brutally honest I never got it. I had been able to recall it and understand the theory but for the first time I actually got it. \nPersonal development and achievement didn't require a senior job title to define it. The right culture is more important than the right position. A good test manager is one that is working with his team towards making his role as a test manager redundant. Coaching can provide as much more satisfaction than management. All ideals, theories, advice that I have been on the receiving end of but only now was I really understanding the underlying themes and concepts. Not only that but I was also finding this new (but not new) reality fascinating and exciting in equal measure.\nThis new reality was great and all that but I was still left with another question.\n\n>What does all of this actually mean to me?\n\nThis person who had based his personal development and  concepts of progression on hierarchical theory. \nWell..... what it meant was that I wanted something subtly different. It meant that whether I was heading up and developing a team or working as part of a team to support change was neither here nor there. What was now important to me was that I was able to help others  by improving myself. I wanted to achieve some kind of recognition based on my knowledge, my experience and how I could use that to help others. I wanted to become more integrated into the testing community. This ultimately meant that I needed a new plan. I needed some goals. Some achievable targets.\n\n* What do you know....... I already had one.... my 99 second talk - although Testbash Manchester 2017 was looking much closer than at the start of this journey.\n* I needed to be finding opportunities to talk about testing freely and without judgement with peers. I needed to be going to more meetups and conferences. Could this open another doorway. After all little old Stoke-On-Trent and even down into the West Midlands has a growing IT services presence and little in the way of communities of practice. Maybe a West Midlands testing community meet up would thrive?\n* Taking my 99 second talk goal a step further could I put my ideas forward by way of conference talking. Was this really achievable? \n* If I wanted to do all of this I needed to be making opportunities to be exposed to everything testing has to offer. The good, the bad, the mundane, the exciting, the frustrating and the new. It was clear at this stage that if I wanted to find this exposure I needed to bring about change. Change had many guises and I had opportunities to walk into alternative Test Management roles, offers on the table even. This didn't feel like it aligned particularly well with my journey and my new reality. Could it be that this was the moment I took a step on my own into contracting entwined, eventually, in due course, with some coaching and consultancy. It would certainly provide a sounder financial footing for investing in myself (conferences, training, workshops etc). It would also bring with it exposure and variety. But it seemed a big step for someone who had workplace/employer longevity ingrained into him. I also had the lingering (old reality) reservations about 'stepping back' into a test role after years in test management roles.\n\nSo things moved pretty darn quickly with my last goal. Before I could blink, the planets seemed to align with a combination of redundancy (I was going to get paid to leave somewhere I had already convinced myself I needed to leave), a contract 10 minutes from home landing on my lap and news that Testbash Manchester was not only soon to be going on sale but was expanding to a number of days. I was lucky enough to be able to bounce my thinking and ideas of one Duncan Nisbet (@DuncanNisbet) who's advice over this period was invaluable.\n\nI made some headway on the meetups, managing to get up to the legendary Liverpool Tester Meetup and in turn have had some excellent conversations with his royal highness Mr Leigh Rathbone (@villabone). I will admit though that the meetup attendance still sits firmly in the '**MUST TRY HARDER**' category.\n\nBefore I knew it I was booking my tickets for Testbash  Manchester 2017....... but what would I be attending? The conference was a given, the workshops were hugely appealing. Not entirely flush with cash but sufficiently settled into contractor life and with an extension in hand I decided that although the three day workshop was probably a step to far financially, the workshop day and the conference was a must. I'd have very much liked to have included the open space onto that but I have to give due consideration to my family. Supportive as they are, the challenges surrounding my sons autism have to come into play and if I'm being entirely honest I would miss them. Some recompense for not being able to attend the open space appeared in the form of the two pre-Testbash meetups. If I was going to throw myself wholeheartedly into this event then I realised that both meetups were a must.......boy was I right.\n\nSo there it was. The scene was set, my journey was in full flight, my new reality was ever emerging and I was progressing on my goals/targets.\n\nBUT.... what about that 99 second talk I was going to do. Convinced that if I was going to do a 99 second talk I wanted it to be something of note, something original, avoiding all the cliches. Testbash was still a long way off right. Still loads of time.......![](/content/images/2017/11/LOTRROTK.jpg)","mobiledoc":null,"html":"<h3 id=\"goalsetwhatnow\">Goal Set.... What Now?</h3>\n\n<p>So Testbash Manchester 2016 passed and I came out encouraged, optimistic and full of ideas. I'd set myself a goal and I was going to ride this wave of optimism right through the next 12 months. Where do I go next?<img src=\"/content/images/2017/11/waveofoptimism.jpg\" alt=\"\" title=\"\" /></p>\n\n<p>My first port of call was the office. Now I won't go into any great detail around the why's, where's and how's but at this point in time my place of work was suffering from a massive air of negativity...... well if I'm being honest that is an understatement. I do however try to find positivity and opportunity where I can and I had this wave of optimism to ride so I made my first personal change. I made time for myself to be a part of the testing again. With the greatest interests of my team at heart I'd previously convinced myself that the best thing I could do for my team was to be a conduit for change. Putting all my efforts into identifying the right angles and arguments to get buy in from the business. Fighting the good fight toward a better testing future.</p>\n\n<p>What I had been missing all along and one of my key realisations of the back of Testbash that I had lost sight of, was that to make change happen you have to be a part of the change. You have to understand what you are trying to change and why you are trying to change it? How could I possibly understand the challenges to be met and the areas that would benefit from change without being fully engaged and a part of what I was trying to change. I won't pretend it was all roses again. There were factors beyond my control that continued to drive a negative undertone across a large proportion of the business, but....... would you believe it......... I found myself enjoying testing again. Not only that but I was also finding that changes didn't need to be significant and wholesale. By being a part of the team and understanding the challenges I found I could be a part of the solution. The solutions didn't have to wholesale reinvention requiring buy in, they could be small trials and ideas driven by the team from within the team.</p>\n\n<p>Now I won't lie, this wasn't a silver bullet that changed the world. It didn't solve everyones frustrations or revolutionise testing within the business, there were other factors at play. What it did achieve however, during what was one of the most frustrating periods of my career to date, was to shift my testing reality and leave me looking at everything with a subtly different pair of eyes.<img src=\"/content/images/2017/11/New-Reality.jpg\" alt=\"\" title=\"\" />  </p>\n\n<h3 id=\"thenewreality\">The New Reality</h3>\n\n<p>So the new reality wasn't that new. I've received plenty of guidance, advice, direction in the past that pointed me towards this new reality but if I'm being brutally honest I never got it. I had been able to recall it and understand the theory but for the first time I actually got it. <br />\nPersonal development and achievement didn't require a senior job title to define it. The right culture is more important than the right position. A good test manager is one that is working with his team towards making his role as a test manager redundant. Coaching can provide as much more satisfaction than management. All ideals, theories, advice that I have been on the receiving end of but only now was I really understanding the underlying themes and concepts. Not only that but I was also finding this new (but not new) reality fascinating and exciting in equal measure. <br />\nThis new reality was great and all that but I was still left with another question.</p>\n\n<blockquote>\n  <p>What does all of this actually mean to me?</p>\n</blockquote>\n\n<p>This person who had based his personal development and  concepts of progression on hierarchical theory. <br />\nWell..... what it meant was that I wanted something subtly different. It meant that whether I was heading up and developing a team or working as part of a team to support change was neither here nor there. What was now important to me was that I was able to help others  by improving myself. I wanted to achieve some kind of recognition based on my knowledge, my experience and how I could use that to help others. I wanted to become more integrated into the testing community. This ultimately meant that I needed a new plan. I needed some goals. Some achievable targets.</p>\n\n<ul>\n<li>What do you know....... I already had one.... my 99 second talk - although Testbash Manchester 2017 was looking much closer than at the start of this journey.</li>\n<li>I needed to be finding opportunities to talk about testing freely and without judgement with peers. I needed to be going to more meetups and conferences. Could this open another doorway. After all little old Stoke-On-Trent and even down into the West Midlands has a growing IT services presence and little in the way of communities of practice. Maybe a West Midlands testing community meet up would thrive?</li>\n<li>Taking my 99 second talk goal a step further could I put my ideas forward by way of conference talking. Was this really achievable? </li>\n<li>If I wanted to do all of this I needed to be making opportunities to be exposed to everything testing has to offer. The good, the bad, the mundane, the exciting, the frustrating and the new. It was clear at this stage that if I wanted to find this exposure I needed to bring about change. Change had many guises and I had opportunities to walk into alternative Test Management roles, offers on the table even. This didn't feel like it aligned particularly well with my journey and my new reality. Could it be that this was the moment I took a step on my own into contracting entwined, eventually, in due course, with some coaching and consultancy. It would certainly provide a sounder financial footing for investing in myself (conferences, training, workshops etc). It would also bring with it exposure and variety. But it seemed a big step for someone who had workplace/employer longevity ingrained into him. I also had the lingering (old reality) reservations about 'stepping back' into a test role after years in test management roles.</li>\n</ul>\n\n<p>So things moved pretty darn quickly with my last goal. Before I could blink, the planets seemed to align with a combination of redundancy (I was going to get paid to leave somewhere I had already convinced myself I needed to leave), a contract 10 minutes from home landing on my lap and news that Testbash Manchester was not only soon to be going on sale but was expanding to a number of days. I was lucky enough to be able to bounce my thinking and ideas of one Duncan Nisbet (@DuncanNisbet) who's advice over this period was invaluable.</p>\n\n<p>I made some headway on the meetups, managing to get up to the legendary Liverpool Tester Meetup and in turn have had some excellent conversations with his royal highness Mr Leigh Rathbone (@villabone). I will admit though that the meetup attendance still sits firmly in the '<strong>MUST TRY HARDER</strong>' category.</p>\n\n<p>Before I knew it I was booking my tickets for Testbash  Manchester 2017....... but what would I be attending? The conference was a given, the workshops were hugely appealing. Not entirely flush with cash but sufficiently settled into contractor life and with an extension in hand I decided that although the three day workshop was probably a step to far financially, the workshop day and the conference was a must. I'd have very much liked to have included the open space onto that but I have to give due consideration to my family. Supportive as they are, the challenges surrounding my sons autism have to come into play and if I'm being entirely honest I would miss them. Some recompense for not being able to attend the open space appeared in the form of the two pre-Testbash meetups. If I was going to throw myself wholeheartedly into this event then I realised that both meetups were a must.......boy was I right.</p>\n\n<p>So there it was. The scene was set, my journey was in full flight, my new reality was ever emerging and I was progressing on my goals/targets.</p>\n\n<p>BUT.... what about that 99 second talk I was going to do. Convinced that if I was going to do a 99 second talk I wanted it to be something of note, something original, avoiding all the cliches. Testbash was still a long way off right. Still loads of time.......<img src=\"/content/images/2017/11/LOTRROTK.jpg\" alt=\"\" title=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-11-14 20:49:53","created_by":2,"updated_at":"2017-11-16 01:00:59","updated_by":2,"published_at":"2017-11-16 00:58:27","published_by":2},{"id":22,"uuid":"15af3c9b-7dda-40b9-a731-1e30e9672c67","title":"A Journey to 99 Seconds and Beyond......Part 3","slug":"a-journey-to-99-seconds-and-beyond-part-3","markdown":"### The Countdown\n![](/content/images/2017/12/countdown-1.jpeg)\n\nI only had a mere 99 seconds to fill and months to figure out how to fill it, how hard could that be. I was bound to be struck by a lightening idea, have someone whisper in my ear in the night or experience something that stood out given this new and exciting reality I was in…… surely.\n\nTickets to Testbash Manchester bought… CHECK, contract in full flight… CHECK, exposure to helpful and knowledgeable peers… CHECK. This was all very easy. Only it wasn’t really easy, it was taking time and effort. Value comes from time and effort though so I was fully aware and encouraged by this investment into self-development.\n\nWhilst it was still a long way off, I was eager not to wait for an idea for a 99 second talk to come and slap me round the face with a wet kipper. I needed to expose myself to the right environments; the right people and most importantly make the most of opportunities that presented themselves.\n\nI was getting the chance, courtesy of Liverpool Tester Gathering (@LplTesterGather), to listen to the likes of Jit Gosai (@JitGo) and Claire Reckless (@ClaireReckless) even before her amazing Testbash Manchester 2017 talk.  Now I will openly admit that the distance to Liverpool, whilst being perfectly manageable, makes it difficult to attend as often as I would like. There was also the North West Tester gathering in Manchester to get up to, again not quite around the corner. It did however drive out the interesting question of how much interest and how valuable would a test meet up closer to home be. Would there be enough interest and enough sponsorship. Would the time commitments to set it up be even more demanding than travelling to other events further afield? It was certainly an idea that warranted further consideration but could I really pull something together even close to what Messrs Rathbone (@villabone), Nisbet (@duncnisbet) and Thacker (@TeamLHC) have pulled together in Liverpool. A hint of imposter syndrome maybe?\n\nI had new and interesting challenges in my contract and challenges are good right. I won’t profess that it’s the perfect environment but that in itself creates opportunity for improvement and learning. I started the idea of a personal retro that automatically loaded on booting my PC at work. I was intent on capturing my observations and learning’s for three key reasons.\n•\tIn the hope I could provide some help, guidance and coaching to the testers around me.\n•\tTo help improve myself\n•\tTo try and capture ideas that might spark a 99 second talk.\n\nI was actively looking around for interesting blogs and articles to guide my exploration and discovery. Step forward Ministry of Test. After Testbash Manchester this shouldn’t be a surprise but alas I continued to be amazed by how many roads lead back to Ministry of Test when I delved around the world of testing and test-focussed learning. Don’t get me wrong there is a whole world of testing knowledge and ideas out there if you are willing to look around for them. This was probably one of the most valuable lessons on this journey I was on, that the key to learning was looking, listening and asking with an open mind. I’d never really listened to a podcast before but I now find myself with somewhat of a minor addiction to a couple of podcasts in particular – Super Testing Bros (@SuperTestingBro) and Testers’ Island Discs (@TestersIsland).\n\nSo time moved on pretty quickly over the coming months. It’s amazing how time skips a chunk around the school holidays, 6 weeks disappears in a heartbeat. Before I knew it I was only a month away from something that had seemed a lifetime away at the start of this journey. Testbash Manchester 2017 was now a matter of weeks away and my excitement levels were rising. I’d booked my hotel and was fully committed to arriving the night before for the ‘Pre-Testbash Manchester Workshop Meetup’…… the title needs a little work Richard. That in itself proved to be a master stroke. I was talking to a colleague who was attending the conference day about it regularly at work.  Something about the build up to this year’s Testbash felt decidedly different and I was like a kid in the build up to Christmas. Was it the new reality I was in? Maybe the fact I was throwing myself into the whole experience this year fully intending to be a part of the testing community? Or was it because the commitment I made to myself 12 months earlier was now coming into full view……. Wait, what? Oh yeh that 99 second talk thing? Whilst I hadn’t entirely lost sight of it, it had faded further back in my mind and as such I felt no closer to having a convincing topic I was confident to talk about. Sure I had some vague ideas to consider but none were really selling themselves to me as either original, interesting or relevant. Maybe I just needed to pick something and go with it. The idea of not doing a 99 second talk weighed on my mind a little and I couldn’t shake the thought that if I wasn’t comfortable with a subject to talk about, I wouldn’t go through with the talk. Something I find myself constantly guilty of is over thinking things. This can be beneficial in testing as it allows me to cover many angles and consider many questions. It can however be somewhat of a burden and this felt like one of those times.\n\nAfter a further blink I was into the week that would be Testbash Manchester and logistics were overtaking any thoughts of my 99 second talk. I had kind of settled on a possible topic but had by no means convinced myself that it was the right topic. \n\n### Testbash Manchester 2017 - The Beginnning\n![](/content/images/2017/12/TB-Manchester.png)\nFor someone who has a reasonable grasp of the area between Stoke and Manchester you’d think I’d have planned the logistics of getting to the ‘Pre-Testbash Manchester Workshop Meetup’ (just rolls off the tongue) a little better. I wanted to get to my hotel, check in and get the metro into Manchester to allow me to relax a little and have a drink. Leaving Stoke at 5 probably wasn’t my greatest bit of planning and I found myself rushing a little. The whole meetup aspect of this years Testbash seemed almost as important as the actually event itself and I was determined I wasn’t going to miss it. That said as I worked my way through the traffic and the start time of the meetup drew ever closer, I would be lying if I said I didn’t consider crashing in my room when I reached the hotel. I certainly didn’t fancy walking into the meetup in the middle of a talk. Fortunately my excitement for the whole Testbash event got the better of me and I was able to do a lightening stop at the hotel to drop my things off, jump on the first passing tram and arrive at the impressive RentalCars.com offices just in time for the first talk. \n\nI’d missed the pizza but a beer was on hand and Matt Thomas (@dovesian - our RentalCars host and first speaker) kicked off my Testbash experience in style. He was talking about Coaching vs Teaching, a topic that has been prominent in my mind throughout many of my years in testing. Hell it was also a massive part of the change in mindset I’d been through over the previous 12 months. I’d always considered myself someone who leaned (or at least attempted to lean) towards a coaching style and guiding people towards finding answers for themselves rather than readily enforcing my own wisdom on others.  It was fascinating listening to Matt talk about the balance between learning and coaching and a great sign of things to come over the next few days. Following on from Matt was Beren Van Daele (@isleoftesting) and Marcel Gehlen (@Marcel_Gehlen) with a session on using the TestSphere game to drive out and address testing risk. This was of particular interest for me, having seen Beren introduce the cards so passionately a year earlier at Testbash Manchester 2016. I was interested to see the evolution of the previous 12 months, especially given the extra support from MOT and Marcel et al. I have to say I wasn’t disappointed and the cards became a must have pretty quickly. Not just because of the experience and knowledge invested into the cards but also because the game looks to be a great communication tool. It proved to be the perfect opportunity for me to jump into the social aspect of Testbash Manchester. The team I was in with for the exercise, which included the ever enthusiastic Heather Reid (@heather_reiduff), Shailesh Kumar (@AdaptableTester) and Nick Pass (@SlatS), had quite a breadth of opinion and clearly a great deal of experience. What struck me though was how relaxed and comfortable chatting everyone was (even beyond the scope of the game and even beyond the scope of testing at times).  This was the social/meetup side of Testbash that I’ve heard so much about and had committed myself to.\n\nAll good things come to an end…………. Fortunately (for those of us a little later arriving) this wasn’t the end of this particular night. A number of the group headed back to Salford Quays for drinks in a bar and plenty of relaxed, genuine, friendly, even at times slightly bizarre, (@KITesting will know exactly what I mean), conversation and merriment. I can safely say I went to bed even more excited (if that’s possible) for the coming days and importantly, without even a hint of consideration for what I would do for my 99 second talk or even for that matter whether I would be doing one. \n\nThe following morning started off with the most pleasant of surprises. I’ve been to Salford Quays on a number of occasions and after growing up in the country had never really considered it a serene and calming setting. My stroll to the Lowry in the morning sun for the Workshop day was everything I wasn’t used to and put me in the perfect frame of mind.  I woke up with a slight clash between anticipation for the day ahead and the nerves of spending the day learning and sharing with some of the testing communities most experienced and revered names (a hint of imposter syndrome maybe). The walk in however left me so relaxed that I walked into the meet area where everyone was beginning to gather and without my usual hesitation, headed straight for a table with an nervous attendee sat alone and struck up a conversation. Whether it was the affects of the previous night’s frivolity or the calming effect of the stroll along the quays, I was feeling confident and ready for the day ahead. We were soon joined by a few other attendees, including the distinctive southern hemisphere tones of one half of @SuperTestingBro (@JamesEspie) and a gentleman named James Sheasby Thomas (@RightSaidJames), who I would later find out was doing a fabulous talk on Accessibility Testing the following day.\n\nThe decision on which Workshops to attend hadn’t been particularly easy. I was initially drawn to the Exploratory Testing 101 full day workshop but was eager to expose myself to as much learning and variety as possible. As such I took the decision to attend two different workshops, it was just a question of which two. The options were such that there was no obvious choice. I could easily justify attending any of the workshops but had settled on a morning with Michael Bolton (@MichaelBolton) learning new ideas around recording reporting and an afternoon with Anne-Marie Charrett.(@Charrett) discussing quality.\n\nThe workshops were two contrasting delivery styles. Michael’s provided an excellent session taking us through lessons on the importance of understanding the story we are trying to tell and how that feeds into the decision on what we report. I had another moment of awe in Michael’s workshop as I observed the wealth of experience and knowledge in my peers around me. I was on a table with @_Testheader, @MarianneDuijst and the aforementioned @RightSaidJames with many more prominent peers around the room. The first exercise didn’t quite kick off according to plan due to the (so called) cross platform software we were asked to download only having an executable installation (not ideal for the mac users around the room). The upshot to this was, in my opinion, a beneficial side effect, meaning more people collaborating around a smaller number of laptops and ultimately greater discussion and sharing of ideas. It was eye opening to walk around seeing other people’s ideas on note taking and reporting with some excellent approaches on show (mind mapping is my new best friend). It also gave me my first introduction to @constancehermit, although at this stage I was oblivious to her artistic talents (becoming a cartoon drawn by Constance is now officially on my bucket list). Michael’s expressive and passionate way of getting across his ideas and concepts (with the occasional rant thrown in) was a good demonstration of ‘teaching’ in action. I can even confirm that I have now actively replaced “Expected Behaviour” with “Desired Behaviour” in my testing terminology.\n\nThe break between workshops was, what can only be described as a missed opportunity. With so much to take in from the morning workshop I figured I’d take some time over lunch to reflect on what had been a fantastic session with young Mr Bolton. Unfortunately rather than reflection, I found myself missing out on what should have been a valuable opportunity to meet, greet and talk test for what turned out to be 30 minutes of indecision and procrastination around 99 second talks. The worst of it was that at the end of the 30 minutes I felt no more confident about doing a 99 second talk (or not doing one) than I had over the previous 6 months.\nThe feeling of a wasted lunch break left me even more determined to make the most of the afternoon session and added to the fact that I felt confident in the subject matter I had a good feeling about the quality workshop. Anne-Marie had a distinctly different engagement style than Michael and she made it clear right from the start that this would be a discovery session from which we could form our own conclusions. Don’t get me wrong Michael and Anne-Marie share the same air of confidence over the topics being delivered and both gave me a feeling of faith in their opinions and views. Anne-Marie’s workshop however felt distinctly more like a coaching session for which no answers were given. In turn this approach left me feeling even more at ease.\n\nIt was fascinating to see such a breadth and depth of opinions and perceptions on where quality fits in. The session was designed to help us to understand that quality can be emotive and due to the fact that it means something very different to different roles in different contexts, requires clarification with wide ranging input (an exercise all to often dismissed as to difficult or not important enough. The example product that the exercise was based on was a challenge to get familiarity with and it became quickly clear that marketing was unlikely to become a career choice anytime soon. The same can be said of pretty much all of in our group. Nevertheless there were valuable takeaways around techniques to try and ensure those difficult discussions take place around what quality means to any given business. Also how that can be opened out to parts of the business that may otherwise have very little awareness, understanding or enthusiasm for quality.\n\nThe afternoon workshop also helped introduce me to a young and enthusiastic @pravkpatel. Prav was attending his first Testbash and had the added incentive of having found out, literally that day, that he had been promoted to test lead. What struck me about Prav was how keenly he was listening after asking some pertinent questions. He seemed to be absorbing everything being said and discussed with such focus. If he takes the passion he was showing in our conversations for Testbash and learning into his team then I’m sure he will do an excellent job. It proved to be another example of just how valuable, how supportive and how much of a motivator Ministry of Testing is in the testing community.\n\nWith roughly 24 hours until I was planning to do my 99 second talk, my desire to do a talk had been expanded by the impressive Michael Bolton and Anne-Marie Charrett but the decision on what to talk about felt harder than ever............\n","mobiledoc":null,"html":"<h3 id=\"thecountdown\">The Countdown</h3>\n\n<p><img src=\"/content/images/2017/12/countdown-1.jpeg\" alt=\"\" /></p>\n\n<p>I only had a mere 99 seconds to fill and months to figure out how to fill it, how hard could that be. I was bound to be struck by a lightening idea, have someone whisper in my ear in the night or experience something that stood out given this new and exciting reality I was in…… surely.</p>\n\n<p>Tickets to Testbash Manchester bought… CHECK, contract in full flight… CHECK, exposure to helpful and knowledgeable peers… CHECK. This was all very easy. Only it wasn’t really easy, it was taking time and effort. Value comes from time and effort though so I was fully aware and encouraged by this investment into self-development.</p>\n\n<p>Whilst it was still a long way off, I was eager not to wait for an idea for a 99 second talk to come and slap me round the face with a wet kipper. I needed to expose myself to the right environments; the right people and most importantly make the most of opportunities that presented themselves.</p>\n\n<p>I was getting the chance, courtesy of Liverpool Tester Gathering (@LplTesterGather), to listen to the likes of Jit Gosai (@JitGo) and Claire Reckless (@ClaireReckless) even before her amazing Testbash Manchester 2017 talk.  Now I will openly admit that the distance to Liverpool, whilst being perfectly manageable, makes it difficult to attend as often as I would like. There was also the North West Tester gathering in Manchester to get up to, again not quite around the corner. It did however drive out the interesting question of how much interest and how valuable would a test meet up closer to home be. Would there be enough interest and enough sponsorship. Would the time commitments to set it up be even more demanding than travelling to other events further afield? It was certainly an idea that warranted further consideration but could I really pull something together even close to what Messrs Rathbone (@villabone), Nisbet (@duncnisbet) and Thacker (@TeamLHC) have pulled together in Liverpool. A hint of imposter syndrome maybe?</p>\n\n<p>I had new and interesting challenges in my contract and challenges are good right. I won’t profess that it’s the perfect environment but that in itself creates opportunity for improvement and learning. I started the idea of a personal retro that automatically loaded on booting my PC at work. I was intent on capturing my observations and learning’s for three key reasons. <br />\n•    In the hope I could provide some help, guidance and coaching to the testers around me.\n•    To help improve myself\n•    To try and capture ideas that might spark a 99 second talk.</p>\n\n<p>I was actively looking around for interesting blogs and articles to guide my exploration and discovery. Step forward Ministry of Test. After Testbash Manchester this shouldn’t be a surprise but alas I continued to be amazed by how many roads lead back to Ministry of Test when I delved around the world of testing and test-focussed learning. Don’t get me wrong there is a whole world of testing knowledge and ideas out there if you are willing to look around for them. This was probably one of the most valuable lessons on this journey I was on, that the key to learning was looking, listening and asking with an open mind. I’d never really listened to a podcast before but I now find myself with somewhat of a minor addiction to a couple of podcasts in particular – Super Testing Bros (@SuperTestingBro) and Testers’ Island Discs (@TestersIsland).</p>\n\n<p>So time moved on pretty quickly over the coming months. It’s amazing how time skips a chunk around the school holidays, 6 weeks disappears in a heartbeat. Before I knew it I was only a month away from something that had seemed a lifetime away at the start of this journey. Testbash Manchester 2017 was now a matter of weeks away and my excitement levels were rising. I’d booked my hotel and was fully committed to arriving the night before for the ‘Pre-Testbash Manchester Workshop Meetup’…… the title needs a little work Richard. That in itself proved to be a master stroke. I was talking to a colleague who was attending the conference day about it regularly at work.  Something about the build up to this year’s Testbash felt decidedly different and I was like a kid in the build up to Christmas. Was it the new reality I was in? Maybe the fact I was throwing myself into the whole experience this year fully intending to be a part of the testing community? Or was it because the commitment I made to myself 12 months earlier was now coming into full view……. Wait, what? Oh yeh that 99 second talk thing? Whilst I hadn’t entirely lost sight of it, it had faded further back in my mind and as such I felt no closer to having a convincing topic I was confident to talk about. Sure I had some vague ideas to consider but none were really selling themselves to me as either original, interesting or relevant. Maybe I just needed to pick something and go with it. The idea of not doing a 99 second talk weighed on my mind a little and I couldn’t shake the thought that if I wasn’t comfortable with a subject to talk about, I wouldn’t go through with the talk. Something I find myself constantly guilty of is over thinking things. This can be beneficial in testing as it allows me to cover many angles and consider many questions. It can however be somewhat of a burden and this felt like one of those times.</p>\n\n<p>After a further blink I was into the week that would be Testbash Manchester and logistics were overtaking any thoughts of my 99 second talk. I had kind of settled on a possible topic but had by no means convinced myself that it was the right topic. </p>\n\n<h3 id=\"testbashmanchester2017thebeginnning\">Testbash Manchester 2017 - The Beginnning</h3>\n\n<p><img src=\"/content/images/2017/12/TB-Manchester.png\" alt=\"\" />\nFor someone who has a reasonable grasp of the area between Stoke and Manchester you’d think I’d have planned the logistics of getting to the ‘Pre-Testbash Manchester Workshop Meetup’ (just rolls off the tongue) a little better. I wanted to get to my hotel, check in and get the metro into Manchester to allow me to relax a little and have a drink. Leaving Stoke at 5 probably wasn’t my greatest bit of planning and I found myself rushing a little. The whole meetup aspect of this years Testbash seemed almost as important as the actually event itself and I was determined I wasn’t going to miss it. That said as I worked my way through the traffic and the start time of the meetup drew ever closer, I would be lying if I said I didn’t consider crashing in my room when I reached the hotel. I certainly didn’t fancy walking into the meetup in the middle of a talk. Fortunately my excitement for the whole Testbash event got the better of me and I was able to do a lightening stop at the hotel to drop my things off, jump on the first passing tram and arrive at the impressive RentalCars.com offices just in time for the first talk. </p>\n\n<p>I’d missed the pizza but a beer was on hand and Matt Thomas (@dovesian - our RentalCars host and first speaker) kicked off my Testbash experience in style. He was talking about Coaching vs Teaching, a topic that has been prominent in my mind throughout many of my years in testing. Hell it was also a massive part of the change in mindset I’d been through over the previous 12 months. I’d always considered myself someone who leaned (or at least attempted to lean) towards a coaching style and guiding people towards finding answers for themselves rather than readily enforcing my own wisdom on others.  It was fascinating listening to Matt talk about the balance between learning and coaching and a great sign of things to come over the next few days. Following on from Matt was Beren Van Daele (@isleoftesting) and Marcel Gehlen (@Marcel<em>Gehlen) with a session on using the TestSphere game to drive out and address testing risk. This was of particular interest for me, having seen Beren introduce the cards so passionately a year earlier at Testbash Manchester 2016. I was interested to see the evolution of the previous 12 months, especially given the extra support from MOT and Marcel et al. I have to say I wasn’t disappointed and the cards became a must have pretty quickly. Not just because of the experience and knowledge invested into the cards but also because the game looks to be a great communication tool. It proved to be the perfect opportunity for me to jump into the social aspect of Testbash Manchester. The team I was in with for the exercise, which included the ever enthusiastic Heather Reid (@heather</em>reiduff), Shailesh Kumar (@AdaptableTester) and Nick Pass (@SlatS), had quite a breadth of opinion and clearly a great deal of experience. What struck me though was how relaxed and comfortable chatting everyone was (even beyond the scope of the game and even beyond the scope of testing at times).  This was the social/meetup side of Testbash that I’ve heard so much about and had committed myself to.</p>\n\n<p>All good things come to an end…………. Fortunately (for those of us a little later arriving) this wasn’t the end of this particular night. A number of the group headed back to Salford Quays for drinks in a bar and plenty of relaxed, genuine, friendly, even at times slightly bizarre, (@KITesting will know exactly what I mean), conversation and merriment. I can safely say I went to bed even more excited (if that’s possible) for the coming days and importantly, without even a hint of consideration for what I would do for my 99 second talk or even for that matter whether I would be doing one. </p>\n\n<p>The following morning started off with the most pleasant of surprises. I’ve been to Salford Quays on a number of occasions and after growing up in the country had never really considered it a serene and calming setting. My stroll to the Lowry in the morning sun for the Workshop day was everything I wasn’t used to and put me in the perfect frame of mind.  I woke up with a slight clash between anticipation for the day ahead and the nerves of spending the day learning and sharing with some of the testing communities most experienced and revered names (a hint of imposter syndrome maybe). The walk in however left me so relaxed that I walked into the meet area where everyone was beginning to gather and without my usual hesitation, headed straight for a table with an nervous attendee sat alone and struck up a conversation. Whether it was the affects of the previous night’s frivolity or the calming effect of the stroll along the quays, I was feeling confident and ready for the day ahead. We were soon joined by a few other attendees, including the distinctive southern hemisphere tones of one half of @SuperTestingBro (@JamesEspie) and a gentleman named James Sheasby Thomas (@RightSaidJames), who I would later find out was doing a fabulous talk on Accessibility Testing the following day.</p>\n\n<p>The decision on which Workshops to attend hadn’t been particularly easy. I was initially drawn to the Exploratory Testing 101 full day workshop but was eager to expose myself to as much learning and variety as possible. As such I took the decision to attend two different workshops, it was just a question of which two. The options were such that there was no obvious choice. I could easily justify attending any of the workshops but had settled on a morning with Michael Bolton (@MichaelBolton) learning new ideas around recording reporting and an afternoon with Anne-Marie Charrett.(@Charrett) discussing quality.</p>\n\n<p>The workshops were two contrasting delivery styles. Michael’s provided an excellent session taking us through lessons on the importance of understanding the story we are trying to tell and how that feeds into the decision on what we report. I had another moment of awe in Michael’s workshop as I observed the wealth of experience and knowledge in my peers around me. I was on a table with @_Testheader, @MarianneDuijst and the aforementioned @RightSaidJames with many more prominent peers around the room. The first exercise didn’t quite kick off according to plan due to the (so called) cross platform software we were asked to download only having an executable installation (not ideal for the mac users around the room). The upshot to this was, in my opinion, a beneficial side effect, meaning more people collaborating around a smaller number of laptops and ultimately greater discussion and sharing of ideas. It was eye opening to walk around seeing other people’s ideas on note taking and reporting with some excellent approaches on show (mind mapping is my new best friend). It also gave me my first introduction to @constancehermit, although at this stage I was oblivious to her artistic talents (becoming a cartoon drawn by Constance is now officially on my bucket list). Michael’s expressive and passionate way of getting across his ideas and concepts (with the occasional rant thrown in) was a good demonstration of ‘teaching’ in action. I can even confirm that I have now actively replaced “Expected Behaviour” with “Desired Behaviour” in my testing terminology.</p>\n\n<p>The break between workshops was, what can only be described as a missed opportunity. With so much to take in from the morning workshop I figured I’d take some time over lunch to reflect on what had been a fantastic session with young Mr Bolton. Unfortunately rather than reflection, I found myself missing out on what should have been a valuable opportunity to meet, greet and talk test for what turned out to be 30 minutes of indecision and procrastination around 99 second talks. The worst of it was that at the end of the 30 minutes I felt no more confident about doing a 99 second talk (or not doing one) than I had over the previous 6 months. <br />\nThe feeling of a wasted lunch break left me even more determined to make the most of the afternoon session and added to the fact that I felt confident in the subject matter I had a good feeling about the quality workshop. Anne-Marie had a distinctly different engagement style than Michael and she made it clear right from the start that this would be a discovery session from which we could form our own conclusions. Don’t get me wrong Michael and Anne-Marie share the same air of confidence over the topics being delivered and both gave me a feeling of faith in their opinions and views. Anne-Marie’s workshop however felt distinctly more like a coaching session for which no answers were given. In turn this approach left me feeling even more at ease.</p>\n\n<p>It was fascinating to see such a breadth and depth of opinions and perceptions on where quality fits in. The session was designed to help us to understand that quality can be emotive and due to the fact that it means something very different to different roles in different contexts, requires clarification with wide ranging input (an exercise all to often dismissed as to difficult or not important enough. The example product that the exercise was based on was a challenge to get familiarity with and it became quickly clear that marketing was unlikely to become a career choice anytime soon. The same can be said of pretty much all of in our group. Nevertheless there were valuable takeaways around techniques to try and ensure those difficult discussions take place around what quality means to any given business. Also how that can be opened out to parts of the business that may otherwise have very little awareness, understanding or enthusiasm for quality.</p>\n\n<p>The afternoon workshop also helped introduce me to a young and enthusiastic @pravkpatel. Prav was attending his first Testbash and had the added incentive of having found out, literally that day, that he had been promoted to test lead. What struck me about Prav was how keenly he was listening after asking some pertinent questions. He seemed to be absorbing everything being said and discussed with such focus. If he takes the passion he was showing in our conversations for Testbash and learning into his team then I’m sure he will do an excellent job. It proved to be another example of just how valuable, how supportive and how much of a motivator Ministry of Testing is in the testing community.</p>\n\n<p>With roughly 24 hours until I was planning to do my 99 second talk, my desire to do a talk had been expanded by the impressive Michael Bolton and Anne-Marie Charrett but the decision on what to talk about felt harder than ever............</p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-11-27 20:37:26","created_by":2,"updated_at":"2017-12-22 09:28:31","updated_by":2,"published_at":"2017-12-22 09:28:31","published_by":2},{"id":24,"uuid":"a17edb81-32c6-4d6b-bf5d-1178ce84a2c9","title":"A Journey to 99 Seconds and Beyond......Final Chapter","slug":"a-journey-to-99-seconds-and-beyond-final-chapter","markdown":"My three part blog reflecting on Testbash Manchester 2017 appears to have extended into a fourth part. The last two parts have proved a challenge in terms of finding time to spend on this. Fortunately Christmas has brought with it some time away from the day job and allowed me to concentrate on getting this completed.\n### Pre-Testbash Meetup\n![](/content/images/2017/12/meetup.jpeg)\nAfter leaving the afternoon workshop session with a determination to make the most of the evening meetup, I made a swift family comms pit stop at the hotel and got my ass up to the venue pronto so as not to waste any of the motivation from the workshops. There would be no talks, just relaxed socialising, networking and engagement between a group of peers with a passion for testing. MOT had hired out a bar for the evening and provided an evening of free drinks courtesy of the excellent sponsorship they received. On arriving at the bar I was amazed at the number of people in attendance. The numbers seemed to have swelled hugely from the days workshops, which shouldn’t have surprised me too much as attendees for the conference day were starting to arrive, but evidently I was easily surprised on this occasion.\nThe first person I saw (or maybe I heard before I saw) was our charismatic and energetic MC for the following days conference Mr Leigh Rathbone (@villabone). Leigh was clearly feeding off the energy and positivity around the room, effectively bouncing around the room speaking with anyone and everyone. Somehow amongst the millions of conversations and the dull raw of a room with a free bar, a group that I believe included @stephenjanaway, @supertestingbro, @marianneduijst, @neilstudd and more were managing to partake in a podcast. Personally it was good to chat briefly with Gem Hill (@gem_hill) prior to her amazing conference talk. I managed to continue my chat with Prav, trying my best to feed his enthusiasm for learning and giving the benefit of my own experiences of taking on greater responsibility. I still had the nagging decision relating to the 99 second talk in the back of my mind and I spied the opportunity during a chat with Prav, Geert (@_testheader) and Beren (@isleoftesting) to garner some feedback on my potential 99 second talk. Before I knew it I was doing a little timed demo of the topic that I had edged towards with Beren and Geert on the stop watches. The feedback was excellent but alcohol intake aside I wasn't overly happy with the topic. It felt like I was just making do with this subject matter and whilst it was something I could talk about it, the mini trial didn't give me the warm cosy feeling I was hoping for this close to conference day. With the alcohol flowing and time getting on I took my leave of the meetup at a much more reasonable time than I'd expected. With the less than satisfactory trial behind me I decided that writing my 99 second talk down would allow me to focus on the delivery and give me confidence to go through with it knowing I could fill the 99 seconds effectively. It's funny, I'd never realised just how hard, giving a presentation/talk to yourself is, even if it is just 99 seconds.\n### The Conference\n![](/content/images/2017/12/conference.png)\nHaving gone to bed adamant I was going to go through with the talk and with actual notes and prompts to help me I woke the following morning with a decision. I wasn't going to do a 99 second talk after all............. WHAT THE???? Despite underlying disappointment, this felt at the time very much like a positive decision, allowing me to focus on a day of learning, networking, sharing and engaging, without the the distraction of something that I clearly wasn't confident in. The walk to the Lowry was shrouded in fog which provided an strangely relaxing start to the day. Arriving at the Lowry fully chilled and without any thoughts of 99 second talks I was in the perfect frame of mind for 'Lean Coffee' (Not that I drink coffee but that's not really the point). This was my first Lean Coffee experience and I have to say what a great way to start a day of personal development with communication and discussion. On a table with Ministry of Test's new Community Boss @heather_reiduff along with @Scott_Logic's dynamic duo @HannahPretswell and @TesterPhi. Apparently Heather was under strict instructions to enjoy her final Testbash as an attendee, another doff of the cap to Ministry of Test for that. A few interesting topics came up on our table but the one that stood out for me was a discussion on balancing family life with learning and self development, a challenge I've been juggling for many years.\nWe were so engaged in our Lean Coffee conversation around the table that we missed the call to head up to the conference room. It was the stream of attendees heading up the stairs that gave it away. For the conference talks I was joined by a colleague (@MartinGLowe)......by the way did anyone claim prize for a selfie with the attendee that used to be a model and a boxer?\nThere was a familiarity to the start of the conference in the form of @LplTesterGather's host with the most......@villabone. With Leigh on the mic I felt entirely engaged, at ease and ready for the morning line up of speakers:\n\n* Quality != Testing - @charrett\n* What I, A Tester, Have Learnt From Studying Psychology - @ghkero\n* AUT: Anxiety Under Test - @Gem_Hill\n* Who Will Guard the Guards Themselves? How to Trust Your Automation and Avoid Deceit - @_basdijkstra\n* Accessibility Testing Crash Course - @RightSaidJames\n\nHaving attended Anne-Marie's workshop I had an inkling of what to expect from her talk. The discussion on quality vs testing is a long running and often heated debate but Anne-Marie pulled out a few key points. The two that stood out for me were;\n>Understand whether testing is adding value to the overall product quality and delivery.... else why are we testing?\n\nAlso;\n\n>The importance of making quality improvement visible - even the small changes....  \n\nGoran's talk discussing the role of psychology in testing was particularly fascinating. Having headed up testing and test teams for a few different businesses my focus has always been on making change based on facts and information available however something Goran called out struck me when considering the use of information and metrics;\n\n>A correlation between two separate pieces of information or data doesn't necessarily mean a related causation, some things are just coincidences....... \n\nThe importance of understanding underlying factors can not be overstated. The talk from Goran just proved to enforce the value of understanding aspects of psychology to help improve testing.\n\nGem's talk on Anxiety had been highly recommended by @MartinGLowe and it definitely hit a chord. Having been around depression and anxiety in some form or another (not myself) for a large part of my life, I'd only ever really considered the impact it has on personal life and never really given much thought to the impact on working life. The value of understanding anxiety within working life, especially for anyone in a management role seems huge.\n\nHaving arrived in the morning certain I wouldn't go through with a 99 second talk, it was part way through Gem's talk that I was finally struck by an idea (consider yourself my muse Gem). After months of trying to come up with something and never finding a subject I was happy with, in a matter of seconds of the thought entering my head I was back....... I was definitely going through with a 99 second talk and I was in a state of confidence about the talk that I'd not achieved over the previous few months. What's more, I was going to be doing the talk without notes or prompts. Despite the new found subject matter and confidence I'd be lying if I said I wasn't nervous..... I was going to be doing a 99 second talk and that was terrifying.\n\nNext up was Bas talking about having confidence in automation. Hmmmm what a nice thought that is. This was arguably the most testing based talk so far. Having seen and been involved in some pretty challenging automation setups I was taking in everything Bas was talking about intensely. So many companies fall into the same painful hole of maintaining thousands (if not more) of irrelevant tests, many of which are so flaky, no one believes them when they fail. These places need a Bas in their life.\n>Don't be afraid to remove swathes of tests and start again. Better to have a small amount of tests that are adding value than a large number of pointless tests. Quality over quantity.\n\nFinally to complete the morning was a topic discussed all to little. It was a refreshing change to hear a talk discussing the value and importance of accessibility testing. There seemed to be quite a number of people who were admitting to not doing justice to accessibility testing. This in itself said a lot about the value of this talk and as was demonstrated, there are some simple ways to start introducing accessibility testing with relative ease. So why is this so important? As James put it;\n\n>\"First of all it’s the law. Ultimately it’s the right thing to do.“\n\nAfter a fantastic morning of talks I was keen to make the most of the lunch period, especially after my failure to do so at the workshops the previous day. There was an underlying theme that I'd identified a year earlier and had come to this years Testbash determined to make the most of. The importance that the Ministry of Testing place on providing opportunity/encouragement for attendees to meet, socialise, discuss and share. They seem to have created the perfect balance between provision of quality speakers and provision of time to speak to peers and colleagues. Lunch basically consisted of some amazing pies, a few conversations about my decision to do a 99 second talk (subconsciously looking for reassurance), some general mingling/discussion (finally getting chance to have a proper chat with @TeamLHC) about the morning session and the purchase of a shiny new pack of TestSphere cards.\n![](/content/images/2017/12/testsphere.png)\n\nFor the afternoon session we had another exciting line up consisting of;\n\n* Turning Good Testers Into Great Ones - @VeraGeBa\n* Lessons Learnt Moving to Microservices - Simon Dobson\n* The Fraud Squad - Learning to manage Impostor Syndrome as a Tester - @clairereckless\n* The Lost Art of the Journeyman - @vds4\n* Exploring Exploratory Testing - @michaelbolton\n\nI'd seen a few teasers from Vera mentioning super heroes on twitter but had no clue of the context or what the talk was about. Having spoken to Vera and Marcel at Testbash Manchester 2016 briefly and chatted to Vera at the break in Michael Bolton's workshop the previous day, I had an idea just how passionate she is about learning. On both occasions Vera came across as very confident and assured with lots of reference to research to back up her ideas. Vera's talk was essentially using the concept of knowledge, regulation and monitoring as super heroes representing metacognition (thinking about your own thinking). As something people generally do without thinking too much about it, actually recognising how you can understand and use this metacognition to improve yourself, is a hugely powerful concept. \n\n>Lady knowledge helping you to find ways to improve, Self-Regulation helping to provide the guidelines to keep you on track and Lady Monitoring to allow you to observe yourself and gather feedback.\n\nThe microservices talk by Simon was very well structured and tackled the topic with confidence. He made excellent use of story telling and his own examples to explain how small contained services allow for a more efficient test approach versus big monoliths of code.  Simon also managed to pretty much nail his representation of moving to microservices, arguably slide of the day;\n\n![](/content/images/2017/12/microservices.jpg)\n\nI must confess at this stage my nerves were really starting to kick in with regards to my 99 second talk. That's not to suggest I wasn't still confident about the topic that I now considered 'locked in', however the idea that I would be shortly stood in front of the whole room was a scary thought.... Could I keep talking for 99 seconds, would I even get to the point in 99 seconds or could I actually put a coherent sentence together in front of everyone. Sounds dramatic doesn't it? It's like asking someone who's only ever swum in a swimming pool to go and jump into the middle of a lake. For some it comes natural, for others it can feel like a huge deal. That said, the bigger the challenge, the greater the sense of achievement..... or that's what I was told.\n\nMr Hynie's talk was the perfect distraction from my nerves. I had never seen Martin talk and wasn't sure what to expect but after a hearty recommendation from my colleague young Mr Lowe and the introduction to end all introductions by Leigh I had high hopes. The talk had everything I expected, humour, confidence and content. I was laughing and thinking in equal measures. What also appealed is that this felt a little like another coaching session where @vds4 was challenging us to ask ourselves what direction we are heading in, why we are heading in that direction and how we are getting there. What role are we fulfilling and are we limiting ourselves. Most importantly who are we engaging to share the journey with or gather support from and what role are they providing. The big takeaway from this talk with me, something I've wrestled with up until recently was;\n>Your identity is important not the title your given.\n\nI was a little late back from the break prior to Claire's talk so rather than squeeze past a row of people to my seat I took the opportunity to continue stretching my legs and stayed stood at the back. Having seen Claire talk at the Liverpool Tester Gathering previously this was one of the stand out talks I'd been looking forward to. I think maybe seeing someone nail a talk at an event like Testbash who has recently been through a similar journey to the one I'm currently on gave me inspiration and confidence to keep going. Nail it she most certainly did. It wasn't just that Claire is a relatively new speaker but the topic of this particular talk is very close to the bone. I am a fully paid up member of the 'Fraud Squad' and have had impostor syndrome at various points fairly regularly through my career, as I'm certain many other testers have, only I never knew it as impostor syndrome. I've been lucky enough to use my impostor syndrome to motivate me to improve myself but it has also created some challenges and barriers along the way. I was most surprised to see myself pop up in Claire's slides....... we are yet to agree royalties.\n\n![](/content/images/2017/12/Isthatme.jpg)\n\nSo for the grand finale, Ministry of Testing had enlisted the help of one Mr Michael Bolton. I don't think many people really attend a Michael Bolton session of any description expecting to be disappointed. You expect some big words, you expect confident delivery, you expect some strong messages and you expect the odd rant but you never expect disappointment. I'm not going to lie, the 99 second talks were firmly imprinted in my mind throughout Michael's talk and the clock was ticking down now. Fortunately the talk was so engaging that getting distracted from it was impossible. The talk was as expected, packed with key takeaways, too many to go into detail on but my personal favourites have to be;\n\n>There is always something you can test from someones idea right through to the actual product, you don't need documented requirements to test.\n\nAlso this particular nugget is something I have been harping on about for a while;\n\n>There are no manual testers or automated testers, just testers who make use of tools as they require them.\n\nSo then something pretty crazy and amazing happened that I suspect not a single person in the room was expecting except for Michael himself........ Mr Bolton ended the talk with an epic (and I don't use the word epic lightly) rap. Yes you heard that right, Michael rapped is conclusion to his talk. That was exactly the sort of distraction I needed with only minutes left until the 99 second talk. It was literally the perfect mic drop moment for the whole day.\n\n### 99 Second Talks\nWith the buzz of Michael's rap still fresh in everyones mind and all talkers throughout the day having set the bar exceptionally high we came to the 99 second talks. With the announcement for all first time 99 second talkers to go to the side of the stage I was up. I didn't want to give myself time to have second thoughts or question myself. I was confident about my topic and I wanted to stay that way. I'd seen a few people on twitter hinting that they might put themselves forward but I was amazed at just how many people did. It reinforced all the conclusions around the power of the 99 second talks that I had come away with the previous year. It feels wrong to say but there was some relief to look along the line and see others looking just as nervous as me. Clearly Claire Reckless knows her apples when it comes to imposter syndrome. My mind was definitely racing and to reference Gem Hill, it wasn't being overly helpful. Stupid thoughts like 'What if I walk the wrong way off the stage with the mic and look stupid' and 'what if I have a coughing fit and can't talk'.\nSeeing some exceptional first time 99 second talks ahead of me, including @RickDTracy's hilarious and confident Trump impression and , was both helpful and at the same time a little unhelpful.\n\n>Great if others can get up there for the first time and do a 99 second talk then why can't I....... but how can I deliver something as impressive as all these people?\n\nI was at the stage much quicker than expected mic in hand. I should probably take a moment to explain what had struck me during Gem's talk and why I was much more confident in the subject matter. I suddenly realised that I didn't need to scrape around for an amazing and original 99 second talk. I needed to simplify my thinking  rather than over complicating it. Gem and then Claire later in the day had given amazing talks on subjects that they were fully invested in and had lived through. So if I wanted something original and relevant, simplifying that, what about talking about how I came to do a 99 second talk and the ups and downs involved in me getting to that stage. That is my original journey. That is how I applied the simplified thinking that I often make use of in testing to solve a different problem. Most importantly this was my own personal achievement. It ticked all the boxes I'd been looking for.\n\nSo a year of change, re-invention, clarification, soul searching and forward momentum, all kicked off at Testbash Manchester 2016, culminated in these 99 seconds. My delivery probably needs a lot of work but I've learnt a lot about myself on the journey and made lots of changes. I've challenged myself and met those challenges head on. I now know I CAN get up on stage and talk, I have got something worth saying and I can take that forward. I can safely say Testbash, ALL of it's amazing speakers (including Vernon Richards and Leigh Rathbone) and Ministry of Testing have inspired me to do more and be more.\n\nSo what next.......... well how about trying one of those talk things that people keep going on about? How about I see if I can't inspire a few others along the way?\n![](/content/images/2017/12/The_future_is_unwritten.jpg)","mobiledoc":null,"html":"<p>My three part blog reflecting on Testbash Manchester 2017 appears to have extended into a fourth part. The last two parts have proved a challenge in terms of finding time to spend on this. Fortunately Christmas has brought with it some time away from the day job and allowed me to concentrate on getting this completed.  </p>\n\n<h3 id=\"pretestbashmeetup\">Pre-Testbash Meetup</h3>\n\n<p><img src=\"/content/images/2017/12/meetup.jpeg\" alt=\"\" />\nAfter leaving the afternoon workshop session with a determination to make the most of the evening meetup, I made a swift family comms pit stop at the hotel and got my ass up to the venue pronto so as not to waste any of the motivation from the workshops. There would be no talks, just relaxed socialising, networking and engagement between a group of peers with a passion for testing. MOT had hired out a bar for the evening and provided an evening of free drinks courtesy of the excellent sponsorship they received. On arriving at the bar I was amazed at the number of people in attendance. The numbers seemed to have swelled hugely from the days workshops, which shouldn’t have surprised me too much as attendees for the conference day were starting to arrive, but evidently I was easily surprised on this occasion. <br />\nThe first person I saw (or maybe I heard before I saw) was our charismatic and energetic MC for the following days conference Mr Leigh Rathbone (@villabone). Leigh was clearly feeding off the energy and positivity around the room, effectively bouncing around the room speaking with anyone and everyone. Somehow amongst the millions of conversations and the dull raw of a room with a free bar, a group that I believe included @stephenjanaway, @supertestingbro, @marianneduijst, @neilstudd and more were managing to partake in a podcast. Personally it was good to chat briefly with Gem Hill (@gem<em>hill) prior to her amazing conference talk. I managed to continue my chat with Prav, trying my best to feed his enthusiasm for learning and giving the benefit of my own experiences of taking on greater responsibility. I still had the nagging decision relating to the 99 second talk in the back of my mind and I spied the opportunity during a chat with Prav, Geert (@</em>testheader) and Beren (@isleoftesting) to garner some feedback on my potential 99 second talk. Before I knew it I was doing a little timed demo of the topic that I had edged towards with Beren and Geert on the stop watches. The feedback was excellent but alcohol intake aside I wasn't overly happy with the topic. It felt like I was just making do with this subject matter and whilst it was something I could talk about it, the mini trial didn't give me the warm cosy feeling I was hoping for this close to conference day. With the alcohol flowing and time getting on I took my leave of the meetup at a much more reasonable time than I'd expected. With the less than satisfactory trial behind me I decided that writing my 99 second talk down would allow me to focus on the delivery and give me confidence to go through with it knowing I could fill the 99 seconds effectively. It's funny, I'd never realised just how hard, giving a presentation/talk to yourself is, even if it is just 99 seconds.  </p>\n\n<h3 id=\"theconference\">The Conference</h3>\n\n<p><img src=\"/content/images/2017/12/conference.png\" alt=\"\" />\nHaving gone to bed adamant I was going to go through with the talk and with actual notes and prompts to help me I woke the following morning with a decision. I wasn't going to do a 99 second talk after all............. WHAT THE???? Despite underlying disappointment, this felt at the time very much like a positive decision, allowing me to focus on a day of learning, networking, sharing and engaging, without the the distraction of something that I clearly wasn't confident in. The walk to the Lowry was shrouded in fog which provided an strangely relaxing start to the day. Arriving at the Lowry fully chilled and without any thoughts of 99 second talks I was in the perfect frame of mind for 'Lean Coffee' (Not that I drink coffee but that's not really the point). This was my first Lean Coffee experience and I have to say what a great way to start a day of personal development with communication and discussion. On a table with Ministry of Test's new Community Boss @heather<em>reiduff along with @Scott</em>Logic's dynamic duo @HannahPretswell and @TesterPhi. Apparently Heather was under strict instructions to enjoy her final Testbash as an attendee, another doff of the cap to Ministry of Test for that. A few interesting topics came up on our table but the one that stood out for me was a discussion on balancing family life with learning and self development, a challenge I've been juggling for many years. <br />\nWe were so engaged in our Lean Coffee conversation around the table that we missed the call to head up to the conference room. It was the stream of attendees heading up the stairs that gave it away. For the conference talks I was joined by a colleague (@MartinGLowe)......by the way did anyone claim prize for a selfie with the attendee that used to be a model and a boxer? <br />\nThere was a familiarity to the start of the conference in the form of @LplTesterGather's host with the most......@villabone. With Leigh on the mic I felt entirely engaged, at ease and ready for the morning line up of speakers:</p>\n\n<ul>\n<li>Quality != Testing - @charrett</li>\n<li>What I, A Tester, Have Learnt From Studying Psychology - @ghkero</li>\n<li>AUT: Anxiety Under Test - @Gem_Hill</li>\n<li>Who Will Guard the Guards Themselves? How to Trust Your Automation and Avoid Deceit - @_basdijkstra</li>\n<li>Accessibility Testing Crash Course - @RightSaidJames</li>\n</ul>\n\n<p>Having attended Anne-Marie's workshop I had an inkling of what to expect from her talk. The discussion on quality vs testing is a long running and often heated debate but Anne-Marie pulled out a few key points. The two that stood out for me were;  </p>\n\n<blockquote>\n  <p>Understand whether testing is adding value to the overall product quality and delivery.... else why are we testing?</p>\n</blockquote>\n\n<p>Also;</p>\n\n<blockquote>\n  <p>The importance of making quality improvement visible - even the small changes....  </p>\n</blockquote>\n\n<p>Goran's talk discussing the role of psychology in testing was particularly fascinating. Having headed up testing and test teams for a few different businesses my focus has always been on making change based on facts and information available however something Goran called out struck me when considering the use of information and metrics;</p>\n\n<blockquote>\n  <p>A correlation between two separate pieces of information or data doesn't necessarily mean a related causation, some things are just coincidences....... </p>\n</blockquote>\n\n<p>The importance of understanding underlying factors can not be overstated. The talk from Goran just proved to enforce the value of understanding aspects of psychology to help improve testing.</p>\n\n<p>Gem's talk on Anxiety had been highly recommended by @MartinGLowe and it definitely hit a chord. Having been around depression and anxiety in some form or another (not myself) for a large part of my life, I'd only ever really considered the impact it has on personal life and never really given much thought to the impact on working life. The value of understanding anxiety within working life, especially for anyone in a management role seems huge.</p>\n\n<p>Having arrived in the morning certain I wouldn't go through with a 99 second talk, it was part way through Gem's talk that I was finally struck by an idea (consider yourself my muse Gem). After months of trying to come up with something and never finding a subject I was happy with, in a matter of seconds of the thought entering my head I was back....... I was definitely going through with a 99 second talk and I was in a state of confidence about the talk that I'd not achieved over the previous few months. What's more, I was going to be doing the talk without notes or prompts. Despite the new found subject matter and confidence I'd be lying if I said I wasn't nervous..... I was going to be doing a 99 second talk and that was terrifying.</p>\n\n<p>Next up was Bas talking about having confidence in automation. Hmmmm what a nice thought that is. This was arguably the most testing based talk so far. Having seen and been involved in some pretty challenging automation setups I was taking in everything Bas was talking about intensely. So many companies fall into the same painful hole of maintaining thousands (if not more) of irrelevant tests, many of which are so flaky, no one believes them when they fail. These places need a Bas in their life.  </p>\n\n<blockquote>\n  <p>Don't be afraid to remove swathes of tests and start again. Better to have a small amount of tests that are adding value than a large number of pointless tests. Quality over quantity.</p>\n</blockquote>\n\n<p>Finally to complete the morning was a topic discussed all to little. It was a refreshing change to hear a talk discussing the value and importance of accessibility testing. There seemed to be quite a number of people who were admitting to not doing justice to accessibility testing. This in itself said a lot about the value of this talk and as was demonstrated, there are some simple ways to start introducing accessibility testing with relative ease. So why is this so important? As James put it;</p>\n\n<blockquote>\n  <p>\"First of all it’s the law. Ultimately it’s the right thing to do.“</p>\n</blockquote>\n\n<p>After a fantastic morning of talks I was keen to make the most of the lunch period, especially after my failure to do so at the workshops the previous day. There was an underlying theme that I'd identified a year earlier and had come to this years Testbash determined to make the most of. The importance that the Ministry of Testing place on providing opportunity/encouragement for attendees to meet, socialise, discuss and share. They seem to have created the perfect balance between provision of quality speakers and provision of time to speak to peers and colleagues. Lunch basically consisted of some amazing pies, a few conversations about my decision to do a 99 second talk (subconsciously looking for reassurance), some general mingling/discussion (finally getting chance to have a proper chat with @TeamLHC) about the morning session and the purchase of a shiny new pack of TestSphere cards. <br />\n<img src=\"/content/images/2017/12/testsphere.png\" alt=\"\" /></p>\n\n<p>For the afternoon session we had another exciting line up consisting of;</p>\n\n<ul>\n<li>Turning Good Testers Into Great Ones - @VeraGeBa</li>\n<li>Lessons Learnt Moving to Microservices - Simon Dobson</li>\n<li>The Fraud Squad - Learning to manage Impostor Syndrome as a Tester - @clairereckless</li>\n<li>The Lost Art of the Journeyman - @vds4</li>\n<li>Exploring Exploratory Testing - @michaelbolton</li>\n</ul>\n\n<p>I'd seen a few teasers from Vera mentioning super heroes on twitter but had no clue of the context or what the talk was about. Having spoken to Vera and Marcel at Testbash Manchester 2016 briefly and chatted to Vera at the break in Michael Bolton's workshop the previous day, I had an idea just how passionate she is about learning. On both occasions Vera came across as very confident and assured with lots of reference to research to back up her ideas. Vera's talk was essentially using the concept of knowledge, regulation and monitoring as super heroes representing metacognition (thinking about your own thinking). As something people generally do without thinking too much about it, actually recognising how you can understand and use this metacognition to improve yourself, is a hugely powerful concept. </p>\n\n<blockquote>\n  <p>Lady knowledge helping you to find ways to improve, Self-Regulation helping to provide the guidelines to keep you on track and Lady Monitoring to allow you to observe yourself and gather feedback.</p>\n</blockquote>\n\n<p>The microservices talk by Simon was very well structured and tackled the topic with confidence. He made excellent use of story telling and his own examples to explain how small contained services allow for a more efficient test approach versus big monoliths of code.  Simon also managed to pretty much nail his representation of moving to microservices, arguably slide of the day;</p>\n\n<p><img src=\"/content/images/2017/12/microservices.jpg\" alt=\"\" /></p>\n\n<p>I must confess at this stage my nerves were really starting to kick in with regards to my 99 second talk. That's not to suggest I wasn't still confident about the topic that I now considered 'locked in', however the idea that I would be shortly stood in front of the whole room was a scary thought.... Could I keep talking for 99 seconds, would I even get to the point in 99 seconds or could I actually put a coherent sentence together in front of everyone. Sounds dramatic doesn't it? It's like asking someone who's only ever swum in a swimming pool to go and jump into the middle of a lake. For some it comes natural, for others it can feel like a huge deal. That said, the bigger the challenge, the greater the sense of achievement..... or that's what I was told.</p>\n\n<p>Mr Hynie's talk was the perfect distraction from my nerves. I had never seen Martin talk and wasn't sure what to expect but after a hearty recommendation from my colleague young Mr Lowe and the introduction to end all introductions by Leigh I had high hopes. The talk had everything I expected, humour, confidence and content. I was laughing and thinking in equal measures. What also appealed is that this felt a little like another coaching session where @vds4 was challenging us to ask ourselves what direction we are heading in, why we are heading in that direction and how we are getting there. What role are we fulfilling and are we limiting ourselves. Most importantly who are we engaging to share the journey with or gather support from and what role are they providing. The big takeaway from this talk with me, something I've wrestled with up until recently was;  </p>\n\n<blockquote>\n  <p>Your identity is important not the title your given.</p>\n</blockquote>\n\n<p>I was a little late back from the break prior to Claire's talk so rather than squeeze past a row of people to my seat I took the opportunity to continue stretching my legs and stayed stood at the back. Having seen Claire talk at the Liverpool Tester Gathering previously this was one of the stand out talks I'd been looking forward to. I think maybe seeing someone nail a talk at an event like Testbash who has recently been through a similar journey to the one I'm currently on gave me inspiration and confidence to keep going. Nail it she most certainly did. It wasn't just that Claire is a relatively new speaker but the topic of this particular talk is very close to the bone. I am a fully paid up member of the 'Fraud Squad' and have had impostor syndrome at various points fairly regularly through my career, as I'm certain many other testers have, only I never knew it as impostor syndrome. I've been lucky enough to use my impostor syndrome to motivate me to improve myself but it has also created some challenges and barriers along the way. I was most surprised to see myself pop up in Claire's slides....... we are yet to agree royalties.</p>\n\n<p><img src=\"/content/images/2017/12/Isthatme.jpg\" alt=\"\" /></p>\n\n<p>So for the grand finale, Ministry of Testing had enlisted the help of one Mr Michael Bolton. I don't think many people really attend a Michael Bolton session of any description expecting to be disappointed. You expect some big words, you expect confident delivery, you expect some strong messages and you expect the odd rant but you never expect disappointment. I'm not going to lie, the 99 second talks were firmly imprinted in my mind throughout Michael's talk and the clock was ticking down now. Fortunately the talk was so engaging that getting distracted from it was impossible. The talk was as expected, packed with key takeaways, too many to go into detail on but my personal favourites have to be;</p>\n\n<blockquote>\n  <p>There is always something you can test from someones idea right through to the actual product, you don't need documented requirements to test.</p>\n</blockquote>\n\n<p>Also this particular nugget is something I have been harping on about for a while;</p>\n\n<blockquote>\n  <p>There are no manual testers or automated testers, just testers who make use of tools as they require them.</p>\n</blockquote>\n\n<p>So then something pretty crazy and amazing happened that I suspect not a single person in the room was expecting except for Michael himself........ Mr Bolton ended the talk with an epic (and I don't use the word epic lightly) rap. Yes you heard that right, Michael rapped is conclusion to his talk. That was exactly the sort of distraction I needed with only minutes left until the 99 second talk. It was literally the perfect mic drop moment for the whole day.</p>\n\n<h3 id=\"99secondtalks\">99 Second Talks</h3>\n\n<p>With the buzz of Michael's rap still fresh in everyones mind and all talkers throughout the day having set the bar exceptionally high we came to the 99 second talks. With the announcement for all first time 99 second talkers to go to the side of the stage I was up. I didn't want to give myself time to have second thoughts or question myself. I was confident about my topic and I wanted to stay that way. I'd seen a few people on twitter hinting that they might put themselves forward but I was amazed at just how many people did. It reinforced all the conclusions around the power of the 99 second talks that I had come away with the previous year. It feels wrong to say but there was some relief to look along the line and see others looking just as nervous as me. Clearly Claire Reckless knows her apples when it comes to imposter syndrome. My mind was definitely racing and to reference Gem Hill, it wasn't being overly helpful. Stupid thoughts like 'What if I walk the wrong way off the stage with the mic and look stupid' and 'what if I have a coughing fit and can't talk'. <br />\nSeeing some exceptional first time 99 second talks ahead of me, including @RickDTracy's hilarious and confident Trump impression and , was both helpful and at the same time a little unhelpful.</p>\n\n<blockquote>\n  <p>Great if others can get up there for the first time and do a 99 second talk then why can't I....... but how can I deliver something as impressive as all these people?</p>\n</blockquote>\n\n<p>I was at the stage much quicker than expected mic in hand. I should probably take a moment to explain what had struck me during Gem's talk and why I was much more confident in the subject matter. I suddenly realised that I didn't need to scrape around for an amazing and original 99 second talk. I needed to simplify my thinking  rather than over complicating it. Gem and then Claire later in the day had given amazing talks on subjects that they were fully invested in and had lived through. So if I wanted something original and relevant, simplifying that, what about talking about how I came to do a 99 second talk and the ups and downs involved in me getting to that stage. That is my original journey. That is how I applied the simplified thinking that I often make use of in testing to solve a different problem. Most importantly this was my own personal achievement. It ticked all the boxes I'd been looking for.</p>\n\n<p>So a year of change, re-invention, clarification, soul searching and forward momentum, all kicked off at Testbash Manchester 2016, culminated in these 99 seconds. My delivery probably needs a lot of work but I've learnt a lot about myself on the journey and made lots of changes. I've challenged myself and met those challenges head on. I now know I CAN get up on stage and talk, I have got something worth saying and I can take that forward. I can safely say Testbash, ALL of it's amazing speakers (including Vernon Richards and Leigh Rathbone) and Ministry of Testing have inspired me to do more and be more.</p>\n\n<p>So what next.......... well how about trying one of those talk things that people keep going on about? How about I see if I can't inspire a few others along the way? <br />\n<img src=\"/content/images/2017/12/The_future_is_unwritten.jpg\" alt=\"\" /></p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2017-12-22 09:31:30","created_by":2,"updated_at":"2017-12-24 09:12:33","updated_by":2,"published_at":"2017-12-24 01:02:38","published_by":2},{"id":25,"uuid":"71d7277f-35c0-4a7f-be4d-fba17b30718f","title":"Seaside adventures in test","slug":"seaside-adventures-in-test","markdown":"A short time has passed since my adventures in Brighton. It's been a busy few months including an impressive weekend in Liverpool at the North West Exploratory Workshop on Testing (NWEWT - of which I will discuss in a further post). On top of this, some much needed family time has proved a welcome distraction from, what has been, a fairly hectic first quarter of 2018.\n###Precedence Set\nI ended last year with just two Testbash events to my name but those two events, both Manchester 12 months apart, had proved key to my direction over the period. Although my Testbash experience had thus far been exclusively Manchester, Testbash Brighton had gained my attention back in 2015 having attempted to get a number of tickets for the team. Alas the request was turned down and the opportunity passed until Manchester 18 months later. I'll be honest though, at this stage I had little awareness of just how quickly the testing community was growing. \n\nAfter two years of Manchester and having fully thrown myself into growing my testing craft as a part of the testing community, the bright lights of Brighton were beckoning. The opportunity to walk in the shoes of the first lady of Ministry of Testing, the heart and soul of Testbash, HRH Rosie Sherry, was too good to turn down. As much as I'd have loved to have taken in a full week of learning, sharing and chatting, I'm trying to spread my wings over the next few years to the far flung reaches of the testing community and finances are a long way from infinite. I'll be honest, I was a little worried about attending Testbash in Brighton for two key reasons. Firstly Testbash Manchester had already given me so much and stolen my heart, I had questions regarding how much more Brighton had (or hadn't) to offer. Just to be clear, if you haven't read my 4 part blog post about Manchester last October, it had be a culmination of a year of goals, growth, change, risks and mental preparation leading up to the conference and I had thrown myself into the experience fully. Secondly there seemed to be an awe in my mind surrounding Testbash Brighton and I was nervous about what I had to offer to both myself and the community in my attendance (it's an interesting trait of mine feeling like I have to give more than I am willing to take). \n\nWhilst I hadn't quite invested the same into the build up to Brighton, I did go into this year with some targets around public speaking and helping others that had lead to a personal investment into this conference (albeit off the coat tales of the amazing @testpappy). Rightly or wrongly I'm a big believer in a general shift in test management moving towards test coaching (although I'm aware that many of the best managers are already coaches first and managers second) and to this end I've set my targets on helping others in the community. I'm working with a few individuals who are trying to push their careers forward, trying to get a north staffs test meetup off the ground and generally looking for opportunities to help. In this particular instance I was inspired by an incredibly generous offer from @TestPappy to give away a free ticket to someone who would otherwise struggle to get to an event like Testbash. My fairly insignificant input into this was like a drug and left me wanting to help more people, but beyond that, it renewed my awareness in just how incredibly supportive the testing community is as a whole and particularly the community surrounding Ministry of Testing.\n\n###Mix and Meet\nAt Testbash Manchester last year, arguably the biggest revelation to me was the pre-workshop and pre-conference meetups. The opportunity to chat and socialise with other members of the testing community in attendance set the tone for the whole event and helped me to feel more engaged in the event. To this end I was determined to make it down to Brighton in time to attend the meetup the night before. Obviously Brighton is a few miles further than Manchester and an area I am a lot less familiar with. I took the lesson from my poorly planned drive to Manchester last October and gave myself the whole afternoon to drag my backside down to the south coast, keeping the chorus of 'oh I do like to be beside the seaside' to a minimum. Much to my surprise it seems giving yourself time to travel to places gets you there in plenty of time and in a pretty relaxed frame of mind.\nThe meetup was everything I expected with my only regret being that I didn't make greater use of the retro gaming on hand for the evening. The main part of the evening at the Clarendon centre presented opportunity to retro game, drink craft ales and chat with some familiar faces such as Geert van de Lisdonk (@_testheader), GemHill (@gem_hill), Claire Reckless(@clairereckless) and Beren Van Daele (@isleoftesting) to name but a few. There were also many I'd never met or only been in contact with online such as Patrick Prill (@testpappy), Danny Dainton (@DannyDainton), Ali Hill (@ali_hill91), Gavin Youngs (@TesterFlyer) and Dan Ashby (@DanAshby04). After the fun of the retro gaming night (my skills on Star Wars weren't up to much), the night continued with more ale and great testing conversation including the opportunity to chat to his lord and master Richard Bradshaw (@friendlytester), Sarah Deery (@SJ_Deery), Karo Stoltzenburg (@karostol) and Geir Gulbrandsen (@GeirGulbrandsen).\n\nIt struck me in a moment of thought and contemplation, surrounded by some engaging, experienced and inspirational test people, that just getting together and talking is one of the most powerful aspects of events like this. The ability to open your mind in a safe and non judgemental environment, with others that have a similar passion for testing, is a recipe for new and adventurous ideas more than anything else.\n\nI managed to achieve a late night hotel return rather than an early morning, leaving me almost bright eyed and bushy tailed for the following day.\n\n###The Heart of the Bash\nOne huge benefit of attending the meetups prior to Testbash, in my experience, is that it puts you into a much more confident and relaxed frame of mind for the following day. In turn I've found this allows more focus on the excitement and anticipation, rather than the fear and nerves, particularly relevant where meeting and striking up conversation doesn't come natural.\nFollowing on from the successful lean coffee before Testbash Manchester, I arrived in time and fully planning on a similar plan of attack in Brighton. It was a welcoming start, greeted by the smiling and familiar face of Vera Gehlen-Baum, dressed up to promote Testbash Munich. For those unaware, I was lucky enough to join Vera on an episode of the Super Testing Bros podcast back in January where Vera kindly offered a free ticket to Testbash Munich to one of the individuals I'm coaching this year. A particularly generous and completely unexpected offer.  \n\nSwag collected I headed off to grab a swift brew before Lean Coffee (Not a coffee drinker unfortunately). Despite my plans and expectations I ended up chatting and catching up with Mr Sheasby Thomas (@RightSaidJames), including a swift apology as much to my surprise and amazement he'd spoken to me in passing on my way to the pub post meetup on the prior evening. I didn't think I'd drunk too much but maybe I had. After his fantastic accessibility talk at Testbash Manchester and then at Liverpool Tester gathering, James was an individual I'd fully intended to catch up with in Brighton.\n\n![](/content/images/2018/06/DannyPappy.jpg)\n\nAfter a brief chat with Danny ahead of his conference speaking debut (I get the impression his mind was already racing in anticipation) and also Mr Grump - Patrick Prill, I was particularly pleased to meet Samantha Flaherty (@flahertsy), definitely a name to watch out for over the next few years. Samantha was attending Testbash Brighton courtesy of Patrick's immense generosity, mentioned earlier in the post. Based on the blog post she wrote on her experience in Brighton (in a much more timely fashion than this I might add), I sense she's caught the testing community bug and has a lot to offer:\n\n>https://thisgirltests.com/2018/03/18/the-chain-reaction-of-self-belief-3-post-test-bash-thoughts/  \n\nI don't think the lineup could have hoped for a better talk to kick things off. Arguably one of my favourite talks of the day by Emily Webber (@ewebber) and on a subject close to my heart, Communities of Practice. Emily's talk had everything, confidence, humour, relevance and practicality - does that make me an Emily Webber fanboy? The basis of what community practices should be doing - exploring together and then expanding to the wider team is captured perfectly in Emily's slide below:\n![](/content/images/2018/05/CofP.jpg)\nSuffice to say I was also excited to hear Danny's conference debut. After conversations with Danny the previous night and briefly on the morning of the conference I had an incline of the nerves he was feeling. I found myself glancing across occasionally during Emily's talk to see how he was handling his nerves and I dare say he doesn't remember much about the first talk. I'm not sure exactly what happened or how it happened but he needn't have worried because once on stage it was as though all nerves just vanished. What can I say..... the boy's got skills on stage. I found Danny's talk, on his journey to testing and his approach to learning, exceptional and particularly relevant to my own path this year in trying to inspire and help others progress. His talk was ideal talk for attendees early in their testing careers, wanting inspiration and advice to move forward such as Samantha and Leila Gregory (@swanny). A quick note on Leila, who was attending her first Testbash. Looking for her first break into a career in testing, 'Swanny' to the bold step of attending and taking the opportunity to show ambition to get into testing, eagerness to learn, and willingness to push her limits. In my experience the traits Leila showed at Testbash are every bit as important and desirable as experience and knowledge of testing.\nDanny's talk was followed by the infectious Rosie Hamilton (@Rosicadia) with a fascinating talk about the logic behind how we test and how this logic has been developed for Rosie through her games testing experience. Rosie's talk also emphasised the value of understanding why you make the decisions you make and how to use that understanding to improve. Straight after Rosie was Aaron Hodder (@AWGHodder) making a really compelling experience based case for putting enough structure around exploratory testing (otherwise known as testing) to meet the demands and pressures of enterprise development. Giving testers (or in his case business users) the freedom to test whilst also delivering 'required' visibility and reporting around progress.... some definite takeaways that I intend to try from Aaron's talk.\nI'll take a brief moment away from the talks to give mentions to two new ideas that MoT trialled at Testbash Brighton. Firstly they introduced a quiet room which included an area for people to sit and colour in. Sounds simplistic? It was in my opinion a master stroke. I don't have a huge amount of conference experience admittedly and one of the powerful things about conferences is the opportunity to chat with peers and discuss ideas......... **HOWEVER** (and it's an important however)......... conferences encourage a wide variety of people to attend and the number of people within a relatively small space can be quite overwhelming for many. At every conference attended by myself I've needed to find time to just stand/sit and think. Generally just 10 minutes or so but absolutely necessary. In my honest opinion somewhere designated for this provision gives a clear statement that it's ok to need time to yourself and fully encourages self help. Secondly a concept called the UnExpo, taking the basis of a typical expo where attendees visit stands of companies to learn about their products or services and turning it on it's head encouraging engagement between attendees during breaks. I've just read the overview on the MoT site so rather than explain any more details I'll just leave you with a link:\n\n>https://www.ministryoftesting.com/news/the-unexpo-a-novel-approach-to-increase-conference-attendee-engagement-and-maximise-community-feels\n\nWithout doubt I think there are some lessons that will have been learnt around the UnExpo. I found myself targeting specific types of presentations/stands that seemed easier to engage with in shorter time frame. I was heading for unmanned stands and stands where engagement was easier and avoiding busier stands.... I guess thats generally my behaviour for any expo based structure. On the whole though I was hugely impressed. It seemed to get a lot of attention and many of the ideas that were on offer were excellent and did the job of encouraging engagement. I think this is an idea that proved successful in it's first outing and something that, now people have a clear picture of what to expect, will grow over the next year or two into something outstanding.\nNext up giving a talk was Matt Long (@burythehammer) talking about testing programmable infrastructure. \n![](/content/images/2018/05/ProgramInfrastructure.jpg)\n\nArguably the first technical talk, Matt presented some excellent thoughts around why proving the infrastructure we rely on throughout a delivery pipeline is as important to test as the product itself (hell it's a part of the product deliverable). This included the first real definition of test at the conference and an excellent definition it was too:\n>\"A method of discerning information about the quality of a system or product.\" \n\nBefore jumping back to the talks, a brief nod to the amazing food provided. I'm a good boy, I generally eat all vegetables but the food provided was not something I would typically choose from a menu. Luckily I'm an eat anything put in front of me kinda bloke and on this occasion that proved to my benefit as the food provided was genuinely delicious. I believe it was also locally sourced and provided by a company called Spade and Spoon (@spadeandspoon), so massive credit to them.\nThe unenviable task of getting the attendees re-engaged after lunch fell to probably the best person for the job. Alan Page (@alanpage) is what could only be described in the testing community as a big draw, with a huge amount of experience in testing at some of the biggest names, including Microsoft. His talk was 'Experiences in Modern Testing' focused on the changing landscape of the role of testers, possibly the most talked about topic in the testing community over recent years and still going strong. Alan essentially advocates embracing the changing testing role, becoming the test specialist, the test coach, engaging with developers, understanding data and expanding the skill set to support those aims. The mission:\n>\"Accelerate the achievement of shippable quality\"\n\nGeoff Loken was an interesting talk on many levels. He took his talk, about how academia views testing, head on with no slides and with a subject that without doubt deserves much more exposure. It was an excellent dip into a subject that seems like it might be a missing piece of a jigsaw. Academically there is a lot of focus on programming, if only we could build a recognition of quality and testing into peoples appreciation at that early stage - feels like some research is needed.\nElizabeth Zagroba (@ezagroba) & Diana Wendruff (@ducksnsquirrels) gave us our first joint talk of the day and I have to say, they nailed it. They appear entirely on the same wave length with great chemistry and delivered an excellent and engaging talk. I must confess I had my reservations as the whole 'less is more' phrase gets banded around in all manner of contexts. In this instance though the context couldn't be more appropriate. Communication for testers is quite often either misunderstood, undervalued or just ignored. The talk gave an excellent explanation of why strong communication doesn't necessarily mean more communication and the use of persona's to explain this really helped the message resinate with me. The inclusion and explanation of the spoon theory to sell the value of not over exerting yourself with unnecessary use of energy slotted into the message nicely.\n![](/content/images/2018/06/spoontheory-1.jpg)\nThe final talk was a real treat to end with. Ash Winter (@northern_tester) is one of those individuals in the testing community that I've followed on twitter, read blog posts from and generally wanted to hear talk for a year or two. What I've read from Ash previously and what came across in this talk was a strong sense of practicality. Everything Ash touched on was discussed with a sense of practical value. I think the quote from Ash that resonated with me more than anything else throughout the day was\n\n>Each step on the pipeline = lens on quality \n \nGetting a grasp and understanding of continuous delivery is undoubtedly the key to allowing us to improve. The emphasis from Ash that it's not enough to just have a continuous delivery pipeline, testers need to really understand and engage in it, understand how it affects them, how it can help them make better decisions in testing and breakdown illusions about the product/delivery. Ultimately when you understand it and engage it, it will form the foundations of your strategy. Apologies for going all fanboy again but this final talk really re-enforced my own thoughts..... hell I've had a continuous delivery pipeline overview re-purposed as a test strategy before now.\n\nSo that was that..... another amazing Testbash conference day came to an end......\n\nReally.....?\n\n###You've got 99 seconds\n\nNo fortunately not really. No Testbash is complete without the incredibly powerful 99 second talks. Somewhere between the start and end of Elizabeth and Diana's excellent talk I decided I was going to do a 99 second talk without the foggiest idea what I was going to talk about. If you read my blogs from Testbash Manchester last year my entire focus for the year leading up to it had been on what I would talk about. This time I'm not going to focus on my own talk/experience except to say that I chose to do a 99 second talk to maintain momentum of getting up and talking in front of large groups of people. What I'd really like to focus on is two out of a plethora of amazing 99 second talks that.... to coin an Americanism....... 'hit the ball outta the park'. Firstly Constance Hermit (@constancehermit) otherwise known as the resident Artful Tester because of her amazing drawings (her cartoon of Testbash Brighton can be checked out at https://ministryoftesting.com/dojo/lessons/the-artful-tester-episode-two-trip-to-testbash-brighton). Constance gave the most elegant 99 second talk about being kind in the face of the more falable aspects of human nature. People may have problems with the how many questions we ask as testers but it's in our power to accept that and return kindness.\nFollowing Constance was Ali Hill (@ali_hill91) and I honestly believe that this was the most effective use of 99 seconds I've ever heard. Ali essentially turned the train spotting 'Choose life' monologue into a talk about not being a testing hero but instead finding the right work life balance and avoiding burning out. I honestly cannot do it justice in words, it truly blew my mind. My recommendation is to get over and watch it for yourself at MoT - https://dojo.ministryoftesting.com/dojo/lessons/99-second-talks-testbash-brighton-2018\n\n###Conclusion\nSo here I find myself at the end..... no really this time it is the end. I fear I may have failed Rosie with this blog post after promising something to overshadow my Testbash Manchester blog post but alas I find myself with too much to write about.\n\nSo Testbash Brighton:\nDid it meet my expectations? Nope.... it far exceeded them. It brought all the values I hold dear within testing together into one package..... community, conversation, experimenting, meeting, learning, doing, empathising, engaging, laughing and sharing.\n\nAs I sign off, I will end by thanking MoT including Rosie, Richard and the growing list of MoT staff helping to make Testbash so amazing around the world. Also and importantly those in the testing community who volunteered to help out and wore their blue jackets with pride. The conference went off so smoothly because of the support you guys provided to the MoT staff, I really can not praise you all enough.\n","mobiledoc":null,"html":"<p>A short time has passed since my adventures in Brighton. It's been a busy few months including an impressive weekend in Liverpool at the North West Exploratory Workshop on Testing (NWEWT - of which I will discuss in a further post). On top of this, some much needed family time has proved a welcome distraction from, what has been, a fairly hectic first quarter of 2018.  </p>\n\n<h3 id=\"precedenceset\">Precedence Set</h3>\n\n<p>I ended last year with just two Testbash events to my name but those two events, both Manchester 12 months apart, had proved key to my direction over the period. Although my Testbash experience had thus far been exclusively Manchester, Testbash Brighton had gained my attention back in 2015 having attempted to get a number of tickets for the team. Alas the request was turned down and the opportunity passed until Manchester 18 months later. I'll be honest though, at this stage I had little awareness of just how quickly the testing community was growing. </p>\n\n<p>After two years of Manchester and having fully thrown myself into growing my testing craft as a part of the testing community, the bright lights of Brighton were beckoning. The opportunity to walk in the shoes of the first lady of Ministry of Testing, the heart and soul of Testbash, HRH Rosie Sherry, was too good to turn down. As much as I'd have loved to have taken in a full week of learning, sharing and chatting, I'm trying to spread my wings over the next few years to the far flung reaches of the testing community and finances are a long way from infinite. I'll be honest, I was a little worried about attending Testbash in Brighton for two key reasons. Firstly Testbash Manchester had already given me so much and stolen my heart, I had questions regarding how much more Brighton had (or hadn't) to offer. Just to be clear, if you haven't read my 4 part blog post about Manchester last October, it had be a culmination of a year of goals, growth, change, risks and mental preparation leading up to the conference and I had thrown myself into the experience fully. Secondly there seemed to be an awe in my mind surrounding Testbash Brighton and I was nervous about what I had to offer to both myself and the community in my attendance (it's an interesting trait of mine feeling like I have to give more than I am willing to take). </p>\n\n<p>Whilst I hadn't quite invested the same into the build up to Brighton, I did go into this year with some targets around public speaking and helping others that had lead to a personal investment into this conference (albeit off the coat tales of the amazing @testpappy). Rightly or wrongly I'm a big believer in a general shift in test management moving towards test coaching (although I'm aware that many of the best managers are already coaches first and managers second) and to this end I've set my targets on helping others in the community. I'm working with a few individuals who are trying to push their careers forward, trying to get a north staffs test meetup off the ground and generally looking for opportunities to help. In this particular instance I was inspired by an incredibly generous offer from @TestPappy to give away a free ticket to someone who would otherwise struggle to get to an event like Testbash. My fairly insignificant input into this was like a drug and left me wanting to help more people, but beyond that, it renewed my awareness in just how incredibly supportive the testing community is as a whole and particularly the community surrounding Ministry of Testing.</p>\n\n<h3 id=\"mixandmeet\">Mix and Meet</h3>\n\n<p>At Testbash Manchester last year, arguably the biggest revelation to me was the pre-workshop and pre-conference meetups. The opportunity to chat and socialise with other members of the testing community in attendance set the tone for the whole event and helped me to feel more engaged in the event. To this end I was determined to make it down to Brighton in time to attend the meetup the night before. Obviously Brighton is a few miles further than Manchester and an area I am a lot less familiar with. I took the lesson from my poorly planned drive to Manchester last October and gave myself the whole afternoon to drag my backside down to the south coast, keeping the chorus of 'oh I do like to be beside the seaside' to a minimum. Much to my surprise it seems giving yourself time to travel to places gets you there in plenty of time and in a pretty relaxed frame of mind. <br />\nThe meetup was everything I expected with my only regret being that I didn't make greater use of the retro gaming on hand for the evening. The main part of the evening at the Clarendon centre presented opportunity to retro game, drink craft ales and chat with some familiar faces such as Geert van de Lisdonk (@<em>testheader), GemHill (@gem</em>hill), Claire Reckless(@clairereckless) and Beren Van Daele (@isleoftesting) to name but a few. There were also many I'd never met or only been in contact with online such as Patrick Prill (@testpappy), Danny Dainton (@DannyDainton), Ali Hill (@ali<em>hill91), Gavin Youngs (@TesterFlyer) and Dan Ashby (@DanAshby04). After the fun of the retro gaming night (my skills on Star Wars weren't up to much), the night continued with more ale and great testing conversation including the opportunity to chat to his lord and master Richard Bradshaw (@friendlytester), Sarah Deery (@SJ</em>Deery), Karo Stoltzenburg (@karostol) and Geir Gulbrandsen (@GeirGulbrandsen).</p>\n\n<p>It struck me in a moment of thought and contemplation, surrounded by some engaging, experienced and inspirational test people, that just getting together and talking is one of the most powerful aspects of events like this. The ability to open your mind in a safe and non judgemental environment, with others that have a similar passion for testing, is a recipe for new and adventurous ideas more than anything else.</p>\n\n<p>I managed to achieve a late night hotel return rather than an early morning, leaving me almost bright eyed and bushy tailed for the following day.</p>\n\n<h3 id=\"theheartofthebash\">The Heart of the Bash</h3>\n\n<p>One huge benefit of attending the meetups prior to Testbash, in my experience, is that it puts you into a much more confident and relaxed frame of mind for the following day. In turn I've found this allows more focus on the excitement and anticipation, rather than the fear and nerves, particularly relevant where meeting and striking up conversation doesn't come natural. <br />\nFollowing on from the successful lean coffee before Testbash Manchester, I arrived in time and fully planning on a similar plan of attack in Brighton. It was a welcoming start, greeted by the smiling and familiar face of Vera Gehlen-Baum, dressed up to promote Testbash Munich. For those unaware, I was lucky enough to join Vera on an episode of the Super Testing Bros podcast back in January where Vera kindly offered a free ticket to Testbash Munich to one of the individuals I'm coaching this year. A particularly generous and completely unexpected offer.  </p>\n\n<p>Swag collected I headed off to grab a swift brew before Lean Coffee (Not a coffee drinker unfortunately). Despite my plans and expectations I ended up chatting and catching up with Mr Sheasby Thomas (@RightSaidJames), including a swift apology as much to my surprise and amazement he'd spoken to me in passing on my way to the pub post meetup on the prior evening. I didn't think I'd drunk too much but maybe I had. After his fantastic accessibility talk at Testbash Manchester and then at Liverpool Tester gathering, James was an individual I'd fully intended to catch up with in Brighton.</p>\n\n<p><img src=\"/content/images/2018/06/DannyPappy.jpg\" alt=\"\" /></p>\n\n<p>After a brief chat with Danny ahead of his conference speaking debut (I get the impression his mind was already racing in anticipation) and also Mr Grump - Patrick Prill, I was particularly pleased to meet Samantha Flaherty (@flahertsy), definitely a name to watch out for over the next few years. Samantha was attending Testbash Brighton courtesy of Patrick's immense generosity, mentioned earlier in the post. Based on the blog post she wrote on her experience in Brighton (in a much more timely fashion than this I might add), I sense she's caught the testing community bug and has a lot to offer:</p>\n\n<blockquote>\n  <p><a href=\"https://thisgirltests.com/2018/03/18/the-chain-reaction-of-self-belief-3-post-test-bash-thoughts/\">https://thisgirltests.com/2018/03/18/the-chain-reaction-of-self-belief-3-post-test-bash-thoughts/</a>  </p>\n</blockquote>\n\n<p>I don't think the lineup could have hoped for a better talk to kick things off. Arguably one of my favourite talks of the day by Emily Webber (@ewebber) and on a subject close to my heart, Communities of Practice. Emily's talk had everything, confidence, humour, relevance and practicality - does that make me an Emily Webber fanboy? The basis of what community practices should be doing - exploring together and then expanding to the wider team is captured perfectly in Emily's slide below: <br />\n<img src=\"/content/images/2018/05/CofP.jpg\" alt=\"\" />\nSuffice to say I was also excited to hear Danny's conference debut. After conversations with Danny the previous night and briefly on the morning of the conference I had an incline of the nerves he was feeling. I found myself glancing across occasionally during Emily's talk to see how he was handling his nerves and I dare say he doesn't remember much about the first talk. I'm not sure exactly what happened or how it happened but he needn't have worried because once on stage it was as though all nerves just vanished. What can I say..... the boy's got skills on stage. I found Danny's talk, on his journey to testing and his approach to learning, exceptional and particularly relevant to my own path this year in trying to inspire and help others progress. His talk was ideal talk for attendees early in their testing careers, wanting inspiration and advice to move forward such as Samantha and Leila Gregory (@swanny). A quick note on Leila, who was attending her first Testbash. Looking for her first break into a career in testing, 'Swanny' to the bold step of attending and taking the opportunity to show ambition to get into testing, eagerness to learn, and willingness to push her limits. In my experience the traits Leila showed at Testbash are every bit as important and desirable as experience and knowledge of testing. <br />\nDanny's talk was followed by the infectious Rosie Hamilton (@Rosicadia) with a fascinating talk about the logic behind how we test and how this logic has been developed for Rosie through her games testing experience. Rosie's talk also emphasised the value of understanding why you make the decisions you make and how to use that understanding to improve. Straight after Rosie was Aaron Hodder (@AWGHodder) making a really compelling experience based case for putting enough structure around exploratory testing (otherwise known as testing) to meet the demands and pressures of enterprise development. Giving testers (or in his case business users) the freedom to test whilst also delivering 'required' visibility and reporting around progress.... some definite takeaways that I intend to try from Aaron's talk. <br />\nI'll take a brief moment away from the talks to give mentions to two new ideas that MoT trialled at Testbash Brighton. Firstly they introduced a quiet room which included an area for people to sit and colour in. Sounds simplistic? It was in my opinion a master stroke. I don't have a huge amount of conference experience admittedly and one of the powerful things about conferences is the opportunity to chat with peers and discuss ideas......... <strong>HOWEVER</strong> (and it's an important however)......... conferences encourage a wide variety of people to attend and the number of people within a relatively small space can be quite overwhelming for many. At every conference attended by myself I've needed to find time to just stand/sit and think. Generally just 10 minutes or so but absolutely necessary. In my honest opinion somewhere designated for this provision gives a clear statement that it's ok to need time to yourself and fully encourages self help. Secondly a concept called the UnExpo, taking the basis of a typical expo where attendees visit stands of companies to learn about their products or services and turning it on it's head encouraging engagement between attendees during breaks. I've just read the overview on the MoT site so rather than explain any more details I'll just leave you with a link:</p>\n\n<blockquote>\n  <p><a href=\"https://www.ministryoftesting.com/news/the-unexpo-a-novel-approach-to-increase-conference-attendee-engagement-and-maximise-community-feels\">https://www.ministryoftesting.com/news/the-unexpo-a-novel-approach-to-increase-conference-attendee-engagement-and-maximise-community-feels</a></p>\n</blockquote>\n\n<p>Without doubt I think there are some lessons that will have been learnt around the UnExpo. I found myself targeting specific types of presentations/stands that seemed easier to engage with in shorter time frame. I was heading for unmanned stands and stands where engagement was easier and avoiding busier stands.... I guess thats generally my behaviour for any expo based structure. On the whole though I was hugely impressed. It seemed to get a lot of attention and many of the ideas that were on offer were excellent and did the job of encouraging engagement. I think this is an idea that proved successful in it's first outing and something that, now people have a clear picture of what to expect, will grow over the next year or two into something outstanding. <br />\nNext up giving a talk was Matt Long (@burythehammer) talking about testing programmable infrastructure. <br />\n<img src=\"/content/images/2018/05/ProgramInfrastructure.jpg\" alt=\"\" /></p>\n\n<p>Arguably the first technical talk, Matt presented some excellent thoughts around why proving the infrastructure we rely on throughout a delivery pipeline is as important to test as the product itself (hell it's a part of the product deliverable). This included the first real definition of test at the conference and an excellent definition it was too:  </p>\n\n<blockquote>\n  <p>\"A method of discerning information about the quality of a system or product.\" </p>\n</blockquote>\n\n<p>Before jumping back to the talks, a brief nod to the amazing food provided. I'm a good boy, I generally eat all vegetables but the food provided was not something I would typically choose from a menu. Luckily I'm an eat anything put in front of me kinda bloke and on this occasion that proved to my benefit as the food provided was genuinely delicious. I believe it was also locally sourced and provided by a company called Spade and Spoon (@spadeandspoon), so massive credit to them. <br />\nThe unenviable task of getting the attendees re-engaged after lunch fell to probably the best person for the job. Alan Page (@alanpage) is what could only be described in the testing community as a big draw, with a huge amount of experience in testing at some of the biggest names, including Microsoft. His talk was 'Experiences in Modern Testing' focused on the changing landscape of the role of testers, possibly the most talked about topic in the testing community over recent years and still going strong. Alan essentially advocates embracing the changing testing role, becoming the test specialist, the test coach, engaging with developers, understanding data and expanding the skill set to support those aims. The mission:  </p>\n\n<blockquote>\n  <p>\"Accelerate the achievement of shippable quality\"</p>\n</blockquote>\n\n<p>Geoff Loken was an interesting talk on many levels. He took his talk, about how academia views testing, head on with no slides and with a subject that without doubt deserves much more exposure. It was an excellent dip into a subject that seems like it might be a missing piece of a jigsaw. Academically there is a lot of focus on programming, if only we could build a recognition of quality and testing into peoples appreciation at that early stage - feels like some research is needed. <br />\nElizabeth Zagroba (@ezagroba) &amp; Diana Wendruff (@ducksnsquirrels) gave us our first joint talk of the day and I have to say, they nailed it. They appear entirely on the same wave length with great chemistry and delivered an excellent and engaging talk. I must confess I had my reservations as the whole 'less is more' phrase gets banded around in all manner of contexts. In this instance though the context couldn't be more appropriate. Communication for testers is quite often either misunderstood, undervalued or just ignored. The talk gave an excellent explanation of why strong communication doesn't necessarily mean more communication and the use of persona's to explain this really helped the message resinate with me. The inclusion and explanation of the spoon theory to sell the value of not over exerting yourself with unnecessary use of energy slotted into the message nicely. <br />\n<img src=\"/content/images/2018/06/spoontheory-1.jpg\" alt=\"\" />\nThe final talk was a real treat to end with. Ash Winter (@northern_tester) is one of those individuals in the testing community that I've followed on twitter, read blog posts from and generally wanted to hear talk for a year or two. What I've read from Ash previously and what came across in this talk was a strong sense of practicality. Everything Ash touched on was discussed with a sense of practical value. I think the quote from Ash that resonated with me more than anything else throughout the day was</p>\n\n<blockquote>\n  <p>Each step on the pipeline = lens on quality </p>\n</blockquote>\n\n<p>Getting a grasp and understanding of continuous delivery is undoubtedly the key to allowing us to improve. The emphasis from Ash that it's not enough to just have a continuous delivery pipeline, testers need to really understand and engage in it, understand how it affects them, how it can help them make better decisions in testing and breakdown illusions about the product/delivery. Ultimately when you understand it and engage it, it will form the foundations of your strategy. Apologies for going all fanboy again but this final talk really re-enforced my own thoughts..... hell I've had a continuous delivery pipeline overview re-purposed as a test strategy before now.</p>\n\n<p>So that was that..... another amazing Testbash conference day came to an end......</p>\n\n<p>Really.....?</p>\n\n<h3 id=\"youvegot99seconds\">You've got 99 seconds</h3>\n\n<p>No fortunately not really. No Testbash is complete without the incredibly powerful 99 second talks. Somewhere between the start and end of Elizabeth and Diana's excellent talk I decided I was going to do a 99 second talk without the foggiest idea what I was going to talk about. If you read my blogs from Testbash Manchester last year my entire focus for the year leading up to it had been on what I would talk about. This time I'm not going to focus on my own talk/experience except to say that I chose to do a 99 second talk to maintain momentum of getting up and talking in front of large groups of people. What I'd really like to focus on is two out of a plethora of amazing 99 second talks that.... to coin an Americanism....... 'hit the ball outta the park'. Firstly Constance Hermit (@constancehermit) otherwise known as the resident Artful Tester because of her amazing drawings (her cartoon of Testbash Brighton can be checked out at <a href=\"https://ministryoftesting.com/dojo/lessons/the-artful-tester-episode-two-trip-to-testbash-brighton\">https://ministryoftesting.com/dojo/lessons/the-artful-tester-episode-two-trip-to-testbash-brighton</a>). Constance gave the most elegant 99 second talk about being kind in the face of the more falable aspects of human nature. People may have problems with the how many questions we ask as testers but it's in our power to accept that and return kindness. <br />\nFollowing Constance was Ali Hill (@ali_hill91) and I honestly believe that this was the most effective use of 99 seconds I've ever heard. Ali essentially turned the train spotting 'Choose life' monologue into a talk about not being a testing hero but instead finding the right work life balance and avoiding burning out. I honestly cannot do it justice in words, it truly blew my mind. My recommendation is to get over and watch it for yourself at MoT - <a href=\"https://dojo.ministryoftesting.com/dojo/lessons/99-second-talks-testbash-brighton-2018\">https://dojo.ministryoftesting.com/dojo/lessons/99-second-talks-testbash-brighton-2018</a></p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>So here I find myself at the end..... no really this time it is the end. I fear I may have failed Rosie with this blog post after promising something to overshadow my Testbash Manchester blog post but alas I find myself with too much to write about.</p>\n\n<p>So Testbash Brighton: <br />\nDid it meet my expectations? Nope.... it far exceeded them. It brought all the values I hold dear within testing together into one package..... community, conversation, experimenting, meeting, learning, doing, empathising, engaging, laughing and sharing.</p>\n\n<p>As I sign off, I will end by thanking MoT including Rosie, Richard and the growing list of MoT staff helping to make Testbash so amazing around the world. Also and importantly those in the testing community who volunteered to help out and wore their blue jackets with pride. The conference went off so smoothly because of the support you guys provided to the MoT staff, I really can not praise you all enough.</p>","amp":null,"image":null,"featured":0,"page":0,"status":"published","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"author_id":2,"created_at":"2018-05-09 20:55:28","created_by":2,"updated_at":"2018-06-02 09:36:52","updated_by":2,"published_at":"2018-06-01 23:59:35","published_by":2},{"id":26,"uuid":"8a2ce9ec-6828-45a0-b5b9-92b4ed505a78","title":"Staffs Tester Gathering","slug":"staffstesters","markdown":"Next Staffs Tester Gathering : October - Date TBC\n\nLast Staffs Tester Gathering : July 4th 2018\nSlides available at:\nhttps://www.dropbox.com/sh/s424pduak8z1rac/AADjKXiY4luSXyTOP6G1mCvra?dl=0\n\nPictures from the night\n![](/content/images/2018/07/IMG_6968.JPG)\n![](/content/images/2018/07/highres_472633589.jpeg)\n![](/content/images/2018/07/IMG_0565.JPG)\n![](/content/images/2018/07/IMG_4518.JPG)\n![](/content/images/2018/07/IMG_3028.JPG)","mobiledoc":null,"html":"<p>Next Staffs Tester Gathering : October - Date TBC</p>\n\n<p>Last Staffs Tester Gathering : July 4th 2018 <br />\nSlides available at: <br />\n<a href=\"https://www.dropbox.com/sh/s424pduak8z1rac/AADjKXiY4luSXyTOP6G1mCvra?dl=0\">https://www.dropbox.com/sh/s424pduak8z1rac/AADjKXiY4luSXyTOP6G1mCvra?dl=0</a></p>\n\n<p>Pictures from the night <br />\n<img src=\"/content/images/2018/07/IMG_6968.JPG\" alt=\"\" />\n<img src=\"/content/images/2018/07/highres_472633589.jpeg\" alt=\"\" />\n<img src=\"/content/images/2018/07/IMG_0565.JPG\" alt=\"\" />\n<img src=\"/content/images/2018/07/IMG_4518.JPG\" alt=\"\" />\n<img src=\"/content/images/2018/07/IMG_3028.JPG\" alt=\"\" /></p>","amp":null,"image":"/content/images/2018/07/STG-header-7.png","featured":0,"page":1,"status":"published","language":"en_US","visibility":"public","meta_title":"Staffs Tester Gathering","meta_description":"The home of Staffs Tester Gathering. Resources, Pictures and updates.","author_id":2,"created_at":"2018-07-09 21:28:28","created_by":2,"updated_at":"2018-07-12 20:34:55","updated_by":2,"published_at":"2018-07-09 21:28:39","published_by":2}],"users":[{"id":1,"uuid":"81a84800-57a2-41ba-823f-58584a937c14","name":"UserName LastName","slug":"username","password":"$2a$10$66DmP8l4SIcIty9lkZ4.AOOvKPyd48rxLAD2kZ60KrNzIZZoA3Ba.","email":"user@example.com","image":null,"cover":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_login":"2017-03-19 16:46:28","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2017-03-19 16:46:28","updated_by":1},{"id":2,"uuid":"79e895b2-7a91-4efc-b096-54bc2727d183","name":"Matt Parker","slug":"matthew-parker","password":"$2a$06$rFvXTCJyckAT1KmP7EU97OZ6H76kqUyP8xWV3GEAUc6E7PTgfJrxa","email":"mattcparker@virginmedia.com","image":"/content/images/2016/Mar/image-1.jpg","cover":"/content/images/2014/Aug/ansel-adams-tetons-snake-river.jpg","bio":"16 years in software development, 12 of those in software testing, 6 years test automation and 4 years in an Agile environment. What have I learnt?\nThere is no right way to test just a right mindset.","website":null,"location":"In fields of green","facebook":null,"twitter":null,"accessibility":null,"status":"active","language":"en_US","visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_login":"2018-07-20 12:33:28","created_at":"2017-03-19 15:48:37","created_by":1,"updated_at":"2018-07-20 12:33:28","updated_by":2}],"roles":[{"id":1,"uuid":"b6520149-0b58-40ab-89f8-c208a03d73a9","name":"Administrator","description":"Administrators","created_at":"2016-10-28 13:24:53","created_by":1,"updated_at":"2016-10-28 13:24:53","updated_by":1},{"id":2,"uuid":"70eb5315-aa98-48ca-8545-e13dc9b26f7c","name":"Editor","description":"Editors","created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":3,"uuid":"44e7d495-be6f-4273-b78b-baba96da43fd","name":"Author","description":"Authors","created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":4,"uuid":"8098a973-0997-498b-824b-fff1c96b8c2a","name":"Owner","description":"Blog Owner","created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1},{"id":2,"role_id":1,"user_id":2}],"permissions":[{"id":1,"uuid":"76aa3da3-2038-45e2-bd00-c72080aa79c6","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":2,"uuid":"fcbd4047-b4be-4b07-9cb9-5c39f7c0207b","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":3,"uuid":"dc9203de-5868-4ce7-a5de-2e9bbdb376ad","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":4,"uuid":"abb23e46-3fda-494e-a254-79ab43d7ee57","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":5,"uuid":"8294b6d1-f0ec-4f0c-9c85-3aced6ac780b","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":6,"uuid":"965535bc-f1a3-4121-835f-c23120b9282a","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":7,"uuid":"7092ecdd-c4bc-4f9b-a750-b4586d9f256d","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":8,"uuid":"78e4ce09-2cac-4cb0-bd5a-a9a14b60c30d","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":9,"uuid":"3c8f780b-e610-402a-ac3d-9c4449a91b5c","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":10,"uuid":"a55c2729-22e2-4578-994c-af0ddcc0e71f","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":11,"uuid":"db336569-783c-4eb1-88e5-2afe757c3f77","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":12,"uuid":"ab2aa255-8c63-44e9-b1db-dead90652677","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":13,"uuid":"b937ea17-1c31-413f-b15f-d6618353ff78","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":14,"uuid":"f4393942-8164-416b-8414-69e2223d181f","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":15,"uuid":"2c93f138-101e-46fc-8517-a36b5dfce857","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":16,"uuid":"5361b5fe-a6a2-4c4b-b157-29c5445f2ea3","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":17,"uuid":"ecd63090-c553-46f9-a3aa-04c9f6a2c81d","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":18,"uuid":"65774345-6c16-4c58-b9d7-d8e405a1c34e","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":19,"uuid":"fd90d32c-8f54-4276-a385-999dae187e92","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":20,"uuid":"010b707d-516f-4b75-948e-5255699a5f99","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":21,"uuid":"64751958-d460-42db-b4e2-1b08ff638ff7","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":22,"uuid":"6eafaa79-6b6e-4a36-8f68-1061640c9b34","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":23,"uuid":"ba4d8647-1676-40da-a702-00c2bacb9a5e","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":24,"uuid":"c65480fd-a4c9-41e4-a158-e83448db90f8","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":25,"uuid":"0f81b526-b32a-41fc-84f0-dc40c660c3cd","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":26,"uuid":"57662cb5-ce84-411f-8b2c-2079549db655","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":27,"uuid":"9dbe582c-e5e7-41b6-9716-dcd61d085c87","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":28,"uuid":"b0068716-3c79-41dc-8b6d-f955affd17ae","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":29,"uuid":"3211d98e-50ea-446d-9bc8-041af9bcb103","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":30,"uuid":"f1da79da-5e7a-47c7-9c02-8e08f7a978e2","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":31,"uuid":"e43f697f-3562-4dd7-84ba-2f83fcc4b0bd","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":32,"uuid":"2ef5ce94-dfbf-4ac5-a42f-26d21f9c086f","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":33,"uuid":"4baad648-c25b-4379-9278-ec2fe4e29f7c","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":34,"uuid":"e8b8cf92-aa7f-42b7-bff8-284f8f69ee73","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":35,"uuid":"53bb3b86-6bb6-4c05-a7ae-a4f49571820f","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":36,"uuid":"18ea757e-4726-4964-b654-5ea40d6386c3","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":37,"uuid":"94fbad61-6d12-4c83-a7dd-47aed04304d5","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":38,"uuid":"2ee87909-5970-4c2f-bc4b-5016e49e695f","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":39,"uuid":"fb4e24c4-f526-4ee4-b6ec-e0dd92292a0f","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":40,"uuid":"2d3f1510-387d-44e7-906d-16651588b331","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":41,"uuid":"ee5893f6-4c87-4e3b-a244-8c55dd925486","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":42,"uuid":"f8c82d78-aa0d-47f4-99ef-b2d4bbb4cff8","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1},{"id":43,"uuid":"3e58e31e-597d-49c2-8bf8-7e113f3b901e","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2016-10-28 13:24:54","created_by":1,"updated_at":"2016-10-28 13:24:54","updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":2},{"id":2,"role_id":1,"permission_id":3},{"id":3,"role_id":1,"permission_id":1},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":1,"permission_id":31},{"id":32,"role_id":1,"permission_id":32},{"id":33,"role_id":1,"permission_id":33},{"id":34,"role_id":1,"permission_id":34},{"id":35,"role_id":1,"permission_id":35},{"id":36,"role_id":1,"permission_id":36},{"id":37,"role_id":1,"permission_id":37},{"id":38,"role_id":1,"permission_id":38},{"id":39,"role_id":1,"permission_id":39},{"id":40,"role_id":1,"permission_id":40},{"id":41,"role_id":1,"permission_id":41},{"id":42,"role_id":1,"permission_id":42},{"id":43,"role_id":1,"permission_id":43},{"id":44,"role_id":2,"permission_id":8},{"id":45,"role_id":2,"permission_id":9},{"id":46,"role_id":2,"permission_id":10},{"id":47,"role_id":2,"permission_id":11},{"id":48,"role_id":2,"permission_id":12},{"id":49,"role_id":2,"permission_id":13},{"id":50,"role_id":2,"permission_id":14},{"id":51,"role_id":2,"permission_id":16},{"id":52,"role_id":2,"permission_id":17},{"id":53,"role_id":2,"permission_id":18},{"id":54,"role_id":2,"permission_id":19},{"id":55,"role_id":2,"permission_id":20},{"id":56,"role_id":2,"permission_id":21},{"id":57,"role_id":2,"permission_id":27},{"id":58,"role_id":2,"permission_id":28},{"id":59,"role_id":2,"permission_id":29},{"id":60,"role_id":2,"permission_id":30},{"id":61,"role_id":2,"permission_id":31},{"id":62,"role_id":2,"permission_id":32},{"id":63,"role_id":2,"permission_id":33},{"id":64,"role_id":2,"permission_id":34},{"id":65,"role_id":2,"permission_id":35},{"id":66,"role_id":2,"permission_id":36},{"id":67,"role_id":2,"permission_id":37},{"id":68,"role_id":2,"permission_id":38},{"id":69,"role_id":2,"permission_id":42},{"id":70,"role_id":3,"permission_id":8},{"id":71,"role_id":3,"permission_id":9},{"id":72,"role_id":3,"permission_id":11},{"id":73,"role_id":3,"permission_id":13},{"id":74,"role_id":3,"permission_id":14},{"id":75,"role_id":3,"permission_id":16},{"id":76,"role_id":3,"permission_id":17},{"id":77,"role_id":3,"permission_id":18},{"id":78,"role_id":3,"permission_id":20},{"id":79,"role_id":3,"permission_id":27},{"id":80,"role_id":3,"permission_id":28},{"id":81,"role_id":3,"permission_id":33},{"id":82,"role_id":3,"permission_id":34},{"id":83,"role_id":3,"permission_id":35},{"id":84,"role_id":3,"permission_id":36},{"id":85,"role_id":3,"permission_id":37},{"id":86,"role_id":3,"permission_id":38},{"id":87,"role_id":3,"permission_id":42}],"permissions_apps":[],"settings":[{"id":1,"uuid":"07a4284f-3323-4068-a401-a590748f977a","key":"databaseVersion","value":"009","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:55","updated_by":1},{"id":2,"uuid":"c97c55ab-f834-468b-aa23-23898bb38673","key":"dbHash","value":"14ad5887-69b3-4ad3-88ad-a44fcc31eb0d","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:56","updated_by":1},{"id":3,"uuid":"d2757fc5-a460-42c3-875b-cc1c17f1995a","key":"nextUpdateCheck","value":"1532165954","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-20 09:39:14","updated_by":1},{"id":4,"uuid":"48986abd-45e0-4374-a7bb-1e031bfdab63","key":"displayUpdateNotification","value":"0.11.2","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:57","updated_by":1},{"id":5,"uuid":"985f6dba-f8ac-4261-9ff9-93bf8108a7c4","key":"seenNotifications","value":"[]","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:55","updated_by":1},{"id":6,"uuid":"df71d45d-8b73-4c03-93c2-e96e166171e9","key":"migrations","value":"{}","type":"core","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:55","updated_by":1},{"id":7,"uuid":"11e672c0-c6ea-4250-bb21-4b73dacece3b","key":"title","value":"Testing Tackled","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":8,"uuid":"a6ae2760-374c-462a-a347-63d738fe680e","key":"description","value":"Testing, testing and a bit more testing. Contracts, consultancy or coaching.","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":9,"uuid":"7e2e3088-9a86-46e5-ba08-e629cbad87b7","key":"logo","value":"/content/images/2017/09/Logo-strip-blue500x100-4.png","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":10,"uuid":"11224419-07f8-4e11-965e-fbd5b0a7dfe2","key":"cover","value":"/content/images/2017/09/IMG_1563.PNG","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":11,"uuid":"33bc88fb-65a8-47f9-8e06-bd991c2a66ce","key":"defaultLang","value":"en_US","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":12,"uuid":"9535fefb-f1ac-4b55-a2e6-4876d54b4ad1","key":"postsPerPage","value":"6","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":13,"uuid":"e3cb8e4b-c3c2-4f4a-a3c8-6d50d2941c09","key":"activeTimezone","value":"Etc/UTC","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":14,"uuid":"371aa73b-dddc-464a-9a43-5196c88a565a","key":"forceI18n","value":"true","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":15,"uuid":"a0e9157a-1779-4d5d-8849-7edfc24f1521","key":"permalinks","value":"/:slug/","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":16,"uuid":"759904af-d841-48fc-b925-fb69a504b691","key":"ghost_head","value":"<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-54172929-1', 'auto');\n  ga('send', 'pageview');\n\n</script>","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":17,"uuid":"2b4be844-715d-46cc-bf15-9e845a1c5178","key":"ghost_foot","value":"","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":18,"uuid":"156e92a2-07ab-4f3b-8082-a20a2a6500ee","key":"facebook","value":"","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":19,"uuid":"dffd8e49-722e-4634-9f40-8aee31b48473","key":"twitter","value":"@TestingTackled","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":20,"uuid":"127cba60-a20a-4b6d-b638-3fb0597bd8ae","key":"labs","value":"{\"subscribers\":true}","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":21,"uuid":"c356ef55-bdd2-4561-978d-ddb9a53da0a8","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"http://www.testingtackled.co.uk\"},{\"label\":\"Services\",\"url\":\"http://www.testingtackled.co.uk/services/\"},{\"label\":\"About\",\"url\":\"http://www.testingtackled.co.uk/about/\"},{\"label\":\"Contact\",\"url\":\"/contact/\"},{\"label\":\"Resources\",\"url\":\"/resources/\"},{\"label\":\"Staffs Tester Gathering\",\"url\":\"/staffstesters/\"}]","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":22,"uuid":"ec70c50b-4476-402c-8bbc-77b864d454ef","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":23,"uuid":"39051972-3452-46eb-8b15-2c297e1bbd99","key":"activeApps","value":"[]","type":"app","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2016-10-28 13:24:55","updated_by":1},{"id":24,"uuid":"034299e8-9d39-42ae-a5b8-1276d2501702","key":"installedApps","value":"[]","type":"app","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2017-11-19 22:48:46","updated_by":1},{"id":25,"uuid":"6bf1ede4-5ede-48df-8451-73db8c407ad1","key":"isPrivate","value":"false","type":"private","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":26,"uuid":"f9dcdb92-e0e4-4788-82ca-6bfd47fe4fb2","key":"password","value":"xazici316","type":"private","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2},{"id":27,"uuid":"fdc96fd1-e0c7-4c08-a564-51f49acca2a3","key":"activeTheme","value":"covalent-master","type":"theme","created_at":"2016-10-28 13:24:55","created_by":1,"updated_at":"2018-07-09 22:17:07","updated_by":2}],"tags":[{"id":1,"uuid":"76c36930-9737-444c-8f18-d3a1575d679d","name":"Getting Started","slug":"getting-started","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-10-28 13:24:53","created_by":1,"updated_at":"2016-10-28 13:24:53","updated_by":1},{"id":2,"uuid":"32c57422-71e0-43fc-842f-eb26d3624bd5","name":"general","slug":"general","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":3,"uuid":"430e624b-1016-47aa-95a6-13c32892ebd7","name":"Quality Assurance","slug":"quality-assurance","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":4,"uuid":"b5773027-5b1e-46a9-8ef2-34bead704261","name":"Team Roles","slug":"team-roles","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":5,"uuid":"e9d9f913-6835-4731-b4f0-5a43b7b5a949","name":"Test Improvement","slug":"test-improvement","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":6,"uuid":"f4b5c0fe-6258-43d5-b8ad-ab2da99309c8","name":"Testing","slug":"testing","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":7,"uuid":"bb4a81b6-9a8b-4650-8685-41c23fbc3670","name":"Process","slug":"process","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":8,"uuid":"97dedd01-43b7-4654-b3bb-d1806da7386c","name":"GeneralStandardisation","slug":"generalstandardisation","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":9,"uuid":"3374764d-c2e4-4091-8439-f95655f74a22","name":"P","slug":"p","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":10,"uuid":"a5a4465f-307c-4a47-936c-085a78b1667d","name":"Testing Process","slug":"testing-process","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":11,"uuid":"68f53588-de06-4d6a-acaa-113dbdfb126c","name":"Attitude","slug":"attitude","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":12,"uuid":"e4851083-dd90-45ae-ab3a-413b40ff7e69","name":"Test Automation","slug":"test-automation","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 15:48:37","created_by":2,"updated_at":"2017-03-19 15:48:37","updated_by":1},{"id":13,"uuid":"060126b8-9b76-47a4-9b09-025f718b0c82","name":"about me","slug":"about-me","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-19 23:04:42","created_by":2,"updated_at":"2017-03-19 23:04:42","updated_by":2},{"id":14,"uuid":"bf99c8c0-89c1-49ca-9968-b23487f0297a","name":"about","slug":"about","description":null,"image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-07-25 21:14:26","created_by":2,"updated_at":"2017-07-25 21:14:26","updated_by":2}],"posts_tags":[{"id":1,"post_id":1,"tag_id":1,"sort_order":0},{"id":2,"post_id":2,"tag_id":2,"sort_order":0},{"id":3,"post_id":3,"tag_id":3,"sort_order":0},{"id":4,"post_id":4,"tag_id":8,"sort_order":0},{"id":5,"post_id":5,"tag_id":5,"sort_order":0},{"id":6,"post_id":6,"tag_id":3,"sort_order":0},{"id":7,"post_id":9,"tag_id":6,"sort_order":0},{"id":8,"post_id":10,"tag_id":12,"sort_order":0},{"id":9,"post_id":3,"tag_id":4,"sort_order":1},{"id":10,"post_id":5,"tag_id":6,"sort_order":1},{"id":11,"post_id":6,"tag_id":7,"sort_order":1},{"id":12,"post_id":9,"tag_id":10,"sort_order":1},{"id":13,"post_id":5,"tag_id":7,"sort_order":2},{"id":14,"post_id":9,"tag_id":11,"sort_order":2},{"id":16,"post_id":15,"tag_id":14,"sort_order":0}],"apps":[],"app_settings":[],"app_fields":[],"subscribers":[{"id":1,"uuid":"8b74ee06-8f0d-48f6-9299-24e71f9f91c9","name":null,"email":"fritzius.michael@gmail.com","status":"subscribed","post_id":null,"subscribed_url":"http://ec2-34-249-187-239.eu-west-1.compute.amazonaws.com/is-curiosity-more-valuable-than-knowledge/?utm_source=feedburner&utm_medium=email&utm_campaign=Feed%3A+mottestingfeeds+%28Testing+Feeds+-+Bloggers%29","subscribed_referrer":"","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2017-07-06 12:49:12","created_by":0,"updated_at":"2017-07-06 12:49:12","updated_by":0},{"id":2,"uuid":"0d867953-24b8-427b-87ca-45fc9e539f33","name":null,"email":"code.justdo@gmail.com","status":"subscribed","post_id":16,"subscribed_url":"http://ec2-34-249-187-239.eu-west-1.compute.amazonaws.com/is-curiosity-more-valuable-than-knowledge/","subscribed_referrer":"","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2017-08-21 18:12:25","created_by":0,"updated_at":"2017-08-21 18:12:25","updated_by":0},{"id":3,"uuid":"5fee6fe5-0f0b-4d26-8fa5-31f1035c79c9","name":null,"email":"pranavtest92@gmail.com","status":"subscribed","post_id":21,"subscribed_url":"http://www.testingtackled.co.uk/a-journey-to-99-seconds-and-beyond-part-2/","subscribed_referrer":"","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2017-11-20 16:28:12","created_by":0,"updated_at":"2017-11-20 16:28:12","updated_by":0},{"id":4,"uuid":"ff6d1ed3-07aa-424e-bd32-52cfbddbec97","name":null,"email":"richleedsuk@yahoo.co.uk","status":"subscribed","post_id":22,"subscribed_url":"http://www.testingtackled.co.uk/a-journey-to-99-seconds-and-beyond-part-3/","subscribed_referrer":"http://www.testingtackled.co.uk/","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-01-09 16:30:59","created_by":0,"updated_at":"2018-01-09 16:30:59","updated_by":0},{"id":5,"uuid":"cd21514f-22a0-4b49-a36e-6ede080badad","name":null,"email":"raj3sh@gmail.com","status":"subscribed","post_id":null,"subscribed_url":"http://www.testingtackled.co.uk/subscribe/","subscribed_referrer":"http://www.testingtackled.co.uk/services/","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-01-28 18:45:31","created_by":0,"updated_at":"2018-01-28 18:45:31","updated_by":0},{"id":6,"uuid":"f7cd9744-5f8e-4072-b27d-29ba7ccf52ee","name":null,"email":"paul.brookes@landg.com","status":"subscribed","post_id":null,"subscribed_url":"http://www.testingtackled.co.uk/seaside-adventures-in-test/?goal=0_02cca1920b-355b184d97-289466933&mc_cid=355b184d97&mc_eid=e542555d86","subscribed_referrer":"","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-06-22 14:18:51","created_by":0,"updated_at":"2018-06-22 14:18:51","updated_by":0}]}}]}